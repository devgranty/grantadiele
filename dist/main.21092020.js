(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{tjUo:function(t,e,a){"use strict";a.r(e);var s=a("oCYn"),n=a("jE9Z"),i=a("NC0y"),o=a.n(i),r=a("M7zF"),c=a("AoTc"),p=a.n(c),l=function(){var t=this.$createElement,e=this._self._c||t;return e("transition",{attrs:{"enter-active-class":"animate__animated animate__fadeInLeftBig","leave-active-class":"animate__animated animate__fadeOutLeftBig"}},[e("div",[e("app-nav"),this._v(" "),e("home-hero"),this._v(" "),e("div",{directives:[{name:"scroll-spy",rawName:"v-scroll-spy"}]},[e("home-me"),this._v(" "),e("home-showcase"),this._v(" "),e("home-whyme"),this._v(" "),e("app-footer")],1)],1)])};l._withStripped=!0;var h=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("header",{staticClass:"navbar animate__animated animate__slideInDown animate__delay-3s"},[a("div",{directives:[{name:"scroll-spy-active",rawName:"v-scroll-spy-active",value:{selector:".scrollspy-find",class:"scrollspy-active"},expression:"{selector: '.scrollspy-find', class: 'scrollspy-active'}"}],staticClass:"navbar-container"},[a("router-link",{attrs:{to:"/"}},[a("img",{staticClass:"navbar-brand-logo",attrs:{src:t.navLogoPath,alt:"ga",width:"50",height:"50"}})]),t._v(" "),a("nav",{staticClass:"navbar-links",attrs:{role:"navigation"}},[a("ul",t._l(t.navbarLinks,(function(e){return a("li",{key:e.title},[a("router-link",{staticClass:"scrollspy-find",attrs:{to:e.link}},[t._v(t._s(e.title))])],1)})),0)]),t._v(" "),a("div",[a("button",{staticClass:"navbar-menu-btn",attrs:{id:"navbarModalBtn",role:"button","aria-haspopup":"true"},on:{click:function(e){t.showMenu=!t.showMenu}}},[t._v(t._s(t.showMenu?"Close":"Menu"))]),t._v(" "),a("transition",{attrs:{"enter-active-class":"animate__animated animate__fadeInRightBig","leave-active-class":"animate__animated animate__fadeOutRightBig"}},[a("nav",{directives:[{name:"show",rawName:"v-show",value:t.showMenu,expression:"showMenu"}],staticClass:"navbar-modal",attrs:{id:"navbarModal",role:"menu","aria-modal":"true"}},[a("ul",{directives:[{name:"scroll-spy-active",rawName:"v-scroll-spy-active",value:{selector:".scrollspy-find",class:"scrollspy-active"},expression:"{selector: '.scrollspy-find', class: 'scrollspy-active'}"}],staticClass:"nav-link"},t._l(t.navbarLinks,(function(e){return a("li",{key:e.title},[a("router-link",{staticClass:"scrollspy-find",attrs:{to:e.link},nativeOn:{click:function(e){t.showMenu=!t.showMenu}}},[t._v(t._s(e.title))])],1)})),0),t._v(" "),a("ul",{staticClass:"media-profiles-ul",staticStyle:{color:"#000"}},[a("li",[a("a",{attrs:{href:"https://github.com/devgranty",target:"_blank"}},[a("i",{staticClass:"fab fa-github"})])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://ng.linkedin.com/in/grant-adiele-6533741b3",target:"_blank"}},[a("i",{staticClass:"fab fa-linkedin"})])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://twitter.com/devgranty",target:"_blank"}},[a("i",{staticClass:"fab fa-twitter-square"})])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.instagram.com/devgranty/",target:"_blank"}},[a("i",{staticClass:"fab fa-instagram"})])])])])])],1)],1)])};h._withStripped=!0;var d={data:function(){return{navLogoPath:"./assets/logos/ga-logo-600x600.png",navbarLinks:[{link:"/#me",title:"Me"},{link:"/#showcase",title:"Showcase"},{link:"/#whyme",title:"Why Me"},{link:"/#contact",title:"Contact"}],showMenu:!1}},methods:{hideNav(){var t=window.pageYOffset;window.onscroll=function(){var e=window.pageYOffset,a=document.querySelector(".navbar");a.style.top=t>e?"0":"-100px",t=e}}},created:function(){this.hideNav()}},m=a("KHd+"),g=Object(m.a)(d,h,[],!1,null,null,null);g.options.__file="src/components/layout/AppNav.vue";var v=g.exports,u=function(){var t=this.$createElement;this._self._c;return this._m(0)};u._withStripped=!0;var f={},_=Object(m.a)(f,u,[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"hero",attrs:{id:"myHero"}},[e("div",{staticClass:"hero-welcome-board"},[e("h1",{staticClass:"animate__animated animate__bounceInDown"},[this._v("Web Designer, Developer & Machine Learning enthusiast in Nigeria.")])]),this._v(" "),e("div",{staticClass:"animate__animated animate__bounce animate__infinite animate__delay-4s hero-scroll-down"},[e("i",{staticClass:"fas fa-chevron-up icon-gradient",attrs:{"aria-hidden":"true"}})])])}],!1,null,null,null);_.options.__file="src/pages/HomePage/HomeHero.vue";var y=_.exports,b=function(){var t=this.$createElement,e=this._self._c||t;return e("section",{staticClass:"page-section variation-section"},[e("div",{staticClass:"inner-container"},[e("h1",{staticClass:"section-heading",attrs:{id:"me"}},[this._v("Me "),e("router-link",{attrs:{to:"#me"}},[e("i",{staticClass:"fas fa-link section-anchor-id icon-gradient",attrs:{"aria-hidden":"true"}})])],1),this._v(" "),this._m(0)])])};b._withStripped=!0;var w={},j=Object(m.a)(w,b,[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"about-me-note",attrs:{"data-aos":"fade"}},[e("p",[this._v("Hellooo! I'm Grant Adiele (Or you can call me Devgranty), an independent web designer/developer and machine learning enthusiast based in Nigeria.")]),this._v(" "),e("p",[this._v("My goal is to create functional and intutive interfaces that captures users and promotes your brand.")]),this._v(" "),e("p",[this._v("Aside programming, I enjoy playing games, moonwalking, watching movies, listening to music and daydreaming.")])])}],!1,null,null,null);j.options.__file="src/pages/HomePage/HomeMe.vue";var C=j.exports,k=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("section",{staticClass:"page-section"},[a("div",{staticClass:"inner-container"},[a("h1",{staticClass:"section-heading",attrs:{id:"showcase"}},[t._v("Showcase "),a("router-link",{attrs:{to:"#showcase"}},[a("i",{staticClass:"fas fa-link section-anchor-id icon-gradient",attrs:{"aria-hidden":"true"}})])],1),t._v(" "),a("p",{staticClass:"section-headline"},[t._v("Some projects I've worked on independently.")]),t._v(" "),a("div",{staticClass:"container-fluid"},[a("div",{staticClass:"row"},t._l(t.projects,(function(e){return a("div",{key:e.title,staticClass:"col-12 col-lg-6 mb-4"},[a("div",{staticClass:"project-card",attrs:{"data-aos":"fade-up"}},[a("router-link",{staticClass:"project-link",attrs:{to:e.link}},[a("img",{staticClass:"project-thumbnail",attrs:{src:e.imagePath}}),t._v(" "),a("div",{staticClass:"project-details"},[a("h3",{style:e.details},[t._v(t._s(e.title))]),t._v(" "),a("h2",{style:e.details},[t._v(t._s(e.type))])])])],1)])})),0)])])])};k._withStripped=!0;var P={data:function(){return{projects:[{link:"case/project-nx",details:{color:"#000"},title:"project nx",type:"Web design, development",imagePath:"https://inspiring-bhabha-680629.netlify.app/project_nx/project-nx-cover-600x600.png"},{link:"case/movynet",details:{color:"#dd0404"},title:"movynet",type:"Web design, development",imagePath:"https://inspiring-bhabha-680629.netlify.app/movynet/movynet-cover-600x600.png"},{link:"case/jovianbiz",details:{color:"#fff"},title:"jovianbiz",type:"Web design, development",imagePath:"https://inspiring-bhabha-680629.netlify.app/jovianbiz/jovianbiz-cover-600x600.png"},{link:"case/myafriconnect",details:{color:"#fff"},title:"myafriconnect",type:"Web design, development",imagePath:"https://inspiring-bhabha-680629.netlify.app/myafriconnect/logos/logo-1080x1080.jpg"}]}}},x=Object(m.a)(P,k,[],!1,null,null,null);x.options.__file="src/pages/HomePage/HomeShowcase.vue";var D=x.exports,M=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("section",{staticClass:"page-section"},[a("div",{staticClass:"inner-container"},[a("h1",{staticClass:"section-heading",attrs:{id:"whyme"}},[t._v("Why Me "),a("router-link",{attrs:{to:"#whyme"}},[a("i",{staticClass:"fas fa-link section-anchor-id icon-gradient",attrs:{"aria-hidden":"true"}})])],1),t._v(" "),a("p",{staticClass:"section-headline"},[t._v('Still not convinced? Here are some "WHY ME" reasons.')]),t._v(" "),a("div",{staticClass:"whyme-carousel"},t._l(t.reasons,(function(e){return a("div",{key:e.title,staticClass:"carousel-cell"},[a("ul",[a("li",[a("i",{staticClass:"icon-gradient",class:e.iconClass,attrs:{"aria-hidden":"true"}})]),t._v(" "),a("li",[a("h2",[t._v(t._s(e.title))])]),t._v(" "),a("li",[t._v(t._s(e.comment))])])])})),0),t._v(" "),a("div",{staticClass:"whyme-reason"},[a("div",{staticClass:"row"},t._l(t.reasons,(function(e){return a("div",{key:e.title,class:e.columnClass},[a("div",{staticClass:"reason-cell",attrs:{"data-aos":"fade-up"}},[a("ul",[a("li",[a("i",{staticClass:"icon-gradient",class:e.iconClass,attrs:{"aria-hidden":"true"}})]),t._v(" "),a("li",[a("h2",[t._v(t._s(e.title))])]),t._v(" "),a("li",[t._v(t._s(e.comment))])])])])})),0)])])])};M._withStripped=!0;var S={data:function(){return{reasons:[{columnClass:"col-lg-4 offset-lg-4 mb-5",iconClass:"fas fa-smile",title:"Best Quality",comment:"Nothing but the BEST."},{columnClass:"col-lg-6 mb-5",iconClass:"fas fa-gem",title:"Fully Customized",comment:"Like nothing you've seen before, build it from the ground up."},{columnClass:"col-lg-4 offset-lg-1 mb-5",iconClass:"fas fa-money-bill-wave",title:"Affordable",comment:"Not to be mistaken for CHEAP."},{columnClass:"col-lg-4 offset-lg-1 mb-5",iconClass:"fas fa-shipping-fast",title:"Fast Delivery",comment:"Wouldn't have to rush it, just be there on time."},{columnClass:"col-lg-6 mb-5",iconClass:"fas fa-envelope",title:"Support",comment:"Provide all required assistance till you are up and running with your project."}]}}},I=Object(m.a)(S,M,[],!1,null,null,null);I.options.__file="src/pages/HomePage/HomeWhyme.vue";var L=I.exports,T=function(){var t=this.$createElement;this._self._c;return this._m(0)};T._withStripped=!0;var A={},E=Object(m.a)(A,T,[function(){var t=this.$createElement,e=this._self._c||t;return e("footer",{staticClass:"contact-footer",attrs:{id:"contact"}},[e("div",{staticClass:"inner-container"},[e("h1",{staticClass:"section-icon-heading"},[e("a",{attrs:{href:"#contact"}},[e("i",{staticClass:"fas fa-envelope icon-gradient",attrs:{"aria-hidden":"true"}})])]),this._v(" "),e("h2",{staticClass:"contact-note"},[this._v("You're a mail away. Email me at "),e("a",{attrs:{href:"mailto:hello.devgranty@gmail.com"}},[this._v("hello.devgranty@gmail.com")])]),this._v(" "),e("ul",{staticClass:"media-profiles-ul",staticStyle:{color:"#fff"}},[e("li",[e("a",{attrs:{href:"https://github.com/devgranty",target:"_blank"}},[e("i",{staticClass:"fab fa-github"})])]),this._v(" "),e("li",[e("a",{attrs:{href:"https://ng.linkedin.com/in/grant-adiele-6533741b3",target:"_blank"}},[e("i",{staticClass:"fab fa-linkedin"})])]),this._v(" "),e("li",[e("a",{attrs:{href:"https://twitter.com/devgranty",target:"_blank"}},[e("i",{staticClass:"fab fa-twitter-square"})])]),this._v(" "),e("li",[e("a",{attrs:{href:"https://www.instagram.com/devgranty/",target:"_blank"}},[e("i",{staticClass:"fab fa-instagram"})])])])])])}],!1,null,null,null);E.options.__file="src/components/layout/AppFooter.vue";var H=E.exports,N={components:{AppNav:v,HomeHero:y,HomeMe:C,HomeShowcase:D,HomeWhyme:L,AppFooter:H},data:function(){return{params:{title:"Design Portfolio of Grant Adiele",description:"The design portfolio of Grant Adiele, an independent web designer and developer based in Nigeria.",site_name:"Grant Adiele",site_url:"https://grantadiele.web.app/"}}},mounted:function(){particlesJS.load("myHero","./assets/json/myparticles-config.json");var t=document.querySelector(".whyme-carousel");new Flickity(t,{cellAlign:"center",contain:!0,wrapAround:!0,autoPlay:3500});AOS.init()},head:{title:function(){return{inner:this.params.title,seperator:"",complement:""}},meta:function(){return[{name:"robots",content:"index"},{name:"description",content:this.params.description},{name:"author",content:this.params.site_name},{property:"og:title",content:this.params.title},{property:"og:type",content:"website"},{property:"og:image",content:this.params.site_url+"assets/icons/ga-icon-256x256.png"},{property:"og:image:type",content:"image/png"},{property:"og:image:width",content:"256"},{property:"og:image:height",content:"256"},{property:"og:url",content:this.params.site_url},{property:"og:description",content:this.params.description},{property:"og:locale",content:"en_US"},{property:"og:site_name",content:this.params.site_name},{property:"twitter:card",content:"summary"},{property:"twitter:creator",content:"@devgranty"},{property:"twitter:title",content:this.params.title},{property:"twitter:description",content:this.params.description},{property:"twitter:image",content:this.params.site_url+"assets/icons/ga-icon-256x256.png"}]},link:function(){return[{rel:"canonical",href:this.params.site_url}]}}},z=Object(m.a)(N,l,[],!1,null,null,null);z.options.__file="src/pages/HomePage/index.vue";var O=z.exports,W=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("transition",{attrs:{"enter-active-class":"animate__animated animate__fadeInLeftBig","leave-active-class":"animate__animated animate__fadeOutLeftBig"}},[a("div",[a("app-nav"),t._v(" "),a("showcase-context",{attrs:{"project-name":t.showcase.projectName,"project-date":t.showcase.projectDate,"project-display-photo-path":t.showcase.projectDisplayPhotoPath,"project-type":t.showcase.projectType,"project-platform":t.showcase.projectPlatform,"project-external-link":t.showcase.projectExternalLink,"project-context-photo-path":t.showcase.projectContextPhotoPath}},[a("span",{domProps:{innerHTML:t._s(t.showcase.projectDesc)}})]),t._v(" "),a("showcase-planning",[a("span",{domProps:{innerHTML:t._s(t.showcase.projectPlanning)}})]),t._v(" "),a("showcase-result",{attrs:{"project-screenshots":t.showcase.projectScreenshots}},[a("span",{domProps:{innerHTML:t._s(t.showcase.projectResult)}})]),t._v(" "),a("app-footer")],1)])};W._withStripped=!0;var $=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("section",{staticClass:"showcase-header"},[a("div",{staticClass:"project-name"},[a("h2",[t._v(t._s(t.projectName))]),t._v(" "),a("p",{staticClass:"project-date"},[t._v(t._s(t.projectDate))])]),t._v(" "),a("div",[a("img",{staticClass:"project-display-photo",attrs:{src:t.projectDisplayPhotoPath,"data-aos":"fade-up"}})]),t._v(" "),a("div",{staticClass:"container-fluid project-context"},[a("div",{staticClass:"row"},[a("div",{staticClass:"col-12 col-lg-6 my-5 project-context-details",attrs:{"data-aos":"fade"}},[a("p",{staticClass:"project-type"},[t._v(t._s(t.projectType))]),t._v(" "),a("p",{staticClass:"project-platform"},[t._v(t._s(t.projectPlatform))]),t._v(" "),a("a",{attrs:{href:t.projectExternalLink,target:"_blank"}},[t._v("Visit site")])]),t._v(" "),a("div",{staticClass:"col-12 col-lg-6 my-5 project-context-desc article-slot",attrs:{"data-aos":"fade"}},[a("div",[t._t("default")],2)])])]),t._v(" "),a("div",{staticClass:"project-context-photo-container"},[a("img",{staticClass:"project-context-photo",attrs:{src:t.projectContextPhotoPath,"data-aos":"fade-up"}})])])};$._withStripped=!0;var q={props:{projectName:{type:String,required:!0},projectDate:{type:String,required:!0},projectDisplayPhotoPath:{type:String,required:!0},projectType:{type:String,required:!0},projectPlatform:{type:String,required:!0},projectExternalLink:{type:String,required:!0},projectContextPhotoPath:{type:String,required:!0}}},F=Object(m.a)(q,$,[],!1,null,null,null);F.options.__file="src/pages/ShowcasePage/ShowcaseContext.vue";var B=F.exports,R=function(){var t=this.$createElement,e=this._self._c||t;return e("section",{staticClass:"page-section",attrs:{"data-aos":"fade"}},[e("div",{staticClass:"inner-container article-slot"},[this._m(0),this._v(" "),e("div",{staticClass:"slot-text"},[this._t("default")],2)])])};R._withStripped=!0;var J={},Y=Object(m.a)(J,R,[function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{staticClass:"showcase-sub-heading"},[e("span",[this._v("2/3")]),this._v(" planning")])}],!1,null,null,null);Y.options.__file="src/pages/ShowcasePage/ShowcasePlanning.vue";var G=Y.exports,U=function(){var t=this.$createElement,e=this._self._c||t;return e("section",{staticClass:"page-section",attrs:{"data-aos":"fade"}},[e("div",{staticClass:"inner-container article-slot"},[this._m(0),this._v(" "),e("div",{staticClass:"slot-text"},[this._t("default")],2),this._v(" "),e("div",{staticClass:"project-result-photo-container"},[e("ul",this._l(this.projectScreenshots,(function(t){return e("li",{key:t.src,attrs:{"data-aos":"fade-up"}},[e("img",{staticClass:"project-result-photo",attrs:{src:t.src}})])})),0)])])])};U._withStripped=!0;var Q={props:{projectScreenshots:{type:Array,required:!0}}},X=Object(m.a)(Q,U,[function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{staticClass:"showcase-sub-heading"},[e("span",[this._v("3/3")]),this._v(" result")])}],!1,null,null,null);X.options.__file="src/pages/ShowcasePage/ShowcaseResult.vue";var V=X.exports,K={"project-nx":{projectName:"Project NX",projectDate:"2020",projectDisplayPhotoPath:"https://inspiring-bhabha-680629.netlify.app/project_nx/screenshots/342462-PA9Q6O-452.png",projectType:"Web Design, Development",projectPlatform:"Mobile, Tablet, Desktop",projectExternalLink:"about:blank",projectContextPhotoPath:"https://inspiring-bhabha-680629.netlify.app/project_nx/project-nx-context-2880x1800.png",projectDesc:"<p>How about reading stories right on your mobile, on the go?!</p>\n        <p>Reading stories you love right on your mobile devices is fun and I want to even make that a lot better!</p>\n        <p>Project NX is an experimental platform that allows you to read stories right on your device (Mobile, Labtop or even Desktop). The concept of the platform design enables for quick finding of stories and articles I think you'd be interested in reading.</p>",projectPlanning:'<p>The design and development implementations were pretty straight foward. Designed with the Bootstrap 4 material design framework, I was able to quickly achieve the design pattern that suites an immersive platform of stories! The material design was the right way to go because I wanted the design to look as real as possible.</p>\n        <p>To promote readablity, the font of choice was the well known Roboto. Adding more realness to Project NX, Font Awesome icons were used.</p>\n        <p>The backend powered by PHP and MySQL database using a framework I created <a href="//github.com/devgranty/tm_framework" rel="external" target="_blank">here</a></p>\n        <p>Please note: Project NX is still in its beta and has not been released to the public and I hope on doing that pretty soon!.</p>',projectResult:"<p>Mission accomplished!</p>\n        <p>It's always an amazing feeling when you create stuffs and see millions of people make the best out of it each day. And Hey!, Don't ask the meaning of \"NX\" because I certainly have no idea, probably daydreaming when I gave it that name 😴</p>",projectScreenshots:[{src:"https://inspiring-bhabha-680629.netlify.app/project_nx/screenshots/localhost_projects_project_nx_(Laptop with HiDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/project_nx/screenshots/localhost_projects_project_nx_(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/project_nx/screenshots/localhost_projects_project_nx_forum.php_p=the-three-billy-goats-gruff(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/project_nx/screenshots/localhost_projects_project_nx_signup.php(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/project_nx/screenshots/localhost_projects_project_nx_signin.php(Laptop with MDPI screen) (1).png"},{src:"https://inspiring-bhabha-680629.netlify.app/project_nx/screenshots/localhost_projects_project_nx_signin.php(Laptop with MDPI screen).png"}]},movynet:{projectName:"Movynet",projectDate:"2019",projectDisplayPhotoPath:"https://inspiring-bhabha-680629.netlify.app/movynet/screenshots/shazam-zachary-levi-jack-dylan-grazer.jpg",projectType:"Web Design, Development",projectPlatform:"Mobile, Tablet, Desktop",projectExternalLink:"//movynet.com",projectContextPhotoPath:"https://inspiring-bhabha-680629.netlify.app/movynet/movynet-context-2880x1800.png",projectDesc:"<p>Simple, fast, useful and as immersive as possible. It's all about entertainment, it should as well be entertaining.</p>\n        <p>Movynet is a simple and basic movie website I started personly to get know how some things in programming work. It's quite obvious that movies are one of the most entaintaining things and definitely worth some try.</p>",projectPlanning:"<p><strong>Planning, Design &amp; Development</strong> <br> When I started building Movynet, I was curious about some things in programming. I knew that one of the best ways to try them out was doing it with one of my favorite hobbies.</p>\n        <p>It took about 2 months to complete the project and during that period I got familiar with APIs, Software architectures, e.g MVC, design patterns and some frameworks.</p>\n        <p>Movynet's data are all sourced through the TMDB movie API, from which parts are stored in the database. All these where made possible with PHP and MYSQL. Movynet used the earliest and very first version of a framework I created - TM framework. The idea of the framework was to create classes, e.g Database, Datetime, Validation, Filesystem, String, Encryption classes, functions and general project configurations which allowed me scaffold newer projects in PHP even faster!</p>\n        <p>Movynet design was a mix of bootstrap, custom CSS and Jquery.</p>\n        <p>Movynet was also the first PWA - Progressive Web App I designed, understanding how service workers work.</p>",projectResult:'<p>"The colors, design and entire website works well", this has been one of the greatest projects I\'ve done in a short amount of time.</p>\n        <p>The outcome?, Very desireable.</p>',projectScreenshots:[{src:"https://inspiring-bhabha-680629.netlify.app/movynet/logos/movynet_logo_552x180.png"},{src:"https://inspiring-bhabha-680629.netlify.app/movynet/screenshots/localhost_projects_movynet_(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/movynet/screenshots/localhost_projects_movynet_view.php_vwid=246&type=Movie&from=home(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/movynet/screenshots/localhost_projects_movynet_view.php_vwid=246&type=Movie&from=home(Laptop with MDPI screen) (1).png"},{src:"https://inspiring-bhabha-680629.netlify.app/movynet/screenshots/localhost_projects_movynet_view.php_vwid=246&type=Movie&from=home(Laptop with MDPI screen) (4).png"},{src:"https://inspiring-bhabha-680629.netlify.app/movynet/screenshots/localhost_projects_movynet_view.php_vwid=246&type=Movie&from=home(Laptop with MDPI screen) (3).png"},{src:"https://inspiring-bhabha-680629.netlify.app/movynet/screenshots/localhost_projects_movynet_view.php_vwid=246&type=Movie&from=home(Laptop with MDPI screen) (2).png"}]},jovianbiz:{projectName:"Jovianbiz",projectDate:"2018",projectDisplayPhotoPath:"https://inspiring-bhabha-680629.netlify.app/jovianbiz/screenshots/adult-artist-band-274406.gif",projectType:"Web Design, Development",projectPlatform:"Mobile, Tablet, Desktop",projectExternalLink:"//jovianbiz.com",projectContextPhotoPath:"https://inspiring-bhabha-680629.netlify.app/jovianbiz/jovianbiz-context-2880x1800.png",projectDesc:"<p>Jovianbiz is a combination of two business segments.</p>\n        <p>The Jovian Hair is concerned with sales of hair, hair products and accessories, while, Jovian Events is concerned with providing event services.</p>\n        <p>The amazing thing about Jovianbiz is their passion. The believe they can bring out the beauty in every thing and that is why I was excited to work with them.</p>",projectPlanning:"<p><strong>Challenges</strong> <br> Finding the perfect way to combine and register two unrelated business segments and still making them stand out needed a little bit of magic, we had to draft possible ways to accomplish this. To solve this challenge we ended building a standard landing page for the both segments, creating a seperate subdomain and adding the links to each segment, task completed!</p>\n        <p><strong>Design, Development and problem solving</strong> <br> Selecting the right colors for a business websites with two segments is important. Professional colors like blue(#00A1FF), off-white(#EEEEEE) and black(#000000) were colors of choice.</p>\n        <p>We wanted the logo as simple as possible, so we sticked to a textbased logo, employing the Sofia Regular font.</p>\n        <p>The rest of the website needed something more bold, professional and modern, Lato was the best font to accomplish this.</p>\n        <p>As a business website we needed more images to help convey what was really happening on the site with lesser words.</p>",projectResult:'<p>"Wow!, this looks so beautiful and it is exactly what I needed.", Yes, once again our design strategy gave the best results!</p>',projectScreenshots:[{src:"https://inspiring-bhabha-680629.netlify.app/jovianbiz/screenshots/www.localhost_projects_jovianbiz_index.php(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/jovianbiz/screenshots/www.localhost_projects_jovianbiz_services_(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/jovianbiz/screenshots/www.localhost_projects_jovianbiz_hair_(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/jovianbiz/screenshots/www.localhost_projects_jovianbiz_hair_category.php_cat=h_h_w(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/jovianbiz/screenshots/www.localhost_projects_jovianbiz_hair_product.php_pid=16(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/jovianbiz/screenshots/www.localhost_projects_jovianbiz_services_(Laptop with MDPI screen) (1).png"}]},myafriconnect:{projectName:"MyAfriConnect",projectDate:"2018",projectDisplayPhotoPath:"https://inspiring-bhabha-680629.netlify.app/myafriconnect/screenshots/cellist-band-music-performance.jpg",projectType:"Web Design, Development",projectPlatform:"Mobile, Tablet, Desktop",projectExternalLink:"//myafriconnect.com",projectContextPhotoPath:"https://inspiring-bhabha-680629.netlify.app/myafriconnect/myafriconnect-context-2880x1800.png",projectDesc:'<p>"Even though it is simple and quiet, we made great sounds!"</p>\n        <p>MyAfriconnect is an audio and video music download platform. The idea is to build a native music catalogue for everyone to download their favourite African music.</p>',projectPlanning:'<p><strong>Challenges</strong> <br> Designing and creating the native feel of an audio &amp; video downloading website was a bit challenging. The right colors, fonts and general design had to be in place.</p>\n        <p><strong>Design</strong> <br> We needed to download the right template from <a href="https://w3layouts.com/elvis-a-entertainment-category-flat-bootstrap-responsive-web-template/" rel="external" target="_blank">w3layouts.com</a>, few modifications where made on the UI to give it the native African look we combined the Ghanaian colors and used the <cite>CF Flowers by Destiny</cite> font.</p>\n        <p><strong>Development</strong> <br> To improve functionality light weight libraries like JQuery and and Bootstrap were implemented. The back end handled by PHP were used for dynamic rendering of pages and Database of choice was MySQL.</p>',projectResult:"<p>The final outcome was powerful platform that keeps visitors in a total state of excitement. We recorded a tremendous increase in the daily visits from most African country, now that's what I call satisfaction!</p>",projectScreenshots:[{src:"https://inspiring-bhabha-680629.netlify.app/myafriconnect/screenshots/127.0.0.1_5500_(Laptop with MDPI screen) (2).png"},{src:"https://inspiring-bhabha-680629.netlify.app/myafriconnect/screenshots/127.0.0.1_5500_(Laptop with MDPI screen) (1).png"},{src:"https://inspiring-bhabha-680629.netlify.app/myafriconnect/screenshots/127.0.0.1_5500_(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/myafriconnect/screenshots/127.0.0.1_5500_single.html(Laptop with MDPI screen).png"}]}},Z={components:{AppNav:v,ShowcaseContext:B,ShowcasePlanning:G,ShowcaseResult:V,AppFooter:H},watch:{$route:"fetchData"},methods:{fetchData(){const t=this.$route.params.pageId;Object.keys(K).includes(t)?this.showcase=K[t]:this.$router.push({name:"404"})}},created:function(){this.fetchData()},mounted:function(){AOS.init()},data:function(){return{showcase:null,params:{description:"The design portfolio of Grant Adiele, an independent web designer and developer based in Nigeria.",site_name:"Grant Adiele",site_url:"https://grantadiele.web.app/#"+this.$route.path}}},head:{title:function(){return{inner:this.showcase.projectName,seperator:"",complement:this.params.site_name}},meta:function(){return[{name:"robots",content:"index"},{name:"description",content:this.params.description},{name:"author",content:this.params.site_name},{property:"og:title",content:this.params.title},{property:"og:type",content:"website"},{property:"og:image",content:this.params.site_url+"assets/icons/ga-icon-256x256.png"},{property:"og:image:type",content:"image/png"},{property:"og:image:width",content:"256"},{property:"og:image:height",content:"256"},{property:"og:url",content:this.params.site_url},{property:"og:description",content:this.params.description},{property:"og:locale",content:"en_US"},{property:"og:site_name",content:this.params.site_name},{property:"twitter:card",content:"summary"},{property:"twitter:creator",content:"@devgranty"},{property:"twitter:title",content:this.params.title},{property:"twitter:description",content:this.params.description},{property:"twitter:image",content:this.params.site_url+"assets/icons/ga-icon-256x256.png"}]},link:function(){return[{rel:"canonical",href:this.params.site_url}]}}},tt=Object(m.a)(Z,W,[],!1,null,null,null);tt.options.__file="src/pages/ShowcasePage/index.vue";var et=tt.exports,at=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("transition",{attrs:{"enter-active-class":"animate__animated animate__fadeInLeftBig","leave-active-class":"animate__animated animate__fadeOutLeftBig"}},[a("div",[a("div",{staticStyle:{position:"absolute",left:"50%",top:"10%",width:"100%",margin:"0",padding:"0","margin-left":"-50%"}},[a("h1",{staticStyle:{color:"#ddd","text-align":"center","font-size":"calc(10em + 2vw)"}},[t._v("4"),a("span",{staticStyle:{color:"rgba(255, 0, 0, 0.42)"}},[t._v("0")]),t._v("4")]),t._v(" "),a("p",{staticStyle:{"text-align":"center","font-weight":"900"}},[t._v("NOT FOUND")]),t._v(" "),a("p",{staticStyle:{padding:"20px",color:"#999","text-align":"center","line-height":"1.6"}},[t._v("You seem lost, that happens! Hold my hands let me take you right "),a("router-link",{staticStyle:{color:"green"},attrs:{to:"/"}},[t._v("home")])],1)])])])};at._withStripped=!0;var st={data:function(){return{params:{title:"404"}}},head:{title:function(){return{inner:this.params.title,seperator:"",complement:"Not Found"}},meta:function(){return[{name:"robots",content:"noindex"}]}}},nt=Object(m.a)(st,at,[],!1,null,null,null);nt.options.__file="src/pages/NotFoundPage.vue";var it=nt.exports;s.a.use(n.a),s.a.use(o.a),s.a.use(r.a);const ot=[{path:"/",name:"home",component:O},{path:"/case/:pageId",name:"case",component:et},{path:"*",name:"404",component:it}],rt=new n.a({routes:ot,mode:"hash",scrollBehavior:(t,e,a)=>t.hash?{selector:t.hash}:a||{x:0,y:0}});s.a.use(p.a,{id:"UA-170094721-1",router:rt});new s.a({router:rt}).$mount("#app")}},[["tjUo",12,10,4,1,2,3,6,7,8,9,5,11]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,