(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{tjUo:function(e,t,a){"use strict";a.r(t);var n=a("oCYn"),s=a("jE9Z"),i=a("NC0y"),o=a.n(i),r=a("M7zF"),p=a("AoTc"),c=a.n(p),l=function(){var e=this.$createElement,t=this._self._c||e;return t("transition",{attrs:{"enter-active-class":"animate__animated animate__fadeInLeftBig","leave-active-class":"animate__animated animate__fadeOutLeftBig"}},[t("div",[t("app-nav"),this._v(" "),t("home-hero"),this._v(" "),t("div",{directives:[{name:"scroll-spy",rawName:"v-scroll-spy"}]},[t("home-me"),this._v(" "),t("home-showcase"),this._v(" "),t("home-whyme"),this._v(" "),t("app-footer")],1)],1)])};l._withStripped=!0;var h=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("header",{staticClass:"navbar animate__animated animate__slideInDown animate__delay-3s"},[a("div",{directives:[{name:"scroll-spy-active",rawName:"v-scroll-spy-active",value:{selector:".scrollspy-find",class:"scrollspy-active"},expression:"{selector: '.scrollspy-find', class: 'scrollspy-active'}"}],staticClass:"navbar-container"},[a("router-link",{attrs:{to:"/"}},[a("img",{staticClass:"navbar-brand-logo",attrs:{src:e.navLogoPath,alt:"ga",width:"50",height:"50"}})]),e._v(" "),a("nav",{staticClass:"navbar-links",attrs:{role:"navigation"}},[a("ul",e._l(e.navbarLinks,(function(t){return a("li",{key:t.title},[a("router-link",{staticClass:"scrollspy-find",attrs:{to:t.link}},[e._v(e._s(t.title))])],1)})),0)]),e._v(" "),a("div",[a("button",{staticClass:"navbar-menu-btn",attrs:{id:"navbarModalBtn",role:"button","aria-haspopup":"true"},on:{click:function(t){e.showMenu=!e.showMenu}}},[e._v(e._s(e.showMenu?"Close":"Menu"))]),e._v(" "),a("transition",{attrs:{"enter-active-class":"animate__animated animate__fadeInRightBig","leave-active-class":"animate__animated animate__fadeOutRightBig"}},[a("nav",{directives:[{name:"show",rawName:"v-show",value:e.showMenu,expression:"showMenu"}],staticClass:"navbar-modal",attrs:{id:"navbarModal",role:"menu","aria-modal":"true"}},[a("ul",{directives:[{name:"scroll-spy-active",rawName:"v-scroll-spy-active",value:{selector:".scrollspy-find",class:"scrollspy-active"},expression:"{selector: '.scrollspy-find', class: 'scrollspy-active'}"}]},e._l(e.navbarLinks,(function(t){return a("li",{key:t.title},[a("router-link",{staticClass:"scrollspy-find",attrs:{to:t.link},nativeOn:{click:function(t){e.showMenu=!e.showMenu}}},[e._v(e._s(t.title))])],1)})),0)])])],1)],1)])};h._withStripped=!0;var d={data:function(){return{navLogoPath:"./assets/logos/ga-logo-600x600.png",navbarLinks:[{link:"/#me",title:"Me"},{link:"/#showcase",title:"Showcase"},{link:"/#whyme",title:"Why Me"},{link:"/#contact",title:"Contact"}],showMenu:!1}},methods:{hideNav(){var e=window.pageYOffset;window.onscroll=function(){var t=window.pageYOffset,a=document.querySelector(".navbar");a.style.top=e>t?"0":"-100px",e=t}}},created:function(){this.hideNav()}},m=a("KHd+"),g=Object(m.a)(d,h,[],!1,null,null,null);g.options.__file="src/components/layout/AppNav.vue";var v=g.exports,u=function(){var e=this.$createElement;this._self._c;return this._m(0)};u._withStripped=!0;var _={},w=Object(m.a)(_,u,[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"hero",attrs:{id:"myHero"}},[t("div",{staticClass:"hero-welcome-board"},[t("h1",{staticClass:"animate__animated animate__bounceInDown"},[this._v("Web Designer, Developer & Machine Learning enthusiast in Nigeria.")])]),this._v(" "),t("div",{staticClass:"animate__animated animate__bounce animate__infinite animate__delay-4s hero-scroll-down"},[t("i",{staticClass:"fas fa-chevron-up icon-gradient",attrs:{"aria-hidden":"true"}})])])}],!1,null,null,null);w.options.__file="src/pages/HomePage/HomeHero.vue";var f=w.exports,b=function(){var e=this.$createElement,t=this._self._c||e;return t("section",{staticClass:"page-section variation-section"},[t("div",{staticClass:"inner-container"},[t("h1",{staticClass:"section-heading",attrs:{id:"me"}},[this._v("Me "),t("router-link",{attrs:{to:"#me"}},[t("i",{staticClass:"fas fa-link section-anchor-id icon-gradient",attrs:{"aria-hidden":"true"}})])],1),this._v(" "),this._m(0)])])};b._withStripped=!0;var y={},j=Object(m.a)(y,b,[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"about-me-note"},[t("p",[this._v("Hellooo! I'm Grant Adiele (Or you can call me Devgranty), an independent web designer/developer and machine learning enthusiast (not an expert) based in Nigeria.")]),this._v(" "),t("p",[this._v("My goal is to create functional and intutive interfaces that captures users and promotes your brand.")]),this._v(" "),t("p",[this._v("Aside programming, I enjoy playing games, moonwalking, watching movies, listening to music and daydreaming.")])])}],!1,null,null,null);j.options.__file="src/pages/HomePage/HomeMe.vue";var P=j.exports,k=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("section",{staticClass:"page-section"},[a("div",{staticClass:"inner-container"},[a("h1",{staticClass:"section-heading",attrs:{id:"showcase"}},[e._v("Showcase "),a("router-link",{attrs:{to:"#showcase"}},[a("i",{staticClass:"fas fa-link section-anchor-id icon-gradient",attrs:{"aria-hidden":"true"}})])],1),e._v(" "),a("p",{staticClass:"section-headline"},[e._v("Some projects I've worked on independently.")]),e._v(" "),a("div",{staticClass:"container-fluid"},[a("div",{staticClass:"row"},e._l(e.projects,(function(t){return a("div",{key:t.title,staticClass:"col-12 col-lg-6 mb-4"},[a("div",{staticClass:"project-card",attrs:{"data-aos":"fade-up"}},[a("router-link",{staticClass:"project-link",attrs:{to:t.link}},[a("img",{staticClass:"project-thumbnail",attrs:{src:t.imagePath}}),e._v(" "),a("div",{staticClass:"project-details"},[a("h3",{style:t.details},[e._v(e._s(t.title))]),e._v(" "),a("h2",{style:t.details},[e._v(e._s(t.type))])])])],1)])})),0)])])])};k._withStripped=!0;var x={data:function(){return{projects:[{link:"case/project-nx",details:{color:"#000"},title:"project nx",type:"Web design, development",imagePath:"https://inspiring-bhabha-680629.netlify.app/project_nx/project-nx-cover-600x600.png"},{link:"case/willow-investment",details:{color:"#fff"},title:"willow investment",type:"Web design, development",imagePath:"https://inspiring-bhabha-680629.netlify.app/willow_investment/willow-investment-cover-600x600.png"},{link:"case/movynet",details:{color:"#dd0404"},title:"movynet",type:"Web design, development",imagePath:"https://inspiring-bhabha-680629.netlify.app/movynet/movynet-cover-600x600.png"},{link:"case/jovianbiz",details:{color:"#fff"},title:"jovianbiz",type:"Web design, development",imagePath:"https://inspiring-bhabha-680629.netlify.app/jovianbiz/jovianbiz-cover-600x600.png"},{link:"case/advbitcoinearns",details:{color:"#ee2000"},title:"advbitcoinearns",type:"Web design, development",imagePath:"https://inspiring-bhabha-680629.netlify.app/advbitcoinearns/advbitcoinearns-cover-600x600.png"},{link:"case/myafriconnect",details:{color:"#fff"},title:"myafriconnect",type:"Web design, development",imagePath:"https://inspiring-bhabha-680629.netlify.app/myafriconnect/logos/logo-1080x1080.jpg"}]}}},C=Object(m.a)(x,k,[],!1,null,null,null);C.options.__file="src/pages/HomePage/HomeShowcase.vue";var D=C.exports,M=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("section",{staticClass:"page-section"},[a("div",{staticClass:"inner-container"},[a("h1",{staticClass:"section-heading",attrs:{id:"whyme"}},[e._v("Why Me "),a("router-link",{attrs:{to:"#whyme"}},[a("i",{staticClass:"fas fa-link section-anchor-id icon-gradient",attrs:{"aria-hidden":"true"}})])],1),e._v(" "),a("p",{staticClass:"section-headline"},[e._v('Still not convinced? Here are some "WHY ME" reasons.')]),e._v(" "),a("div",{staticClass:"whyme-carousel"},e._l(e.reasons,(function(t){return a("div",{key:t.title,staticClass:"carousel-cell"},[a("ul",[a("li",[a("i",{staticClass:"icon-gradient",class:t.iconClass,attrs:{"aria-hidden":"true"}})]),e._v(" "),a("li",[a("h2",[e._v(e._s(t.title))])]),e._v(" "),a("li",[e._v(e._s(t.comment))])])])})),0),e._v(" "),a("div",{staticClass:"whyme-reason"},[a("div",{staticClass:"row"},e._l(e.reasons,(function(t){return a("div",{key:t.title,class:t.columnClass},[a("div",{staticClass:"reason-cell",attrs:{"data-aos":"fade-up"}},[a("ul",[a("li",[a("i",{staticClass:"icon-gradient",class:t.iconClass,attrs:{"aria-hidden":"true"}})]),e._v(" "),a("li",[a("h2",[e._v(e._s(t.title))])]),e._v(" "),a("li",[e._v(e._s(t.comment))])])])])})),0)])])])};M._withStripped=!0;var I={data:function(){return{reasons:[{columnClass:"col-lg-4 offset-lg-4 mb-5",iconClass:"fas fa-smile",title:"Best Quality",comment:"Nothing but the BEST."},{columnClass:"col-lg-6 mb-5",iconClass:"fas fa-gem",title:"Fully Customized",comment:"Like nothing you've seen before, build it from the ground up."},{columnClass:"col-lg-4 offset-lg-1 mb-5",iconClass:"fas fa-money-bill-wave",title:"Affordable",comment:"Not to be mistaken for CHEAP."},{columnClass:"col-lg-4 offset-lg-1 mb-5",iconClass:"fas fa-shipping-fast",title:"Fast Delivery",comment:"Wouldn't have to rush it, just be there on time."},{columnClass:"col-lg-6 mb-5",iconClass:"fas fa-envelope",title:"Support",comment:"Provide all required assistance till you are up and running with your project."}]}}},S=Object(m.a)(I,M,[],!1,null,null,null);S.options.__file="src/pages/HomePage/HomeWhyme.vue";var L=S.exports,T=function(){var e=this.$createElement;this._self._c;return this._m(0)};T._withStripped=!0;var A={},E=Object(m.a)(A,T,[function(){var e=this.$createElement,t=this._self._c||e;return t("footer",{staticClass:"contact-footer",attrs:{id:"contact"}},[t("div",{staticClass:"inner-container"},[t("h1",{staticClass:"section-icon-heading"},[t("a",{attrs:{href:"#contact"}},[t("i",{staticClass:"fas fa-envelope icon-gradient",attrs:{"aria-hidden":"true"}})])]),this._v(" "),t("h2",{staticClass:"contact-note"},[this._v("You're a mail away. Email me at "),t("a",{attrs:{href:"mailto:hello.devgranty@gmail.com"}},[this._v("hello.devgranty@gmail.com")])])])])}],!1,null,null,null);E.options.__file="src/components/layout/AppFooter.vue";var H=E.exports,N={components:{AppNav:v,HomeHero:f,HomeMe:P,HomeShowcase:D,HomeWhyme:L,AppFooter:H},data:function(){return{params:{title:"Design Portfolio of Grant Adiele",description:"The design portfolio of Grant Adiele, an independent web designer and developer based in Nigeria.",site_name:"Grant Adiele",site_url:"https://grantadiele.web.app/"}}},mounted:function(){particlesJS.load("myHero","./assets/json/myparticles-config.json");var e=document.querySelector(".whyme-carousel");new Flickity(e,{cellAlign:"center",contain:!0,wrapAround:!0,autoPlay:3500});AOS.init()},head:{title:function(){return{inner:this.params.title,seperator:"",complement:""}},meta:function(){return[{name:"robots",content:"index"},{name:"description",content:this.params.description},{name:"author",content:this.params.site_name},{property:"og:title",content:this.params.title},{property:"og:type",content:"website"},{property:"og:image",content:this.params.site_url+"assets/icons/ga-icon-256x256.png"},{property:"og:image:type",content:"image/png"},{property:"og:image:width",content:"256"},{property:"og:image:height",content:"256"},{property:"og:url",content:this.params.site_url},{property:"og:description",content:this.params.description},{property:"og:locale",content:"en_US"},{property:"og:site_name",content:this.params.site_name},{property:"twitter:card",content:"summary"},{property:"twitter:creator",content:"@devgranty"},{property:"twitter:title",content:this.params.title},{property:"twitter:description",content:this.params.description},{property:"twitter:image",content:this.params.site_url+"assets/icons/ga-icon-256x256.png"}]},link:function(){return[{rel:"canonical",href:this.params.site_url}]}}},z=Object(m.a)(N,l,[],!1,null,null,null);z.options.__file="src/pages/HomePage/index.vue";var W=z.exports,O=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("transition",{attrs:{"enter-active-class":"animate__animated animate__fadeInLeftBig","leave-active-class":"animate__animated animate__fadeOutLeftBig"}},[a("div",[a("app-nav"),e._v(" "),a("showcase-context",{attrs:{"project-name":e.showcase.projectName,"project-date":e.showcase.projectDate,"project-display-photo-path":e.showcase.projectDisplayPhotoPath,"project-type":e.showcase.projectType,"project-platform":e.showcase.projectPlatform,"project-external-link":e.showcase.projectExternalLink,"project-context-photo-path":e.showcase.projectContextPhotoPath}},[a("span",{domProps:{innerHTML:e._s(e.showcase.projectDesc)}})]),e._v(" "),a("showcase-planning",[a("span",{domProps:{innerHTML:e._s(e.showcase.projectPlanning)}})]),e._v(" "),a("showcase-result",{attrs:{"project-screenshots":e.showcase.projectScreenshots}},[a("span",{domProps:{innerHTML:e._s(e.showcase.projectResult)}})]),e._v(" "),a("app-footer")],1)])};O._withStripped=!0;var q=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("section",{staticClass:"showcase-header"},[a("div",{staticClass:"project-name"},[a("h2",[e._v(e._s(e.projectName))]),e._v(" "),a("p",{staticClass:"project-date"},[e._v(e._s(e.projectDate))])]),e._v(" "),a("div",[a("img",{staticClass:"project-display-photo",attrs:{src:e.projectDisplayPhotoPath,"data-aos":"fade-up"}})]),e._v(" "),a("div",{staticClass:"container-fluid project-context"},[a("div",{staticClass:"row"},[a("div",{staticClass:"col-12 col-lg-6 my-5 project-context-details",attrs:{"data-aos":"fade"}},[a("p",{staticClass:"project-type"},[e._v(e._s(e.projectType))]),e._v(" "),a("p",{staticClass:"project-platform"},[e._v(e._s(e.projectPlatform))]),e._v(" "),a("a",{attrs:{href:e.projectExternalLink,target:"_blank"}},[e._v("Visit site")])]),e._v(" "),a("div",{staticClass:"col-12 col-lg-6 my-5 project-context-desc article-slot",attrs:{"data-aos":"fade"}},[a("div",[e._t("default")],2)])])]),e._v(" "),a("div",{staticClass:"project-context-photo-container"},[a("img",{staticClass:"project-context-photo",attrs:{src:e.projectContextPhotoPath,"data-aos":"fade-up"}})])])};q._withStripped=!0;var B={props:{projectName:{type:String,required:!0},projectDate:{type:String,required:!0},projectDisplayPhotoPath:{type:String,required:!0},projectType:{type:String,required:!0},projectPlatform:{type:String,required:!0},projectExternalLink:{type:String,required:!0},projectContextPhotoPath:{type:String,required:!0}}},$=Object(m.a)(B,q,[],!1,null,null,null);$.options.__file="src/pages/ShowcasePage/ShowcaseContext.vue";var F=$.exports,R=function(){var e=this.$createElement,t=this._self._c||e;return t("section",{staticClass:"page-section",attrs:{"data-aos":"fade"}},[t("div",{staticClass:"inner-container article-slot"},[this._m(0),this._v(" "),t("div",{staticClass:"slot-text"},[this._t("default")],2)])])};R._withStripped=!0;var J={},G=Object(m.a)(J,R,[function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{staticClass:"showcase-sub-heading"},[t("span",[this._v("2/3")]),this._v(" planning")])}],!1,null,null,null);G.options.__file="src/pages/ShowcasePage/ShowcasePlanning.vue";var Y=G.exports,Q=function(){var e=this.$createElement,t=this._self._c||e;return t("section",{staticClass:"page-section",attrs:{"data-aos":"fade"}},[t("div",{staticClass:"inner-container article-slot"},[this._m(0),this._v(" "),t("div",{staticClass:"slot-text"},[this._t("default")],2),this._v(" "),t("div",{staticClass:"project-result-photo-container"},[t("ul",this._l(this.projectScreenshots,(function(e){return t("li",{key:e.src,attrs:{"data-aos":"fade-up"}},[t("img",{staticClass:"project-result-photo",attrs:{src:e.src}})])})),0)])])])};Q._withStripped=!0;var U={props:{projectScreenshots:{type:Array,required:!0}}},V=Object(m.a)(U,Q,[function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{staticClass:"showcase-sub-heading"},[t("span",[this._v("3/3")]),this._v(" result")])}],!1,null,null,null);V.options.__file="src/pages/ShowcasePage/ShowcaseResult.vue";var X=V.exports,K={"project-nx":{projectName:"Project NX",projectDate:"2020",projectDisplayPhotoPath:"https://inspiring-bhabha-680629.netlify.app/project_nx/screenshots/342462-PA9Q6O-452.png",projectType:"Web Design, Development",projectPlatform:"Mobile, Tablet, Desktop",projectExternalLink:"about:blank",projectContextPhotoPath:"https://inspiring-bhabha-680629.netlify.app/project_nx/project-nx-context-2880x1800.png",projectDesc:"<p>How about reading stories right on your mobile, on the go?!</p>\n        <p>Reading stories you love right on your mobile devices is fun and I want to even make that a lot better!</p>\n        <p>Project NX is an experimental platform that allows you to read stories right on your device (Mobile, Labtop or even Desktop). The concept of the platform design enables for quick finding of stories and articles I think you'd be interested in reading.</p>",projectPlanning:'<p>The design and development implementations were pretty straight foward. Designed with the Bootstrap 4 material design framework, I was able to quickly achieve the design pattern that suites an immersive platform of stories! The material design was the right way to go because I wanted the design to look as real as possible.</p>\n        <p>To promote readablity, the font of choice was the well known Roboto. Adding more realness to Project NX, Font Awesome icons were used.</p>\n        <p>The backend powered by PHP and MySQL database using a framework I created <a href="//github.com/devgranty/tm_framework" rel="external" target="_blank">here</a></p>\n        <p>Please note: Project NX is still in its beta and has not been released to the public and I hope on doing that pretty soon!.</p>',projectResult:"<p>Mission accomplished!</p>\n        <p>It's always an amazing feeling when you create stuffs and see millions of people make the best out of it each day. And Hey!, Don't ask the meaning of \"NX\" because I certainly have no idea, probably daydreaming when I gave it that name 😴</p>",projectScreenshots:[{src:"https://inspiring-bhabha-680629.netlify.app/project_nx/screenshots/localhost_projects_project_nx_(Laptop with HiDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/project_nx/screenshots/localhost_projects_project_nx_(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/project_nx/screenshots/localhost_projects_project_nx_forum.php_p=the-three-billy-goats-gruff(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/project_nx/screenshots/localhost_projects_project_nx_signup.php(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/project_nx/screenshots/localhost_projects_project_nx_signin.php(Laptop with MDPI screen) (1).png"},{src:"https://inspiring-bhabha-680629.netlify.app/project_nx/screenshots/localhost_projects_project_nx_signin.php(Laptop with MDPI screen).png"}]},"willow-investment":{projectName:"Willow Investment",projectDate:"2019",projectDisplayPhotoPath:"https://inspiring-bhabha-680629.netlify.app/willow_investment/screenshots/adult-attire-commerce-1367269.png",projectType:"Web Design, Development",projectPlatform:"Mobile, Tablet, Desktop",projectExternalLink:"//willowinvestment.net",projectContextPhotoPath:"https://inspiring-bhabha-680629.netlify.app/willow_investment/willow-investment-context-2880x1800.png",projectDesc:"<p>Willow Investment is a Bitcoin Investment platform owned and managed by the Willow Group.</p>\n        <p>Is Willow secured? - Yes!, Willow is pefectly secured as no transactions are done on the site. All transactions require an encrypted bitcoin wallet and data is only transferred via APIs.</p>",projectPlanning:"<p><strong>Problem Solving</strong> <br> The entire idea was to create something that allowed commumication between cryptocurrencies, store them, perform mathematical operations on them without them being there. This had to be as accurate as possible.</p>\n        <p>To solve this problem we resort to APIs - Application Programming Interface. We could store somewhere else while making things happen in those places and returning accurate results in their exact quantities and not enhanced. PROBLEM SOLVED!</p>\n        <p><strong>Design &amp; Development</strong> <br> Willow Investment like any other project I've worked on sort simplicity in the highest form, we won't want delays in communications, so we sort after the best yet lightest technology stacks to make this happen. Bootstrap 3 was used to quickly create style the markup, Jquery with JavaScript.</p>\n        <p>For development PHP 7, an early version of a framework I developed and MySQL was used as our database.</p>",projectResult:'<p>"Amazing work Grant!", Delivering quickly, while making the entire project fuctional and intutive is not just about selecting the right code stack, the technologies has to be used correctly. Cheers to another great success 🥂</p>',projectScreenshots:[{src:"https://inspiring-bhabha-680629.netlify.app/willow_investment/screenshots/localhost_projects_willow_investment_(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/willow_investment/screenshots/localhost_projects_willow_investment_signup.php(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/willow_investment/screenshots/localhost_projects_willow_investment_account_login.php(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/willow_investment/screenshots/localhost_projects_willow_investment_(Laptop with MDPI screen) (3).png"},{src:"https://inspiring-bhabha-680629.netlify.app/willow_investment/screenshots/localhost_projects_willow_investment_(Laptop with MDPI screen) (1).png"},{src:"https://inspiring-bhabha-680629.netlify.app/willow_investment/screenshots/localhost_projects_willow_investment_(Laptop with MDPI screen) (2).png"}]},movynet:{projectName:"Movynet",projectDate:"2019",projectDisplayPhotoPath:"https://inspiring-bhabha-680629.netlify.app/movynet/screenshots/shazam-zachary-levi-jack-dylan-grazer.jpg",projectType:"Web Design, Development",projectPlatform:"Mobile, Tablet, Desktop",projectExternalLink:"//movynet.com",projectContextPhotoPath:"https://inspiring-bhabha-680629.netlify.app/movynet/movynet-context-2880x1800.png",projectDesc:"<p>Simple, fast, useful and as immersive as possible. It's all about entertainment, it should as well be entertaining.</p>\n        <p>Movynet is a simple and basic movie website I started personly to get know how some things in programming work. It's quite obvious that movies are one of the most entaintaining things and definitely worth some try.</p>",projectPlanning:"<p><strong>Planning, Design &amp; Development</strong> <br> When I started building Movynet, I was curious about some things in programming. I knew that one of the best ways to try them out was doing it with one of my favorite hobbies.</p>\n        <p>It took about 2 months to complete the project and during that period I got familiar with APIs, Software architectures, e.g MVC, design patterns and some frameworks.</p>\n        <p>Movynet's data are all sourced through the TMDB movie API, from which parts are stored in the database. All these where made possible with PHP and MYSQL. Movynet used the earliest and very first version of a framework I created - TM framework. The idea of the framework was to create classes, e.g Database, Datetime, Validation, Filesystem, String, Encryption classes, functions and general project configurations which allowed me scaffold newer projects in PHP even faster!</p>\n        <p>Movynet design was a mix of bootstrap, custom CSS and Jquery.</p>\n        <p>Movynet was also the first PWA - Progressive Web App I designed, understanding how service workers work.</p>",projectResult:'<p>"The colors, design and entire website works well", this has been one of the greatest projects I\'ve done in a short amount of time.</p>\n        <p>The outcome?, Very desireable.</p>',projectScreenshots:[{src:"https://inspiring-bhabha-680629.netlify.app/movynet/logos/movynet_logo_552x180.png"},{src:"https://inspiring-bhabha-680629.netlify.app/movynet/screenshots/localhost_projects_movynet_(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/movynet/screenshots/localhost_projects_movynet_view.php_vwid=246&type=Movie&from=home(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/movynet/screenshots/localhost_projects_movynet_view.php_vwid=246&type=Movie&from=home(Laptop with MDPI screen) (1).png"},{src:"https://inspiring-bhabha-680629.netlify.app/movynet/screenshots/localhost_projects_movynet_view.php_vwid=246&type=Movie&from=home(Laptop with MDPI screen) (4).png"},{src:"https://inspiring-bhabha-680629.netlify.app/movynet/screenshots/localhost_projects_movynet_view.php_vwid=246&type=Movie&from=home(Laptop with MDPI screen) (3).png"},{src:"https://inspiring-bhabha-680629.netlify.app/movynet/screenshots/localhost_projects_movynet_view.php_vwid=246&type=Movie&from=home(Laptop with MDPI screen) (2).png"}]},jovianbiz:{projectName:"Jovianbiz",projectDate:"2018",projectDisplayPhotoPath:"https://inspiring-bhabha-680629.netlify.app/jovianbiz/screenshots/adult-artist-band-274406.gif",projectType:"Web Design, Development",projectPlatform:"Mobile, Tablet, Desktop",projectExternalLink:"//jovianbiz.com",projectContextPhotoPath:"https://inspiring-bhabha-680629.netlify.app/jovianbiz/jovianbiz-context-2880x1800.png",projectDesc:"<p>Jovianbiz is a combination of two business segments.</p>\n        <p>The Jovian Hair is concerned with sales of hair, hair products and accessories, while, Jovian Events is concerned with providing event services.</p>\n        <p>The amazing thing about Jovianbiz is their passion. The believe they can bring out the beauty in every thing and that is why I was excited to work with them.</p>",projectPlanning:"<p><strong>Challenges</strong> <br> Finding the perfect way to combine and register two unrelated business segments and still making them stand out needed a little bit of magic, we had to draft possible ways to accomplish this. To solve this challenge we ended building a standard landing page for the both segments, creating a seperate subdomain and adding the links to each segment, task completed!</p>\n        <p><strong>Design, Development and problem solving</strong> <br> Selecting the right colors for a business websites with two segments is important. Professional colors like blue(#00A1FF), off-white(#EEEEEE) and black(#000000) were colors of choice.</p>\n        <p>We wanted the logo as simple as possible, so we sticked to a textbased logo, employing the Sofia Regular font.</p>\n        <p>The rest of the website needed something more bold, professional and modern, Lato was the best font to accomplish this.</p>\n        <p>As a business website we needed more images to help convey what was really happening on the site with lesser words.</p>",projectResult:'<p>"Wow!, this looks so beautiful and it is exactly what I needed.", Yes, once again our design strategy gave the best results!</p>',projectScreenshots:[{src:"https://inspiring-bhabha-680629.netlify.app/jovianbiz/screenshots/www.localhost_projects_jovianbiz_index.php(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/jovianbiz/screenshots/www.localhost_projects_jovianbiz_services_(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/jovianbiz/screenshots/www.localhost_projects_jovianbiz_hair_(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/jovianbiz/screenshots/www.localhost_projects_jovianbiz_hair_category.php_cat=h_h_w(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/jovianbiz/screenshots/www.localhost_projects_jovianbiz_hair_product.php_pid=16(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/jovianbiz/screenshots/www.localhost_projects_jovianbiz_services_(Laptop with MDPI screen) (1).png"}]},advbitcoinearns:{projectName:"AdvBitcoinEarns",projectDate:"2018",projectDisplayPhotoPath:"https://inspiring-bhabha-680629.netlify.app/advbitcoinearns/screenshots/2847547.png",projectType:"Web Design, Development",projectPlatform:"Mobile, Tablet, Desktop",projectExternalLink:"//advbitcoinearns.com",projectContextPhotoPath:"https://inspiring-bhabha-680629.netlify.app/advbitcoinearns/advbitcoinearns-context-2880x1800.png",projectDesc:"<p>AdvBitcoinEarns is a bitcoin investment platform, created for the sole purpose of safe and secure bitcoin investments.</p>",projectPlanning:"<p>AdvBitoinEarns design and development was one of the quickest and fastest I have ever worked on. This was a result of the AdvBitcoinEarns group's need to launch the platform as quick as possible.</p>\n        <p>The entire project took about 3 weeks to complete, as there were ni frameworks or library used in the development of the project. The entire frontend was created with custom design codes.</p>\n        <p>The backend fully powered by PHP and a MySQL server utilizing APIs and method of communication.</p>",projectResult:"<p>Since AdvBitcoinEarns was one my earliest independent project developemt, I was able to understand most functionalities of a web app and better ways to improve functionality, design and development.</p>",projectScreenshots:[{src:"https://inspiring-bhabha-680629.netlify.app/advbitcoinearns/screenshots/www.localhost_projects_advbitcoinearns_(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/advbitcoinearns/screenshots/www.localhost_projects_advbitcoinearns_signup.php(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/advbitcoinearns/screenshots/www.localhost_projects_advbitcoinearns_login_(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/advbitcoinearns/screenshots/www.localhost_projects_advbitcoinearns_login_withdraw.php(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/advbitcoinearns/screenshots/www.localhost_projects_advbitcoinearns_index.php(Laptop with MDPI screen).png"}]},myafriconnect:{projectName:"MyAfriConnect",projectDate:"2018",projectDisplayPhotoPath:"https://inspiring-bhabha-680629.netlify.app/myafriconnect/screenshots/cellist-band-music-performance.jpg",projectType:"Web Design, Development",projectPlatform:"Mobile, Tablet, Desktop",projectExternalLink:"//myafriconnect.com",projectContextPhotoPath:"https://inspiring-bhabha-680629.netlify.app/myafriconnect/myafriconnect-context-2880x1800.png",projectDesc:'<p>"Even though it is simple and quiet, we made great sounds!"</p>\n        <p>MyAfriconnect is an audio and video music download platform. The idea is to build a native music catalogue for everyone to download their favourite African music.</p>',projectPlanning:'<p><strong>Challenges</strong> <br> Designing and creating the native feel of an audio &amp; video downloading website was a bit challenging. The right colors, fonts and general design had to be in place.</p>\n        <p><strong>Design</strong> <br> We needed to download the right template from <a href="https://w3layouts.com/elvis-a-entertainment-category-flat-bootstrap-responsive-web-template/" rel="external" target="_blank">w3layouts.com</a>, few modifications where made on the UI to give it the native African look we combined the Ghanaian colors and used the <cite>CF Flowers by Destiny</cite> font.</p>\n        <p><strong>Development</strong> <br> To improve functionality light weight libraries like JQuery and and Bootstrap were implemented. The back end handled by PHP were used for dynamic rendering of pages and Database of choice was MySQL.</p>',projectResult:"<p>The final outcome was powerful platform that keeps visitors in a total state of excitement. We recorded a tremendous increase in the daily visits from most African country, now that's what I call satisfaction!</p>",projectScreenshots:[{src:"https://inspiring-bhabha-680629.netlify.app/myafriconnect/screenshots/127.0.0.1_5500_(Laptop with MDPI screen) (2).png"},{src:"https://inspiring-bhabha-680629.netlify.app/myafriconnect/screenshots/127.0.0.1_5500_(Laptop with MDPI screen) (1).png"},{src:"https://inspiring-bhabha-680629.netlify.app/myafriconnect/screenshots/127.0.0.1_5500_(Laptop with MDPI screen).png"},{src:"https://inspiring-bhabha-680629.netlify.app/myafriconnect/screenshots/127.0.0.1_5500_single.html(Laptop with MDPI screen).png"}]}},Z={components:{AppNav:v,ShowcaseContext:F,ShowcasePlanning:Y,ShowcaseResult:X,AppFooter:H},watch:{$route:"fetchData"},methods:{fetchData(){const e=this.$route.params.pageId;Object.keys(K).includes(e)?this.showcase=K[e]:this.$router.push({name:"404"})}},created:function(){this.fetchData()},mounted:function(){AOS.init()},data:function(){return{showcase:null,params:{description:"The design portfolio of Grant Adiele, an independent web designer and developer based in Nigeria.",site_name:"Grant Adiele",site_url:"https://grantadiele.web.app/#"+this.$route.path}}},head:{title:function(){return{inner:this.showcase.projectName,seperator:"",complement:this.params.site_name}},meta:function(){return[{name:"robots",content:"index"},{name:"description",content:this.params.description},{name:"author",content:this.params.site_name},{property:"og:title",content:this.params.title},{property:"og:type",content:"website"},{property:"og:image",content:this.params.site_url+"assets/icons/ga-icon-256x256.png"},{property:"og:image:type",content:"image/png"},{property:"og:image:width",content:"256"},{property:"og:image:height",content:"256"},{property:"og:url",content:this.params.site_url},{property:"og:description",content:this.params.description},{property:"og:locale",content:"en_US"},{property:"og:site_name",content:this.params.site_name},{property:"twitter:card",content:"summary"},{property:"twitter:creator",content:"@devgranty"},{property:"twitter:title",content:this.params.title},{property:"twitter:description",content:this.params.description},{property:"twitter:image",content:this.params.site_url+"assets/icons/ga-icon-256x256.png"}]},link:function(){return[{rel:"canonical",href:this.params.site_url}]}}},ee=Object(m.a)(Z,O,[],!1,null,null,null);ee.options.__file="src/pages/ShowcasePage/index.vue";var te=ee.exports,ae=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("transition",{attrs:{"enter-active-class":"animate__animated animate__fadeInLeftBig","leave-active-class":"animate__animated animate__fadeOutLeftBig"}},[a("div",[a("div",{staticStyle:{position:"absolute",left:"50%",top:"10%",width:"100%",margin:"0",padding:"0","margin-left":"-50%"}},[a("h1",{staticStyle:{color:"#ddd","text-align":"center","font-size":"calc(10em + 2vw)"}},[e._v("4"),a("span",{staticStyle:{color:"rgba(255, 0, 0, 0.42)"}},[e._v("0")]),e._v("4")]),e._v(" "),a("p",{staticStyle:{"text-align":"center","font-weight":"900"}},[e._v("NOT FOUND")]),e._v(" "),a("p",{staticStyle:{padding:"20px",color:"#999","text-align":"center","line-height":"1.6"}},[e._v("You seem lost, that happens! Hold my hands let me take you right "),a("router-link",{staticStyle:{color:"green"},attrs:{to:"/"}},[e._v("home")])],1)])])])};ae._withStripped=!0;var ne={data:function(){return{params:{title:"404"}}},head:{title:function(){return{inner:this.params.title,seperator:"",complement:"Not Found"}},meta:function(){return[{name:"robots",content:"noindex"}]}}},se=Object(m.a)(ne,ae,[],!1,null,null,null);se.options.__file="src/pages/NotFoundPage.vue";var ie=se.exports;n.a.use(s.a),n.a.use(o.a),n.a.use(r.a);const oe=[{path:"/",name:"home",component:W},{path:"/case/:pageId",name:"case",component:te},{path:"*",name:"404",component:ie}],re=new s.a({routes:oe,mode:"hash",scrollBehavior:(e,t,a)=>e.hash?{selector:e.hash}:a||{x:0,y:0}});n.a.use(c.a,{id:"UA-170094721-1",router:re});new n.a({router:re}).$mount("#app")}},[["tjUo",12,10,4,1,2,3,6,7,8,9,5,11]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvSG9tZVBhZ2UvaW5kZXgudnVlPzBkZTYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbGF5b3V0L0FwcE5hdi52dWU/OWMyZiIsIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvbGF5b3V0L0FwcE5hdi52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbGF5b3V0L0FwcE5hdi52dWU/MzgyMiIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9sYXlvdXQvQXBwTmF2LnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvSG9tZVBhZ2UvSG9tZUhlcm8udnVlPzA5M2QiLCJ3ZWJwYWNrOi8vL3NyYy9wYWdlcy9Ib21lUGFnZS9Ib21lSGVyby52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL0hvbWVQYWdlL0hvbWVIZXJvLnZ1ZT8zNjM0Iiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9Ib21lUGFnZS9Ib21lSGVyby52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL0hvbWVQYWdlL0hvbWVNZS52dWU/MmZjOCIsIndlYnBhY2s6Ly8vc3JjL3BhZ2VzL0hvbWVQYWdlL0hvbWVNZS52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL0hvbWVQYWdlL0hvbWVNZS52dWU/ODJiNCIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvSG9tZVBhZ2UvSG9tZU1lLnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvSG9tZVBhZ2UvSG9tZVNob3djYXNlLnZ1ZT80ZTc4Iiwid2VicGFjazovLy9zcmMvcGFnZXMvSG9tZVBhZ2UvSG9tZVNob3djYXNlLnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvSG9tZVBhZ2UvSG9tZVNob3djYXNlLnZ1ZT82NmFiIiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9Ib21lUGFnZS9Ib21lU2hvd2Nhc2UudnVlIiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9Ib21lUGFnZS9Ib21lV2h5bWUudnVlPzQyMjYiLCJ3ZWJwYWNrOi8vL3NyYy9wYWdlcy9Ib21lUGFnZS9Ib21lV2h5bWUudnVlIiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9Ib21lUGFnZS9Ib21lV2h5bWUudnVlPzk4NTciLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL0hvbWVQYWdlL0hvbWVXaHltZS52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbGF5b3V0L0FwcEZvb3Rlci52dWU/ZWY0NSIsIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvbGF5b3V0L0FwcEZvb3Rlci52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbGF5b3V0L0FwcEZvb3Rlci52dWU/ODI1NCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9sYXlvdXQvQXBwRm9vdGVyLnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvSG9tZVBhZ2UvaW5kZXgudnVlPzI4YmYiLCJ3ZWJwYWNrOi8vL3NyYy9wYWdlcy9Ib21lUGFnZS9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL0hvbWVQYWdlL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvU2hvd2Nhc2VQYWdlL2luZGV4LnZ1ZT9lOWRiIiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9TaG93Y2FzZVBhZ2UvU2hvd2Nhc2VDb250ZXh0LnZ1ZT8zYzhkIiwid2VicGFjazovLy9zcmMvcGFnZXMvU2hvd2Nhc2VQYWdlL1Nob3djYXNlQ29udGV4dC52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL1Nob3djYXNlUGFnZS9TaG93Y2FzZUNvbnRleHQudnVlPzg2M2IiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL1Nob3djYXNlUGFnZS9TaG93Y2FzZUNvbnRleHQudnVlIiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9TaG93Y2FzZVBhZ2UvU2hvd2Nhc2VQbGFubmluZy52dWU/YTNmZSIsIndlYnBhY2s6Ly8vc3JjL3BhZ2VzL1Nob3djYXNlUGFnZS9TaG93Y2FzZVBsYW5uaW5nLnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvU2hvd2Nhc2VQYWdlL1Nob3djYXNlUGxhbm5pbmcudnVlP2I5ZjgiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL1Nob3djYXNlUGFnZS9TaG93Y2FzZVBsYW5uaW5nLnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvU2hvd2Nhc2VQYWdlL1Nob3djYXNlUmVzdWx0LnZ1ZT80MGExIiwid2VicGFjazovLy9zcmMvcGFnZXMvU2hvd2Nhc2VQYWdlL1Nob3djYXNlUmVzdWx0LnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvU2hvd2Nhc2VQYWdlL1Nob3djYXNlUmVzdWx0LnZ1ZT8wOTY0Iiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9TaG93Y2FzZVBhZ2UvU2hvd2Nhc2VSZXN1bHQudnVlIiwid2VicGFjazovLy8uL3NyYy9kYXRhL3Nob3djYXNlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvU2hvd2Nhc2VQYWdlL2luZGV4LnZ1ZT9hZTFiIiwid2VicGFjazovLy9zcmMvcGFnZXMvU2hvd2Nhc2VQYWdlL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvU2hvd2Nhc2VQYWdlL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvTm90Rm91bmRQYWdlLnZ1ZT84ZmZkIiwid2VicGFjazovLy9zcmMvcGFnZXMvTm90Rm91bmRQYWdlLnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvTm90Rm91bmRQYWdlLnZ1ZT8yNjZlIiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9Ob3RGb3VuZFBhZ2UudnVlIiwid2VicGFjazovLy8uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJyZW5kZXIiLCJfaCIsInRoaXMiLCIkY3JlYXRlRWxlbWVudCIsIl9jIiwiX3NlbGYiLCJhdHRycyIsIl92IiwiZGlyZWN0aXZlcyIsIm5hbWUiLCJyYXdOYW1lIiwiX3dpdGhTdHJpcHBlZCIsIl92bSIsInN0YXRpY0NsYXNzIiwidmFsdWUiLCJzZWxlY3RvciIsImNsYXNzIiwiZXhwcmVzc2lvbiIsInRvIiwic3JjIiwibmF2TG9nb1BhdGgiLCJhbHQiLCJ3aWR0aCIsImhlaWdodCIsInJvbGUiLCJfbCIsIm5hdmJhckxpbmtzIiwibmF2YmFyTGluayIsImtleSIsInRpdGxlIiwibGluayIsIl9zIiwiaWQiLCJvbiIsImNsaWNrIiwiJGV2ZW50Iiwic2hvd01lbnUiLCJuYXRpdmVPbiIsImRhdGEiLCJtZXRob2RzIiwicHJldlNjcm9sbFBvcyIsIndpbmRvdyIsInBhZ2VZT2Zmc2V0Iiwib25zY3JvbGwiLCJjdXJyZW50U2Nyb2xsUG9zIiwibmF2YmFyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwic3R5bGUiLCJ0b3AiLCJjcmVhdGVkIiwiaGlkZU5hdiIsImNvbXBvbmVudCIsIm9wdGlvbnMiLCJfX2ZpbGUiLCJfbSIsInByb2plY3RzIiwicHJvamVjdCIsImltYWdlUGF0aCIsImRldGFpbHMiLCJ0eXBlIiwiY29sb3IiLCJyZWFzb25zIiwicmVhc29uIiwiaWNvbkNsYXNzIiwiY29tbWVudCIsImNvbHVtbkNsYXNzIiwiaHJlZiIsImNvbXBvbmVudHMiLCJBcHBOYXYiLCJIb21lSGVybyIsIkhvbWVNZSIsIkhvbWVTaG93Y2FzZSIsIkhvbWVXaHltZSIsIkFwcEZvb3RlciIsInBhcmFtcyIsImRlc2NyaXB0aW9uIiwic2l0ZV9uYW1lIiwic2l0ZV91cmwiLCJtb3VudGVkIiwicGFydGljbGVzSlMiLCJsb2FkIiwiZWxlbSIsIkZsaWNraXR5IiwiY2VsbEFsaWduIiwiY29udGFpbiIsIndyYXBBcm91bmQiLCJhdXRvUGxheSIsIkFPUyIsImluaXQiLCJoZWFkIiwiaW5uZXIiLCJzZXBlcmF0b3IiLCJjb21wbGVtZW50IiwibWV0YSIsImNvbnRlbnQiLCJwcm9wZXJ0eSIsInJlbCIsInNob3djYXNlIiwicHJvamVjdE5hbWUiLCJwcm9qZWN0RGF0ZSIsInByb2plY3REaXNwbGF5UGhvdG9QYXRoIiwicHJvamVjdFR5cGUiLCJwcm9qZWN0UGxhdGZvcm0iLCJwcm9qZWN0RXh0ZXJuYWxMaW5rIiwicHJvamVjdENvbnRleHRQaG90b1BhdGgiLCJkb21Qcm9wcyIsImlubmVySFRNTCIsInByb2plY3REZXNjIiwicHJvamVjdFBsYW5uaW5nIiwicHJvamVjdFNjcmVlbnNob3RzIiwicHJvamVjdFJlc3VsdCIsInRhcmdldCIsIl90IiwicHJvcHMiLCJTdHJpbmciLCJyZXF1aXJlZCIsInByb2plY3RTY3JlZW5zaG90IiwiQXJyYXkiLCJTaG93Y2FzZUNvbnRleHQiLCJTaG93Y2FzZVBsYW5uaW5nIiwiU2hvd2Nhc2VSZXN1bHQiLCJ3YXRjaCIsInBhZ2VJZCIsIiRyb3V0ZSIsIk9iamVjdCIsImtleXMiLCJzaG93Y2FzZXMiLCJpbmNsdWRlcyIsIiRyb3V0ZXIiLCJwdXNoIiwiZmV0Y2hEYXRhIiwicGF0aCIsInN0YXRpY1N0eWxlIiwicG9zaXRpb24iLCJsZWZ0IiwibWFyZ2luIiwicGFkZGluZyIsInVzZSIsInJvdXRlcyIsIkhvbWVQYWdlIiwiU2hvd2Nhc2VQYWdlIiwiTm90Rm91bmRQYWdlIiwicm91dGVyIiwibW9kZSIsInNjcm9sbEJlaGF2aW9yIiwiZnJvbSIsInNhdmVkUG9zaXRpb24iLCJoYXNoIiwieCIsInkiLCIkbW91bnQiXSwibWFwcGluZ3MiOiJvTEFBSUEsRUFBUyxXQUNYLElBQ0lDLEVBRE1DLEtBQ0dDLGVBQ1RDLEVBRk1GLEtBRUdHLE1BQU1ELElBQU1ILEVBQ3pCLE9BQU9HLEVBQ0wsYUFDQSxDQUNFRSxNQUFPLENBQ0wscUJBQXNCLDJDQUN0QixxQkFBc0IsOENBRzFCLENBQ0VGLEVBQ0UsTUFDQSxDQUNFQSxFQUFHLFdBZkRGLEtBZ0JFSyxHQUFHLEtBQ1BILEVBQUcsYUFqQkRGLEtBa0JFSyxHQUFHLEtBQ1BILEVBQ0UsTUFDQSxDQUFFSSxXQUFZLENBQUMsQ0FBRUMsS0FBTSxhQUFjQyxRQUFTLGtCQUM5QyxDQUNFTixFQUFHLFdBdkJMRixLQXdCTUssR0FBRyxL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QU0sT0FBUTJDLFVBQVd3RixHQUNyQyxDQUFDUixLQUFNLGdCQUFpQjNILEtBQU0sT0FBUTJDLFVBQVd5RixJQUNqRCxDQUFDVCxLQUFNLElBQUszSCxLQUFNLE1BQU8yQyxVQUFXMEYsS0FHbENDLEdBQVMsSUFBSSxJQUFVLENBQ3pCSixVQUNBSyxLQUFNLE9BQ05DLGVBQWMsQ0FBQy9ILEVBQUlnSSxFQUFNQyxJQUN2QmpJLEVBQUdrSSxLQUNDLENBQUVySSxTQUFVRyxFQUFHa0ksTUFDWkQsR0FHSCxDQUFFRSxFQUFHLEVBQUdDLEVBQUcsS0FLckIsSUFBSVosSUFBSSxJQUFjLENBQ3JCMUcsR0FBSSxpQkFDSitHLFlBR1EsSUFBSSxJQUFJLENBQ2JBLFlBQ0RRLE9BQU8sVSIsImZpbGUiOiJtYWluLmUwOGNmMjFhNTJkMGY1MTNlOGU0LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcbiAgICBcInRyYW5zaXRpb25cIixcbiAgICB7XG4gICAgICBhdHRyczoge1xuICAgICAgICBcImVudGVyLWFjdGl2ZS1jbGFzc1wiOiBcImFuaW1hdGVfX2FuaW1hdGVkIGFuaW1hdGVfX2ZhZGVJbkxlZnRCaWdcIixcbiAgICAgICAgXCJsZWF2ZS1hY3RpdmUtY2xhc3NcIjogXCJhbmltYXRlX19hbmltYXRlZCBhbmltYXRlX19mYWRlT3V0TGVmdEJpZ1wiXG4gICAgICB9XG4gICAgfSxcbiAgICBbXG4gICAgICBfYyhcbiAgICAgICAgXCJkaXZcIixcbiAgICAgICAgW1xuICAgICAgICAgIF9jKFwiYXBwLW5hdlwiKSxcbiAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgIF9jKFwiaG9tZS1oZXJvXCIpLFxuICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgX2MoXG4gICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgeyBkaXJlY3RpdmVzOiBbeyBuYW1lOiBcInNjcm9sbC1zcHlcIiwgcmF3TmFtZTogXCJ2LXNjcm9sbC1zcHlcIiB9XSB9LFxuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICBfYyhcImhvbWUtbWVcIiksXG4gICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgIF9jKFwiaG9tZS1zaG93Y2FzZVwiKSxcbiAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgX2MoXCJob21lLXdoeW1lXCIpLFxuICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICBfYyhcImFwcC1mb290ZXJcIilcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAxXG4gICAgICAgICAgKVxuICAgICAgICBdLFxuICAgICAgICAxXG4gICAgICApXG4gICAgXVxuICApXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcbiAgICBcImhlYWRlclwiLFxuICAgIHtcbiAgICAgIHN0YXRpY0NsYXNzOlxuICAgICAgICBcIm5hdmJhciBhbmltYXRlX19hbmltYXRlZCBhbmltYXRlX19zbGlkZUluRG93biBhbmltYXRlX19kZWxheS0zc1wiXG4gICAgfSxcbiAgICBbXG4gICAgICBfYyhcbiAgICAgICAgXCJkaXZcIixcbiAgICAgICAge1xuICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbmFtZTogXCJzY3JvbGwtc3B5LWFjdGl2ZVwiLFxuICAgICAgICAgICAgICByYXdOYW1lOiBcInYtc2Nyb2xsLXNweS1hY3RpdmVcIixcbiAgICAgICAgICAgICAgdmFsdWU6IHsgc2VsZWN0b3I6IFwiLnNjcm9sbHNweS1maW5kXCIsIGNsYXNzOiBcInNjcm9sbHNweS1hY3RpdmVcIiB9LFxuICAgICAgICAgICAgICBleHByZXNzaW9uOlxuICAgICAgICAgICAgICAgIFwie3NlbGVjdG9yOiAnLnNjcm9sbHNweS1maW5kJywgY2xhc3M6ICdzY3JvbGxzcHktYWN0aXZlJ31cIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIF0sXG4gICAgICAgICAgc3RhdGljQ2xhc3M6IFwibmF2YmFyLWNvbnRhaW5lclwiXG4gICAgICAgIH0sXG4gICAgICAgIFtcbiAgICAgICAgICBfYyhcInJvdXRlci1saW5rXCIsIHsgYXR0cnM6IHsgdG86IFwiL1wiIH0gfSwgW1xuICAgICAgICAgICAgX2MoXCJpbWdcIiwge1xuICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJuYXZiYXItYnJhbmQtbG9nb1wiLFxuICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgIHNyYzogX3ZtLm5hdkxvZ29QYXRoLFxuICAgICAgICAgICAgICAgIGFsdDogXCJnYVwiLFxuICAgICAgICAgICAgICAgIHdpZHRoOiBcIjUwXCIsXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBcIjUwXCJcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICBdKSxcbiAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgIF9jKFxuICAgICAgICAgICAgXCJuYXZcIixcbiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwibmF2YmFyLWxpbmtzXCIsIGF0dHJzOiB7IHJvbGU6IFwibmF2aWdhdGlvblwiIH0gfSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgXCJ1bFwiLFxuICAgICAgICAgICAgICAgIF92bS5fbChfdm0ubmF2YmFyTGlua3MsIGZ1bmN0aW9uKG5hdmJhckxpbmspIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBfYyhcbiAgICAgICAgICAgICAgICAgICAgXCJsaVwiLFxuICAgICAgICAgICAgICAgICAgICB7IGtleTogbmF2YmFyTGluay50aXRsZSB9LFxuICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICBcInJvdXRlci1saW5rXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcInNjcm9sbHNweS1maW5kXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHRvOiBuYXZiYXJMaW5rLmxpbmsgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKG5hdmJhckxpbmsudGl0bGUpKV1cbiAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAwXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIF1cbiAgICAgICAgICApLFxuICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgX2MoXG4gICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICBcImJ1dHRvblwiLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcIm5hdmJhci1tZW51LWJ0blwiLFxuICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwibmF2YmFyTW9kYWxCdG5cIixcbiAgICAgICAgICAgICAgICAgICAgcm9sZTogXCJidXR0b25cIixcbiAgICAgICAgICAgICAgICAgICAgXCJhcmlhLWhhc3BvcHVwXCI6IFwidHJ1ZVwiXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgIF92bS5zaG93TWVudSA9ICFfdm0uc2hvd01lbnVcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgW192bS5fdihfdm0uX3MoX3ZtLnNob3dNZW51ID8gXCJDbG9zZVwiIDogXCJNZW51XCIpKV1cbiAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgXCJ0cmFuc2l0aW9uXCIsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJlbnRlci1hY3RpdmUtY2xhc3NcIjpcbiAgICAgICAgICAgICAgICAgICAgICBcImFuaW1hdGVfX2FuaW1hdGVkIGFuaW1hdGVfX2ZhZGVJblJpZ2h0QmlnXCIsXG4gICAgICAgICAgICAgICAgICAgIFwibGVhdmUtYWN0aXZlLWNsYXNzXCI6XG4gICAgICAgICAgICAgICAgICAgICAgXCJhbmltYXRlX19hbmltYXRlZCBhbmltYXRlX19mYWRlT3V0UmlnaHRCaWdcIlxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgIFwibmF2XCIsXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwic2hvd1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiBcInYtc2hvd1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnNob3dNZW51LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcInNob3dNZW51XCJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcIm5hdmJhci1tb2RhbFwiLFxuICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogXCJuYXZiYXJNb2RhbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgcm9sZTogXCJtZW51XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImFyaWEtbW9kYWxcIjogXCJ0cnVlXCJcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgIFwidWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwic2Nyb2xsLXNweS1hY3RpdmVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6IFwidi1zY3JvbGwtc3B5LWFjdGl2ZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6IFwiLnNjcm9sbHNweS1maW5kXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiBcInNjcm9sbHNweS1hY3RpdmVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwie3NlbGVjdG9yOiAnLnNjcm9sbHNweS1maW5kJywgY2xhc3M6ICdzY3JvbGxzcHktYWN0aXZlJ31cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fbChfdm0ubmF2YmFyTGlua3MsIGZ1bmN0aW9uKG5hdmJhckxpbmspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibGlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGtleTogbmF2YmFyTGluay50aXRsZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInJvdXRlci1saW5rXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJzY3JvbGxzcHktZmluZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHRvOiBuYXZiYXJMaW5rLmxpbmsgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYXRpdmVPbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uc2hvd01lbnUgPSAhX3ZtLnNob3dNZW51XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KF92bS5fcyhuYXZiYXJMaW5rLnRpdGxlKSldXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgMFxuICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIDFcbiAgICAgICAgICApXG4gICAgICAgIF0sXG4gICAgICAgIDFcbiAgICAgIClcbiAgICBdXG4gIClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCI8dGVtcGxhdGU+XHJcbiAgICA8aGVhZGVyIGNsYXNzPVwibmF2YmFyIGFuaW1hdGVfX2FuaW1hdGVkIGFuaW1hdGVfX3NsaWRlSW5Eb3duIGFuaW1hdGVfX2RlbGF5LTNzXCI+XHJcbiAgICAgICAgPGRpdiB2LXNjcm9sbC1zcHktYWN0aXZlPVwie3NlbGVjdG9yOiAnLnNjcm9sbHNweS1maW5kJywgY2xhc3M6ICdzY3JvbGxzcHktYWN0aXZlJ31cIiBjbGFzcz1cIm5hdmJhci1jb250YWluZXJcIj5cclxuICAgICAgICAgICAgPHJvdXRlci1saW5rIHRvPVwiL1wiPjxpbWcgY2xhc3M9XCJuYXZiYXItYnJhbmQtbG9nb1wiIHYtYmluZDpzcmM9XCJuYXZMb2dvUGF0aFwiIGFsdD1cImdhXCIgd2lkdGg9XCI1MFwiIGhlaWdodD1cIjUwXCI+PC9yb3V0ZXItbGluaz5cclxuICAgICAgICAgICAgPG5hdiBjbGFzcz1cIm5hdmJhci1saW5rc1wiIHJvbGU9XCJuYXZpZ2F0aW9uXCI+XHJcbiAgICAgICAgICAgICAgICA8dWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxpIHYtZm9yPVwibmF2YmFyTGluayBpbiBuYXZiYXJMaW5rc1wiIHYtYmluZDprZXk9XCJuYXZiYXJMaW5rLnRpdGxlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxyb3V0ZXItbGluayB2LWJpbmQ6dG89XCJuYXZiYXJMaW5rLmxpbmtcIiBjbGFzcz1cInNjcm9sbHNweS1maW5kXCI+e3sgbmF2YmFyTGluay50aXRsZSB9fTwvcm91dGVyLWxpbms+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgICAgIDwvbmF2PlxyXG4gICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiB2LW9uOmNsaWNrPVwic2hvd01lbnUgPSAhc2hvd01lbnVcIiBpZD1cIm5hdmJhck1vZGFsQnRuXCIgY2xhc3M9XCJuYXZiYXItbWVudS1idG5cIiByb2xlPVwiYnV0dG9uXCIgYXJpYS1oYXNwb3B1cD1cInRydWVcIj57eyBzaG93TWVudSA/ICdDbG9zZScgOiAnTWVudScgfX08L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDx0cmFuc2l0aW9uIGVudGVyLWFjdGl2ZS1jbGFzcz1cImFuaW1hdGVfX2FuaW1hdGVkIGFuaW1hdGVfX2ZhZGVJblJpZ2h0QmlnXCIgbGVhdmUtYWN0aXZlLWNsYXNzPVwiYW5pbWF0ZV9fYW5pbWF0ZWQgYW5pbWF0ZV9fZmFkZU91dFJpZ2h0QmlnXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPG5hdiB2LXNob3c9XCJzaG93TWVudVwiIGNsYXNzPVwibmF2YmFyLW1vZGFsXCIgaWQ9XCJuYXZiYXJNb2RhbFwiIHJvbGU9XCJtZW51XCIgYXJpYS1tb2RhbD1cInRydWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHVsIHYtc2Nyb2xsLXNweS1hY3RpdmU9XCJ7c2VsZWN0b3I6ICcuc2Nyb2xsc3B5LWZpbmQnLCBjbGFzczogJ3Njcm9sbHNweS1hY3RpdmUnfVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIHYtZm9yPVwibmF2YmFyTGluayBpbiBuYXZiYXJMaW5rc1wiIHYtYmluZDprZXk9XCJuYXZiYXJMaW5rLnRpdGxlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJvdXRlci1saW5rIHYtYmluZDp0bz1cIm5hdmJhckxpbmsubGlua1wiIHYtb246Y2xpY2submF0aXZlPVwic2hvd01lbnUgPSAhc2hvd01lbnVcIiBjbGFzcz1cInNjcm9sbHNweS1maW5kXCI+e3sgbmF2YmFyTGluay50aXRsZSB9fTwvcm91dGVyLWxpbms+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvbmF2PlxyXG4gICAgICAgICAgICAgICAgPC90cmFuc2l0aW9uPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvaGVhZGVyPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHN0eWxlPlxyXG5cclxuPC9zdHlsZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGRhdGE6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBuYXZMb2dvUGF0aDogJy4vYXNzZXRzL2xvZ29zL2dhLWxvZ28tNjAweDYwMC5wbmcnLFxyXG4gICAgICAgICAgICBuYXZiYXJMaW5rczogW1xyXG4gICAgICAgICAgICAgICAge2xpbms6ICcvI21lJywgdGl0bGU6ICdNZSd9LFxyXG4gICAgICAgICAgICAgICAge2xpbms6ICcvI3Nob3djYXNlJywgdGl0bGU6ICdTaG93Y2FzZSd9LFxyXG4gICAgICAgICAgICAgICAge2xpbms6ICcvI3doeW1lJywgdGl0bGU6ICdXaHkgTWUnfSxcclxuICAgICAgICAgICAgICAgIHtsaW5rOiAnLyNjb250YWN0JywgdGl0bGU6ICdDb250YWN0J31cclxuICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgc2hvd01lbnU6IGZhbHNlLFxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICAgIGhpZGVOYXYgKCkge1xyXG4gICAgICAgICAgICB2YXIgcHJldlNjcm9sbFBvcyA9IHdpbmRvdy5wYWdlWU9mZnNldDtcclxuICAgICAgICAgICAgd2luZG93Lm9uc2Nyb2xsID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgY3VycmVudFNjcm9sbFBvcyA9IHdpbmRvdy5wYWdlWU9mZnNldDtcclxuICAgICAgICAgICAgICAgIHZhciBuYXZiYXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmF2YmFyJylcclxuICAgICAgICAgICAgICAgIGlmKHByZXZTY3JvbGxQb3MgPiBjdXJyZW50U2Nyb2xsUG9zKXtcclxuICAgICAgICAgICAgICAgICAgICBuYXZiYXIuc3R5bGUudG9wID0gXCIwXCI7XHJcbiAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICBuYXZiYXIuc3R5bGUudG9wID0gXCItMTAwcHhcIjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHByZXZTY3JvbGxQb3MgPSBjdXJyZW50U2Nyb2xsUG9zO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBjcmVhdGVkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5oaWRlTmF2KClcclxuICAgIH0sXHJcbn1cclxuPC9zY3JpcHQ+IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0FwcE5hdi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9BcHBOYXYudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9BcHBOYXYudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWQ5YzI4MmYyJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL0FwcE5hdi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL0FwcE5hdi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkM6XFxcXHhhbXBwXFxcXGh0ZG9jc1xcXFxQUk9KRUNUU1xcXFxncmFudGFkaWVsZVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWhvdC1yZWxvYWQtYXBpXFxcXGRpc3RcXFxcaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCdkOWMyODJmMicpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCdkOWMyODJmMicsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCdkOWMyODJmMicsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vQXBwTmF2LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1kOWMyODJmMiZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCdkOWMyODJmMicsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwic3JjL2NvbXBvbmVudHMvbGF5b3V0L0FwcE5hdi52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF92bS5fbSgwKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtcbiAgZnVuY3Rpb24oKSB7XG4gICAgdmFyIF92bSA9IHRoaXNcbiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgICByZXR1cm4gX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJoZXJvXCIsIGF0dHJzOiB7IGlkOiBcIm15SGVyb1wiIH0gfSwgW1xuICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJoZXJvLXdlbGNvbWUtYm9hcmRcIiB9LCBbXG4gICAgICAgIF9jKFwiaDFcIiwgeyBzdGF0aWNDbGFzczogXCJhbmltYXRlX19hbmltYXRlZCBhbmltYXRlX19ib3VuY2VJbkRvd25cIiB9LCBbXG4gICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgXCJXZWIgRGVzaWduZXIsIERldmVsb3BlciAmIE1hY2hpbmUgTGVhcm5pbmcgZW50aHVzaWFzdCBpbiBOaWdlcmlhLlwiXG4gICAgICAgICAgKVxuICAgICAgICBdKVxuICAgICAgXSksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXG4gICAgICAgIFwiZGl2XCIsXG4gICAgICAgIHtcbiAgICAgICAgICBzdGF0aWNDbGFzczpcbiAgICAgICAgICAgIFwiYW5pbWF0ZV9fYW5pbWF0ZWQgYW5pbWF0ZV9fYm91bmNlIGFuaW1hdGVfX2luZmluaXRlIGFuaW1hdGVfX2RlbGF5LTRzIGhlcm8tc2Nyb2xsLWRvd25cIlxuICAgICAgICB9LFxuICAgICAgICBbXG4gICAgICAgICAgX2MoXCJpXCIsIHtcbiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImZhcyBmYS1jaGV2cm9uLXVwIGljb24tZ3JhZGllbnRcIixcbiAgICAgICAgICAgIGF0dHJzOiB7IFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIgfVxuICAgICAgICAgIH0pXG4gICAgICAgIF1cbiAgICAgIClcbiAgICBdKVxuICB9XG5dXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsIjx0ZW1wbGF0ZT5cclxuICAgIDxkaXYgY2xhc3M9XCJoZXJvXCIgaWQ9XCJteUhlcm9cIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiaGVyby13ZWxjb21lLWJvYXJkXCI+XHJcbiAgICAgICAgICAgIDxoMSBjbGFzcz1cImFuaW1hdGVfX2FuaW1hdGVkIGFuaW1hdGVfX2JvdW5jZUluRG93blwiPldlYiBEZXNpZ25lciwgRGV2ZWxvcGVyICZhbXA7IE1hY2hpbmUgTGVhcm5pbmcgZW50aHVzaWFzdCBpbiBOaWdlcmlhLjwvaDE+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImFuaW1hdGVfX2FuaW1hdGVkIGFuaW1hdGVfX2JvdW5jZSBhbmltYXRlX19pbmZpbml0ZSBhbmltYXRlX19kZWxheS00cyBoZXJvLXNjcm9sbC1kb3duXCI+PGkgY2xhc3M9XCJmYXMgZmEtY2hldnJvbi11cCBpY29uLWdyYWRpZW50XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPjwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c3R5bGU+XHJcblxyXG48L3N0eWxlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgXHJcbn1cclxuPC9zY3JpcHQ+IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0hvbWVIZXJvLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0hvbWVIZXJvLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vSG9tZUhlcm8udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWNhNGUyMGY0JlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL0hvbWVIZXJvLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vSG9tZUhlcm8udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgdmFyIGFwaSA9IHJlcXVpcmUoXCJDOlxcXFx4YW1wcFxcXFxodGRvY3NcXFxcUFJPSkVDVFNcXFxcZ3JhbnRhZGllbGVcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1ob3QtcmVsb2FkLWFwaVxcXFxkaXN0XFxcXGluZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnY2E0ZTIwZjQnKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnY2E0ZTIwZjQnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnY2E0ZTIwZjQnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL0hvbWVIZXJvLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1jYTRlMjBmNCZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCdjYTRlMjBmNCcsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwic3JjL3BhZ2VzL0hvbWVQYWdlL0hvbWVIZXJvLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXCJzZWN0aW9uXCIsIHsgc3RhdGljQ2xhc3M6IFwicGFnZS1zZWN0aW9uIHZhcmlhdGlvbi1zZWN0aW9uXCIgfSwgW1xuICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiaW5uZXItY29udGFpbmVyXCIgfSwgW1xuICAgICAgX2MoXG4gICAgICAgIFwiaDFcIixcbiAgICAgICAgeyBzdGF0aWNDbGFzczogXCJzZWN0aW9uLWhlYWRpbmdcIiwgYXR0cnM6IHsgaWQ6IFwibWVcIiB9IH0sXG4gICAgICAgIFtcbiAgICAgICAgICBfdm0uX3YoXCJNZSBcIiksXG4gICAgICAgICAgX2MoXCJyb3V0ZXItbGlua1wiLCB7IGF0dHJzOiB7IHRvOiBcIiNtZVwiIH0gfSwgW1xuICAgICAgICAgICAgX2MoXCJpXCIsIHtcbiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiZmFzIGZhLWxpbmsgc2VjdGlvbi1hbmNob3ItaWQgaWNvbi1ncmFkaWVudFwiLFxuICAgICAgICAgICAgICBhdHRyczogeyBcImFyaWEtaGlkZGVuXCI6IFwidHJ1ZVwiIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgXSlcbiAgICAgICAgXSxcbiAgICAgICAgMVxuICAgICAgKSxcbiAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICBfdm0uX20oMClcbiAgICBdKVxuICBdKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtcbiAgZnVuY3Rpb24oKSB7XG4gICAgdmFyIF92bSA9IHRoaXNcbiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgICByZXR1cm4gX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJhYm91dC1tZS1ub3RlXCIgfSwgW1xuICAgICAgX2MoXCJwXCIsIFtcbiAgICAgICAgX3ZtLl92KFxuICAgICAgICAgIFwiSGVsbG9vbyEgSSdtIEdyYW50IEFkaWVsZSAoT3IgeW91IGNhbiBjYWxsIG1lIERldmdyYW50eSksIGFuIGluZGVwZW5kZW50IHdlYiBkZXNpZ25lci9kZXZlbG9wZXIgYW5kIG1hY2hpbmUgbGVhcm5pbmcgZW50aHVzaWFzdCAobm90IGFuIGV4cGVydCkgYmFzZWQgaW4gTmlnZXJpYS5cIlxuICAgICAgICApXG4gICAgICBdKSxcbiAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICBfYyhcInBcIiwgW1xuICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgXCJNeSBnb2FsIGlzIHRvIGNyZWF0ZSBmdW5jdGlvbmFsIGFuZCBpbnR1dGl2ZSBpbnRlcmZhY2VzIHRoYXQgY2FwdHVyZXMgdXNlcnMgYW5kIHByb21vdGVzIHlvdXIgYnJhbmQuXCJcbiAgICAgICAgKVxuICAgICAgXSksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXCJwXCIsIFtcbiAgICAgICAgX3ZtLl92KFxuICAgICAgICAgIFwiQXNpZGUgcHJvZ3JhbW1pbmcsIEkgZW5qb3kgcGxheWluZyBnYW1lcywgbW9vbndhbGtpbmcsIHdhdGNoaW5nIG1vdmllcywgbGlzdGVuaW5nIHRvIG11c2ljIGFuZCBkYXlkcmVhbWluZy5cIlxuICAgICAgICApXG4gICAgICBdKVxuICAgIF0pXG4gIH1cbl1cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiPHRlbXBsYXRlPlxyXG4gICAgPHNlY3Rpb24gY2xhc3M9XCJwYWdlLXNlY3Rpb24gdmFyaWF0aW9uLXNlY3Rpb25cIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiaW5uZXItY29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgIDxoMSBjbGFzcz1cInNlY3Rpb24taGVhZGluZ1wiIGlkPVwibWVcIj5NZSA8cm91dGVyLWxpbmsgdG89XCIjbWVcIj48aSBjbGFzcz1cImZhcyBmYS1saW5rIHNlY3Rpb24tYW5jaG9yLWlkIGljb24tZ3JhZGllbnRcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+PC9yb3V0ZXItbGluaz48L2gxPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYWJvdXQtbWUtbm90ZVwiPlxyXG4gICAgICAgICAgICAgICAgPHA+SGVsbG9vbyEgSSdtIEdyYW50IEFkaWVsZSAoT3IgeW91IGNhbiBjYWxsIG1lIERldmdyYW50eSksIGFuIGluZGVwZW5kZW50IHdlYiBkZXNpZ25lci9kZXZlbG9wZXIgYW5kIG1hY2hpbmUgbGVhcm5pbmcgZW50aHVzaWFzdCAobm90IGFuIGV4cGVydCkgYmFzZWQgaW4gTmlnZXJpYS48L3A+XHJcbiAgICAgICAgICAgICAgICA8cD5NeSBnb2FsIGlzIHRvIGNyZWF0ZSBmdW5jdGlvbmFsIGFuZCBpbnR1dGl2ZSBpbnRlcmZhY2VzIHRoYXQgY2FwdHVyZXMgdXNlcnMgYW5kIHByb21vdGVzIHlvdXIgYnJhbmQuPC9wPlxyXG4gICAgICAgICAgICAgICAgPHA+QXNpZGUgcHJvZ3JhbW1pbmcsIEkgZW5qb3kgcGxheWluZyBnYW1lcywgbW9vbndhbGtpbmcsIHdhdGNoaW5nIG1vdmllcywgbGlzdGVuaW5nIHRvIG11c2ljIGFuZCBkYXlkcmVhbWluZy48L3A+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9zZWN0aW9uPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHN0eWxlPlxyXG5cclxuPC9zdHlsZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIFxyXG59XHJcbjwvc2NyaXB0PiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9Ib21lTWUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vSG9tZU1lLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vSG9tZU1lLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1jYTViYzliOCZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9Ib21lTWUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9Ib21lTWUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgdmFyIGFwaSA9IHJlcXVpcmUoXCJDOlxcXFx4YW1wcFxcXFxodGRvY3NcXFxcUFJPSkVDVFNcXFxcZ3JhbnRhZGllbGVcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1ob3QtcmVsb2FkLWFwaVxcXFxkaXN0XFxcXGluZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnY2E1YmM5YjgnKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnY2E1YmM5YjgnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnY2E1YmM5YjgnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL0hvbWVNZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9Y2E1YmM5YjgmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignY2E1YmM5YjgnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInNyYy9wYWdlcy9Ib21lUGFnZS9Ib21lTWUudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcInNlY3Rpb25cIiwgeyBzdGF0aWNDbGFzczogXCJwYWdlLXNlY3Rpb25cIiB9LCBbXG4gICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJpbm5lci1jb250YWluZXJcIiB9LCBbXG4gICAgICBfYyhcbiAgICAgICAgXCJoMVwiLFxuICAgICAgICB7IHN0YXRpY0NsYXNzOiBcInNlY3Rpb24taGVhZGluZ1wiLCBhdHRyczogeyBpZDogXCJzaG93Y2FzZVwiIH0gfSxcbiAgICAgICAgW1xuICAgICAgICAgIF92bS5fdihcIlNob3djYXNlIFwiKSxcbiAgICAgICAgICBfYyhcInJvdXRlci1saW5rXCIsIHsgYXR0cnM6IHsgdG86IFwiI3Nob3djYXNlXCIgfSB9LCBbXG4gICAgICAgICAgICBfYyhcImlcIiwge1xuICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJmYXMgZmEtbGluayBzZWN0aW9uLWFuY2hvci1pZCBpY29uLWdyYWRpZW50XCIsXG4gICAgICAgICAgICAgIGF0dHJzOiB7IFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICBdKVxuICAgICAgICBdLFxuICAgICAgICAxXG4gICAgICApLFxuICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgIF9jKFwicFwiLCB7IHN0YXRpY0NsYXNzOiBcInNlY3Rpb24taGVhZGxpbmVcIiB9LCBbXG4gICAgICAgIF92bS5fdihcIlNvbWUgcHJvamVjdHMgSSd2ZSB3b3JrZWQgb24gaW5kZXBlbmRlbnRseS5cIilcbiAgICAgIF0pLFxuICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiY29udGFpbmVyLWZsdWlkXCIgfSwgW1xuICAgICAgICBfYyhcbiAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwicm93XCIgfSxcbiAgICAgICAgICBfdm0uX2woX3ZtLnByb2plY3RzLCBmdW5jdGlvbihwcm9qZWN0KSB7XG4gICAgICAgICAgICByZXR1cm4gX2MoXG4gICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgIHsga2V5OiBwcm9qZWN0LnRpdGxlLCBzdGF0aWNDbGFzczogXCJjb2wtMTIgY29sLWxnLTYgbWItNFwiIH0sXG4gICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcInByb2plY3QtY2FyZFwiLFxuICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBcImRhdGEtYW9zXCI6IFwiZmFkZS11cFwiIH1cbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgIFwicm91dGVyLWxpbmtcIixcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJwcm9qZWN0LWxpbmtcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHRvOiBwcm9qZWN0LmxpbmsgfVxuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJpbWdcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJwcm9qZWN0LXRodW1ibmFpbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IHByb2plY3QuaW1hZ2VQYXRoIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwicHJvamVjdC1kZXRhaWxzXCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImgzXCIsIHsgc3R5bGU6IHByb2plY3QuZGV0YWlscyB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhwcm9qZWN0LnRpdGxlKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaDJcIiwgeyBzdHlsZTogcHJvamVjdC5kZXRhaWxzIH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKHByb2plY3QudHlwZSkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIClcbiAgICAgICAgICB9KSxcbiAgICAgICAgICAwXG4gICAgICAgIClcbiAgICAgIF0pXG4gICAgXSlcbiAgXSlcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCI8dGVtcGxhdGU+XHJcbiAgICA8c2VjdGlvbiBjbGFzcz1cInBhZ2Utc2VjdGlvblwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJpbm5lci1jb250YWluZXJcIj5cclxuICAgICAgICAgICAgPGgxIGNsYXNzPVwic2VjdGlvbi1oZWFkaW5nXCIgaWQ9XCJzaG93Y2FzZVwiPlNob3djYXNlIDxyb3V0ZXItbGluayB0bz1cIiNzaG93Y2FzZVwiPjxpIGNsYXNzPVwiZmFzIGZhLWxpbmsgc2VjdGlvbi1hbmNob3ItaWQgaWNvbi1ncmFkaWVudFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvaT48L3JvdXRlci1saW5rPjwvaDE+XHJcbiAgICAgICAgICAgIDxwIGNsYXNzPVwic2VjdGlvbi1oZWFkbGluZVwiPlNvbWUgcHJvamVjdHMgSSd2ZSB3b3JrZWQgb24gaW5kZXBlbmRlbnRseS48L3A+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXItZmx1aWRcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLTEyIGNvbC1sZy02IG1iLTRcIiB2LWZvcj1cInByb2plY3QgaW4gcHJvamVjdHNcIiB2LWJpbmQ6a2V5PVwicHJvamVjdC50aXRsZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHJvamVjdC1jYXJkXCIgZGF0YS1hb3M9XCJmYWRlLXVwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cm91dGVyLWxpbmsgdi1iaW5kOnRvPVwicHJvamVjdC5saW5rXCIgY2xhc3M9XCJwcm9qZWN0LWxpbmtcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPVwicHJvamVjdC10aHVtYm5haWxcIiB2LWJpbmQ6c3JjPVwicHJvamVjdC5pbWFnZVBhdGhcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHJvamVjdC1kZXRhaWxzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMyB2LWJpbmQ6c3R5bGU9XCJwcm9qZWN0LmRldGFpbHNcIj57eyBwcm9qZWN0LnRpdGxlIH19PC9oMz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyIHYtYmluZDpzdHlsZT1cInByb2plY3QuZGV0YWlsc1wiPnt7IHByb2plY3QudHlwZSB9fTwvaDI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3JvdXRlci1saW5rPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvc2VjdGlvbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzdHlsZT5cclxuXHJcbjwvc3R5bGU+XHJcblxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBkYXRhOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcHJvamVjdHM6W1xyXG4gICAgICAgICAgICAgICAge2xpbms6ICdjYXNlL3Byb2plY3QtbngnLCBkZXRhaWxzOiB7Y29sb3I6ICcjMDAwJ30sIHRpdGxlOiAncHJvamVjdCBueCcsIHR5cGU6ICdXZWIgZGVzaWduLCBkZXZlbG9wbWVudCcsIGltYWdlUGF0aDogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvcHJvamVjdF9ueC9wcm9qZWN0LW54LWNvdmVyLTYwMHg2MDAucG5nJ30sXHJcblxyXG4gICAgICAgICAgICAgICAge2xpbms6ICdjYXNlL3dpbGxvdy1pbnZlc3RtZW50JywgZGV0YWlsczoge2NvbG9yOiAnI2ZmZid9LCB0aXRsZTogJ3dpbGxvdyBpbnZlc3RtZW50JywgdHlwZTogJ1dlYiBkZXNpZ24sIGRldmVsb3BtZW50JywgaW1hZ2VQYXRoOiAnaHR0cHM6Ly9pbnNwaXJpbmctYmhhYmhhLTY4MDYyOS5uZXRsaWZ5LmFwcC93aWxsb3dfaW52ZXN0bWVudC93aWxsb3ctaW52ZXN0bWVudC1jb3Zlci02MDB4NjAwLnBuZyd9LFxyXG5cclxuICAgICAgICAgICAgICAgIHtsaW5rOiAnY2FzZS9tb3Z5bmV0JywgZGV0YWlsczoge2NvbG9yOiAnI2RkMDQwNCd9LCB0aXRsZTogJ21vdnluZXQnLCB0eXBlOiAnV2ViIGRlc2lnbiwgZGV2ZWxvcG1lbnQnLCBpbWFnZVBhdGg6ICdodHRwczovL2luc3BpcmluZy1iaGFiaGEtNjgwNjI5Lm5ldGxpZnkuYXBwL21vdnluZXQvbW92eW5ldC1jb3Zlci02MDB4NjAwLnBuZyd9LFxyXG5cclxuICAgICAgICAgICAgICAgIHtsaW5rOiAnY2FzZS9qb3ZpYW5iaXonLCBkZXRhaWxzOiB7Y29sb3I6ICcjZmZmJ30sIHRpdGxlOiAnam92aWFuYml6JywgdHlwZTogJ1dlYiBkZXNpZ24sIGRldmVsb3BtZW50JywgaW1hZ2VQYXRoOiAnaHR0cHM6Ly9pbnNwaXJpbmctYmhhYmhhLTY4MDYyOS5uZXRsaWZ5LmFwcC9qb3ZpYW5iaXovam92aWFuYml6LWNvdmVyLTYwMHg2MDAucG5nJ30sXHJcblxyXG4gICAgICAgICAgICAgICAge2xpbms6ICdjYXNlL2FkdmJpdGNvaW5lYXJucycsIGRldGFpbHM6IHtjb2xvcjogJyNlZTIwMDAnfSwgdGl0bGU6ICdhZHZiaXRjb2luZWFybnMnLCB0eXBlOiAnV2ViIGRlc2lnbiwgZGV2ZWxvcG1lbnQnLCBpbWFnZVBhdGg6ICdodHRwczovL2luc3BpcmluZy1iaGFiaGEtNjgwNjI5Lm5ldGxpZnkuYXBwL2FkdmJpdGNvaW5lYXJucy9hZHZiaXRjb2luZWFybnMtY292ZXItNjAweDYwMC5wbmcnfSxcclxuXHJcbiAgICAgICAgICAgICAgICB7bGluazogJ2Nhc2UvbXlhZnJpY29ubmVjdCcsIGRldGFpbHM6IHtjb2xvcjogJyNmZmYnfSwgdGl0bGU6ICdteWFmcmljb25uZWN0JywgdHlwZTogJ1dlYiBkZXNpZ24sIGRldmVsb3BtZW50JywgaW1hZ2VQYXRoOiAnaHR0cHM6Ly9pbnNwaXJpbmctYmhhYmhhLTY4MDYyOS5uZXRsaWZ5LmFwcC9teWFmcmljb25uZWN0L2xvZ29zL2xvZ28tMTA4MHgxMDgwLmpwZyd9XHJcbiAgICAgICAgICAgIF1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuPC9zY3JpcHQ+IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0hvbWVTaG93Y2FzZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9Ib21lU2hvd2Nhc2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9Ib21lU2hvd2Nhc2UudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWMzYWNmODhlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL0hvbWVTaG93Y2FzZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL0hvbWVTaG93Y2FzZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkM6XFxcXHhhbXBwXFxcXGh0ZG9jc1xcXFxQUk9KRUNUU1xcXFxncmFudGFkaWVsZVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWhvdC1yZWxvYWQtYXBpXFxcXGRpc3RcXFxcaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCdjM2FjZjg4ZScpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCdjM2FjZjg4ZScsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCdjM2FjZjg4ZScsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vSG9tZVNob3djYXNlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1jM2FjZjg4ZSZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCdjM2FjZjg4ZScsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwic3JjL3BhZ2VzL0hvbWVQYWdlL0hvbWVTaG93Y2FzZS52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF9jKFwic2VjdGlvblwiLCB7IHN0YXRpY0NsYXNzOiBcInBhZ2Utc2VjdGlvblwiIH0sIFtcbiAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImlubmVyLWNvbnRhaW5lclwiIH0sIFtcbiAgICAgIF9jKFxuICAgICAgICBcImgxXCIsXG4gICAgICAgIHsgc3RhdGljQ2xhc3M6IFwic2VjdGlvbi1oZWFkaW5nXCIsIGF0dHJzOiB7IGlkOiBcIndoeW1lXCIgfSB9LFxuICAgICAgICBbXG4gICAgICAgICAgX3ZtLl92KFwiV2h5IE1lIFwiKSxcbiAgICAgICAgICBfYyhcInJvdXRlci1saW5rXCIsIHsgYXR0cnM6IHsgdG86IFwiI3doeW1lXCIgfSB9LCBbXG4gICAgICAgICAgICBfYyhcImlcIiwge1xuICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJmYXMgZmEtbGluayBzZWN0aW9uLWFuY2hvci1pZCBpY29uLWdyYWRpZW50XCIsXG4gICAgICAgICAgICAgIGF0dHJzOiB7IFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICBdKVxuICAgICAgICBdLFxuICAgICAgICAxXG4gICAgICApLFxuICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgIF9jKFwicFwiLCB7IHN0YXRpY0NsYXNzOiBcInNlY3Rpb24taGVhZGxpbmVcIiB9LCBbXG4gICAgICAgIF92bS5fdignU3RpbGwgbm90IGNvbnZpbmNlZD8gSGVyZSBhcmUgc29tZSBcIldIWSBNRVwiIHJlYXNvbnMuJylcbiAgICAgIF0pLFxuICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgIF9jKFxuICAgICAgICBcImRpdlwiLFxuICAgICAgICB7IHN0YXRpY0NsYXNzOiBcIndoeW1lLWNhcm91c2VsXCIgfSxcbiAgICAgICAgX3ZtLl9sKF92bS5yZWFzb25zLCBmdW5jdGlvbihyZWFzb24pIHtcbiAgICAgICAgICByZXR1cm4gX2MoXG4gICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgeyBrZXk6IHJlYXNvbi50aXRsZSwgc3RhdGljQ2xhc3M6IFwiY2Fyb3VzZWwtY2VsbFwiIH0sXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgIF9jKFwidWxcIiwgW1xuICAgICAgICAgICAgICAgIF9jKFwibGlcIiwgW1xuICAgICAgICAgICAgICAgICAgX2MoXCJpXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiaWNvbi1ncmFkaWVudFwiLFxuICAgICAgICAgICAgICAgICAgICBjbGFzczogcmVhc29uLmljb25DbGFzcyxcbiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIiB9XG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgX2MoXCJsaVwiLCBbX2MoXCJoMlwiLCBbX3ZtLl92KF92bS5fcyhyZWFzb24udGl0bGUpKV0pXSksXG4gICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICBfYyhcImxpXCIsIFtfdm0uX3YoX3ZtLl9zKHJlYXNvbi5jb21tZW50KSldKVxuICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgXVxuICAgICAgICAgIClcbiAgICAgICAgfSksXG4gICAgICAgIDBcbiAgICAgICksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJ3aHltZS1yZWFzb25cIiB9LCBbXG4gICAgICAgIF9jKFxuICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJyb3dcIiB9LFxuICAgICAgICAgIF92bS5fbChfdm0ucmVhc29ucywgZnVuY3Rpb24ocmVhc29uKSB7XG4gICAgICAgICAgICByZXR1cm4gX2MoXCJkaXZcIiwgeyBrZXk6IHJlYXNvbi50aXRsZSwgY2xhc3M6IHJlYXNvbi5jb2x1bW5DbGFzcyB9LCBbXG4gICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwicmVhc29uLWNlbGxcIixcbiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IFwiZGF0YS1hb3NcIjogXCJmYWRlLXVwXCIgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgX2MoXCJ1bFwiLCBbXG4gICAgICAgICAgICAgICAgICAgIF9jKFwibGlcIiwgW1xuICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaVwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJpY29uLWdyYWRpZW50XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzczogcmVhc29uLmljb25DbGFzcyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICBfYyhcImxpXCIsIFtfYyhcImgyXCIsIFtfdm0uX3YoX3ZtLl9zKHJlYXNvbi50aXRsZSkpXSldKSxcbiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgX2MoXCJsaVwiLCBbX3ZtLl92KF92bS5fcyhyZWFzb24uY29tbWVudCkpXSlcbiAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICBdKVxuICAgICAgICAgIH0pLFxuICAgICAgICAgIDBcbiAgICAgICAgKVxuICAgICAgXSlcbiAgICBdKVxuICBdKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsIjx0ZW1wbGF0ZT5cclxuICAgIDxzZWN0aW9uIGNsYXNzPVwicGFnZS1zZWN0aW9uXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImlubmVyLWNvbnRhaW5lclwiPlxyXG4gICAgICAgICAgICA8aDEgY2xhc3M9XCJzZWN0aW9uLWhlYWRpbmdcIiBpZD1cIndoeW1lXCI+V2h5IE1lIDxyb3V0ZXItbGluayB0bz1cIiN3aHltZVwiPjxpIGNsYXNzPVwiZmFzIGZhLWxpbmsgc2VjdGlvbi1hbmNob3ItaWQgaWNvbi1ncmFkaWVudFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvaT48L3JvdXRlci1saW5rPjwvaDE+XHJcbiAgICAgICAgICAgIDxwIGNsYXNzPVwic2VjdGlvbi1oZWFkbGluZVwiPlN0aWxsIG5vdCBjb252aW5jZWQ/IEhlcmUgYXJlIHNvbWUgXCJXSFkgTUVcIiByZWFzb25zLjwvcD5cclxuXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aHltZS1jYXJvdXNlbFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcm91c2VsLWNlbGxcIiB2LWZvcj1cInJlYXNvbiBpbiByZWFzb25zXCIgdi1iaW5kOmtleT1cInJlYXNvbi50aXRsZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDx1bD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxpIHYtYmluZDpjbGFzcz1cInJlYXNvbi5pY29uQ2xhc3NcIiBjbGFzcz1cImljb24tZ3JhZGllbnRcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+PC9saT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxoMj57eyByZWFzb24udGl0bGUgfX08L2gyPjwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT57eyByZWFzb24uY29tbWVudCB9fTwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgPC91bD5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aHltZS1yZWFzb25cIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtYmluZDpjbGFzcz1cInJlYXNvbi5jb2x1bW5DbGFzc1wiIHYtZm9yPVwicmVhc29uIGluIHJlYXNvbnNcIiB2LWJpbmQ6a2V5PVwicmVhc29uLnRpdGxlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyZWFzb24tY2VsbFwiIGRhdGEtYW9zPVwiZmFkZS11cFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48aSB2LWJpbmQ6Y2xhc3M9XCJyZWFzb24uaWNvbkNsYXNzXCIgY2xhc3M9XCJpY29uLWdyYWRpZW50XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPjwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxoMj57eyByZWFzb24udGl0bGUgfX08L2gyPjwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPnt7IHJlYXNvbi5jb21tZW50IH19PC9saT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9zZWN0aW9uPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHN0eWxlPlxyXG5cclxuPC9zdHlsZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGRhdGE6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICByZWFzb25zOiBbXHJcbiAgICAgICAgICAgICAgICB7Y29sdW1uQ2xhc3M6ICdjb2wtbGctNCBvZmZzZXQtbGctNCBtYi01JywgaWNvbkNsYXNzOiAnZmFzIGZhLXNtaWxlJywgdGl0bGU6ICdCZXN0IFF1YWxpdHknLCBjb21tZW50OiAnTm90aGluZyBidXQgdGhlIEJFU1QuJ30sXHJcbiAgICAgICAgICAgICAgICB7Y29sdW1uQ2xhc3M6ICdjb2wtbGctNiBtYi01JywgaWNvbkNsYXNzOiAnZmFzIGZhLWdlbScsIHRpdGxlOiAnRnVsbHkgQ3VzdG9taXplZCcsIGNvbW1lbnQ6ICdMaWtlIG5vdGhpbmcgeW91XFwndmUgc2VlbiBiZWZvcmUsIGJ1aWxkIGl0IGZyb20gdGhlIGdyb3VuZCB1cC4nfSxcclxuICAgICAgICAgICAgICAgIHtjb2x1bW5DbGFzczogJ2NvbC1sZy00IG9mZnNldC1sZy0xIG1iLTUnLCBpY29uQ2xhc3M6ICdmYXMgZmEtbW9uZXktYmlsbC13YXZlJywgdGl0bGU6ICdBZmZvcmRhYmxlJywgY29tbWVudDogJ05vdCB0byBiZSBtaXN0YWtlbiBmb3IgQ0hFQVAuJ30sXHJcbiAgICAgICAgICAgICAgICB7Y29sdW1uQ2xhc3M6ICdjb2wtbGctNCBvZmZzZXQtbGctMSBtYi01JywgaWNvbkNsYXNzOiAnZmFzIGZhLXNoaXBwaW5nLWZhc3QnLCB0aXRsZTogJ0Zhc3QgRGVsaXZlcnknLCBjb21tZW50OiAnV291bGRuXFwndCBoYXZlIHRvIHJ1c2ggaXQsIGp1c3QgYmUgdGhlcmUgb24gdGltZS4nfSxcclxuICAgICAgICAgICAgICAgIHtjb2x1bW5DbGFzczogJ2NvbC1sZy02IG1iLTUnLCBpY29uQ2xhc3M6ICdmYXMgZmEtZW52ZWxvcGUnLCB0aXRsZTogJ1N1cHBvcnQnLCBjb21tZW50OiAnUHJvdmlkZSBhbGwgcmVxdWlyZWQgYXNzaXN0YW5jZSB0aWxsIHlvdSBhcmUgdXAgYW5kIHJ1bm5pbmcgd2l0aCB5b3VyIHByb2plY3QuJ31cclxuICAgICAgICAgICAgXVxyXG4gICAgICAgIH1cclxuICAgIH0sICAgXHJcbn1cclxuPC9zY3JpcHQ+IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0hvbWVXaHltZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9Ib21lV2h5bWUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9Ib21lV2h5bWUudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTE5YjM0ZTg0JlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL0hvbWVXaHltZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL0hvbWVXaHltZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkM6XFxcXHhhbXBwXFxcXGh0ZG9jc1xcXFxQUk9KRUNUU1xcXFxncmFudGFkaWVsZVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWhvdC1yZWxvYWQtYXBpXFxcXGRpc3RcXFxcaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCcxOWIzNGU4NCcpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCcxOWIzNGU4NCcsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCcxOWIzNGU4NCcsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vSG9tZVdoeW1lLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xOWIzNGU4NCZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCcxOWIzNGU4NCcsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwic3JjL3BhZ2VzL0hvbWVQYWdlL0hvbWVXaHltZS52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF92bS5fbSgwKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtcbiAgZnVuY3Rpb24oKSB7XG4gICAgdmFyIF92bSA9IHRoaXNcbiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgICByZXR1cm4gX2MoXG4gICAgICBcImZvb3RlclwiLFxuICAgICAgeyBzdGF0aWNDbGFzczogXCJjb250YWN0LWZvb3RlclwiLCBhdHRyczogeyBpZDogXCJjb250YWN0XCIgfSB9LFxuICAgICAgW1xuICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImlubmVyLWNvbnRhaW5lclwiIH0sIFtcbiAgICAgICAgICBfYyhcImgxXCIsIHsgc3RhdGljQ2xhc3M6IFwic2VjdGlvbi1pY29uLWhlYWRpbmdcIiB9LCBbXG4gICAgICAgICAgICBfYyhcImFcIiwgeyBhdHRyczogeyBocmVmOiBcIiNjb250YWN0XCIgfSB9LCBbXG4gICAgICAgICAgICAgIF9jKFwiaVwiLCB7XG4gICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiZmFzIGZhLWVudmVsb3BlIGljb24tZ3JhZGllbnRcIixcbiAgICAgICAgICAgICAgICBhdHRyczogeyBcImFyaWEtaGlkZGVuXCI6IFwidHJ1ZVwiIH1cbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIF0pXG4gICAgICAgICAgXSksXG4gICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICBfYyhcImgyXCIsIHsgc3RhdGljQ2xhc3M6IFwiY29udGFjdC1ub3RlXCIgfSwgW1xuICAgICAgICAgICAgX3ZtLl92KFwiWW91J3JlIGEgbWFpbCBhd2F5LiBFbWFpbCBtZSBhdCBcIiksXG4gICAgICAgICAgICBfYyhcImFcIiwgeyBhdHRyczogeyBocmVmOiBcIm1haWx0bzpoZWxsby5kZXZncmFudHlAZ21haWwuY29tXCIgfSB9LCBbXG4gICAgICAgICAgICAgIF92bS5fdihcImhlbGxvLmRldmdyYW50eUBnbWFpbC5jb21cIilcbiAgICAgICAgICAgIF0pXG4gICAgICAgICAgXSlcbiAgICAgICAgXSlcbiAgICAgIF1cbiAgICApXG4gIH1cbl1cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiPHRlbXBsYXRlPlxyXG4gICAgPGZvb3RlciBjbGFzcz1cImNvbnRhY3QtZm9vdGVyXCIgaWQ9XCJjb250YWN0XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImlubmVyLWNvbnRhaW5lclwiPlxyXG4gICAgICAgICAgICA8aDEgY2xhc3M9XCJzZWN0aW9uLWljb24taGVhZGluZ1wiPjxhIGhyZWY9XCIjY29udGFjdFwiPjxpIGNsYXNzPVwiZmFzIGZhLWVudmVsb3BlIGljb24tZ3JhZGllbnRcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+PC9hPjwvaDE+XHJcbiAgICAgICAgICAgIDxoMiBjbGFzcz1cImNvbnRhY3Qtbm90ZVwiPllvdSdyZSBhIG1haWwgYXdheS4gRW1haWwgbWUgYXQgPGEgaHJlZj1cIm1haWx0bzpoZWxsby5kZXZncmFudHlAZ21haWwuY29tXCI+aGVsbG8uZGV2Z3JhbnR5QGdtYWlsLmNvbTwvYT48L2gyPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9mb290ZXI+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c3R5bGU+XHJcblxyXG48L3N0eWxlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgXHJcbn1cclxuPC9zY3JpcHQ+IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0FwcEZvb3Rlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9BcHBGb290ZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9BcHBGb290ZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWZhOGVmYTMyJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL0FwcEZvb3Rlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL0FwcEZvb3Rlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkM6XFxcXHhhbXBwXFxcXGh0ZG9jc1xcXFxQUk9KRUNUU1xcXFxncmFudGFkaWVsZVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWhvdC1yZWxvYWQtYXBpXFxcXGRpc3RcXFxcaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCdmYThlZmEzMicpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCdmYThlZmEzMicsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCdmYThlZmEzMicsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vQXBwRm9vdGVyLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1mYThlZmEzMiZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCdmYThlZmEzMicsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwic3JjL2NvbXBvbmVudHMvbGF5b3V0L0FwcEZvb3Rlci52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiPHRlbXBsYXRlPlxyXG4gICAgPHRyYW5zaXRpb24gZW50ZXItYWN0aXZlLWNsYXNzPVwiYW5pbWF0ZV9fYW5pbWF0ZWQgYW5pbWF0ZV9fZmFkZUluTGVmdEJpZ1wiIGxlYXZlLWFjdGl2ZS1jbGFzcz1cImFuaW1hdGVfX2FuaW1hdGVkIGFuaW1hdGVfX2ZhZGVPdXRMZWZ0QmlnXCI+XHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgPGFwcC1uYXYvPlxyXG4gICAgICAgICAgICA8aG9tZS1oZXJvLz5cclxuICAgICAgICAgICAgPGRpdiB2LXNjcm9sbC1zcHk+XHJcbiAgICAgICAgICAgICAgICA8aG9tZS1tZS8+XHJcbiAgICAgICAgICAgICAgICA8aG9tZS1zaG93Y2FzZS8+XHJcbiAgICAgICAgICAgICAgICA8aG9tZS13aHltZS8+XHJcbiAgICAgICAgICAgICAgICA8YXBwLWZvb3Rlci8+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC90cmFuc2l0aW9uPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHN0eWxlPlxyXG5cclxuPC9zdHlsZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmltcG9ydCBBcHBOYXYgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9sYXlvdXQvQXBwTmF2LnZ1ZSdcclxuaW1wb3J0IEhvbWVIZXJvIGZyb20gJy4vSG9tZUhlcm8udnVlJ1xyXG5pbXBvcnQgSG9tZU1lIGZyb20gJy4vSG9tZU1lLnZ1ZSdcclxuaW1wb3J0IEhvbWVTaG93Y2FzZSBmcm9tICcuL0hvbWVTaG93Y2FzZS52dWUnXHJcbmltcG9ydCBIb21lV2h5bWUgZnJvbSAnLi9Ib21lV2h5bWUudnVlJ1xyXG5pbXBvcnQgQXBwRm9vdGVyIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvbGF5b3V0L0FwcEZvb3Rlci52dWUnXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBjb21wb25lbnRzOiB7XHJcbiAgICAgICAgQXBwTmF2LFxyXG4gICAgICAgIEhvbWVIZXJvLFxyXG4gICAgICAgIEhvbWVNZSxcclxuICAgICAgICBIb21lU2hvd2Nhc2UsXHJcbiAgICAgICAgSG9tZVdoeW1lLFxyXG4gICAgICAgIEFwcEZvb3RlclxyXG4gICAgfSxcclxuXHJcbiAgICBkYXRhOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcGFyYW1zOiB7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJ0Rlc2lnbiBQb3J0Zm9saW8gb2YgR3JhbnQgQWRpZWxlJyxcclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVGhlIGRlc2lnbiBwb3J0Zm9saW8gb2YgR3JhbnQgQWRpZWxlLCBhbiBpbmRlcGVuZGVudCB3ZWIgZGVzaWduZXIgYW5kIGRldmVsb3BlciBiYXNlZCBpbiBOaWdlcmlhLicsXHJcbiAgICAgICAgICAgICAgICBzaXRlX25hbWU6ICdHcmFudCBBZGllbGUnLFxyXG4gICAgICAgICAgICAgICAgc2l0ZV91cmw6ICdodHRwczovL2dyYW50YWRpZWxlLndlYi5hcHAvJyxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgbW91bnRlZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIC8qIHBhcnRpY2xlc0pTLmxvYWQoQGRvbS1pZCwgQHBhdGgtanNvbiwgQGNhbGxiYWNrIChvcHRpb25hbCkpOyAqL1xyXG4gICAgICAgIHBhcnRpY2xlc0pTLmxvYWQoJ215SGVybycsICcuL2Fzc2V0cy9qc29uL215cGFydGljbGVzLWNvbmZpZy5qc29uJylcclxuXHJcbiAgICAgICAgdmFyIGVsZW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2h5bWUtY2Fyb3VzZWwnKVxyXG4gICAgICAgIHZhciBmbGt0eSA9IG5ldyBGbGlja2l0eSggZWxlbSwge1xyXG4gICAgICAgICAgICBjZWxsQWxpZ246ICdjZW50ZXInLFxyXG4gICAgICAgICAgICBjb250YWluOiB0cnVlLFxyXG4gICAgICAgICAgICB3cmFwQXJvdW5kOiB0cnVlLFxyXG4gICAgICAgICAgICBhdXRvUGxheTogMzUwMFxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIEFPUy5pbml0KClcclxuICAgIH0sXHJcblxyXG4gICAgaGVhZDoge1xyXG4gICAgICAgIHRpdGxlOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBpbm5lcjogdGhpcy5wYXJhbXMudGl0bGUsXHJcbiAgICAgICAgICAgICAgICBzZXBlcmF0b3I6ICcnLFxyXG4gICAgICAgICAgICAgICAgY29tcGxlbWVudDogJycsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBtZXRhOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBbXHJcbiAgICAgICAgICAgICAgICB7bmFtZTogJ3JvYm90cycsIGNvbnRlbnQ6ICdpbmRleCd9LFxyXG4gICAgICAgICAgICAgICAge25hbWU6ICdkZXNjcmlwdGlvbicsIGNvbnRlbnQ6IHRoaXMucGFyYW1zLmRlc2NyaXB0aW9ufSxcclxuICAgICAgICAgICAgICAgIHtuYW1lOiAnYXV0aG9yJywgY29udGVudDogdGhpcy5wYXJhbXMuc2l0ZV9uYW1lfSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ29nOnRpdGxlJywgY29udGVudDogdGhpcy5wYXJhbXMudGl0bGV9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAnb2c6dHlwZScsIGNvbnRlbnQ6ICd3ZWJzaXRlJ30sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICdvZzppbWFnZScsIGNvbnRlbnQ6IHRoaXMucGFyYW1zLnNpdGVfdXJsICsgJ2Fzc2V0cy9pY29ucy9nYS1pY29uLTI1NngyNTYucG5nJ30sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICdvZzppbWFnZTp0eXBlJywgY29udGVudDogJ2ltYWdlL3BuZyd9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAnb2c6aW1hZ2U6d2lkdGgnLCBjb250ZW50OiAnMjU2J30sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICdvZzppbWFnZTpoZWlnaHQnLCBjb250ZW50OiAnMjU2J30sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICdvZzp1cmwnLCBjb250ZW50OiB0aGlzLnBhcmFtcy5zaXRlX3VybH0sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICdvZzpkZXNjcmlwdGlvbicsIGNvbnRlbnQ6IHRoaXMucGFyYW1zLmRlc2NyaXB0aW9ufSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ29nOmxvY2FsZScsIGNvbnRlbnQ6ICdlbl9VUyd9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAnb2c6c2l0ZV9uYW1lJywgY29udGVudDogdGhpcy5wYXJhbXMuc2l0ZV9uYW1lfSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ3R3aXR0ZXI6Y2FyZCcsIGNvbnRlbnQ6ICdzdW1tYXJ5J30sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICd0d2l0dGVyOmNyZWF0b3InLCBjb250ZW50OiAnQGRldmdyYW50eSd9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAndHdpdHRlcjp0aXRsZScsIGNvbnRlbnQ6IHRoaXMucGFyYW1zLnRpdGxlfSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ3R3aXR0ZXI6ZGVzY3JpcHRpb24nLCBjb250ZW50OiB0aGlzLnBhcmFtcy5kZXNjcmlwdGlvbn0sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICd0d2l0dGVyOmltYWdlJywgY29udGVudDogdGhpcy5wYXJhbXMuc2l0ZV91cmwgKyAnYXNzZXRzL2ljb25zL2dhLWljb24tMjU2eDI1Ni5wbmcnfSxcclxuICAgICAgICAgICAgXVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIGxpbms6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIFtcclxuICAgICAgICAgICAgICAgIHtyZWw6ICdjYW5vbmljYWwnLCBocmVmOiB0aGlzLnBhcmFtcy5zaXRlX3VybH0sXHJcbiAgICAgICAgICAgIF1cclxuICAgICAgICB9LFxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWIzNjFjMjk2JlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgdmFyIGFwaSA9IHJlcXVpcmUoXCJDOlxcXFx4YW1wcFxcXFxodGRvY3NcXFxcUFJPSkVDVFNcXFxcZ3JhbnRhZGllbGVcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1ob3QtcmVsb2FkLWFwaVxcXFxkaXN0XFxcXGluZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnYjM2MWMyOTYnKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnYjM2MWMyOTYnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnYjM2MWMyOTYnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1iMzYxYzI5NiZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCdiMzYxYzI5NicsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwic3JjL3BhZ2VzL0hvbWVQYWdlL2luZGV4LnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXG4gICAgXCJ0cmFuc2l0aW9uXCIsXG4gICAge1xuICAgICAgYXR0cnM6IHtcbiAgICAgICAgXCJlbnRlci1hY3RpdmUtY2xhc3NcIjogXCJhbmltYXRlX19hbmltYXRlZCBhbmltYXRlX19mYWRlSW5MZWZ0QmlnXCIsXG4gICAgICAgIFwibGVhdmUtYWN0aXZlLWNsYXNzXCI6IFwiYW5pbWF0ZV9fYW5pbWF0ZWQgYW5pbWF0ZV9fZmFkZU91dExlZnRCaWdcIlxuICAgICAgfVxuICAgIH0sXG4gICAgW1xuICAgICAgX2MoXG4gICAgICAgIFwiZGl2XCIsXG4gICAgICAgIFtcbiAgICAgICAgICBfYyhcImFwcC1uYXZcIiksXG4gICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICBfYyhcbiAgICAgICAgICAgIFwic2hvd2Nhc2UtY29udGV4dFwiLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgIFwicHJvamVjdC1uYW1lXCI6IF92bS5zaG93Y2FzZS5wcm9qZWN0TmFtZSxcbiAgICAgICAgICAgICAgICBcInByb2plY3QtZGF0ZVwiOiBfdm0uc2hvd2Nhc2UucHJvamVjdERhdGUsXG4gICAgICAgICAgICAgICAgXCJwcm9qZWN0LWRpc3BsYXktcGhvdG8tcGF0aFwiOlxuICAgICAgICAgICAgICAgICAgX3ZtLnNob3djYXNlLnByb2plY3REaXNwbGF5UGhvdG9QYXRoLFxuICAgICAgICAgICAgICAgIFwicHJvamVjdC10eXBlXCI6IF92bS5zaG93Y2FzZS5wcm9qZWN0VHlwZSxcbiAgICAgICAgICAgICAgICBcInByb2plY3QtcGxhdGZvcm1cIjogX3ZtLnNob3djYXNlLnByb2plY3RQbGF0Zm9ybSxcbiAgICAgICAgICAgICAgICBcInByb2plY3QtZXh0ZXJuYWwtbGlua1wiOiBfdm0uc2hvd2Nhc2UucHJvamVjdEV4dGVybmFsTGluayxcbiAgICAgICAgICAgICAgICBcInByb2plY3QtY29udGV4dC1waG90by1wYXRoXCI6XG4gICAgICAgICAgICAgICAgICBfdm0uc2hvd2Nhc2UucHJvamVjdENvbnRleHRQaG90b1BhdGhcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgX2MoXCJzcGFuXCIsIHtcbiAgICAgICAgICAgICAgICBkb21Qcm9wczogeyBpbm5lckhUTUw6IF92bS5fcyhfdm0uc2hvd2Nhc2UucHJvamVjdERlc2MpIH1cbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIF1cbiAgICAgICAgICApLFxuICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgX2MoXCJzaG93Y2FzZS1wbGFubmluZ1wiLCBbXG4gICAgICAgICAgICBfYyhcInNwYW5cIiwge1xuICAgICAgICAgICAgICBkb21Qcm9wczogeyBpbm5lckhUTUw6IF92bS5fcyhfdm0uc2hvd2Nhc2UucHJvamVjdFBsYW5uaW5nKSB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgIF0pLFxuICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgX2MoXG4gICAgICAgICAgICBcInNob3djYXNlLXJlc3VsdFwiLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBhdHRyczogeyBcInByb2plY3Qtc2NyZWVuc2hvdHNcIjogX3ZtLnNob3djYXNlLnByb2plY3RTY3JlZW5zaG90cyB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICBfYyhcInNwYW5cIiwge1xuICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IGlubmVySFRNTDogX3ZtLl9zKF92bS5zaG93Y2FzZS5wcm9qZWN0UmVzdWx0KSB9XG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBdXG4gICAgICAgICAgKSxcbiAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgIF9jKFwiYXBwLWZvb3RlclwiKVxuICAgICAgICBdLFxuICAgICAgICAxXG4gICAgICApXG4gICAgXVxuICApXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcInNlY3Rpb25cIiwgeyBzdGF0aWNDbGFzczogXCJzaG93Y2FzZS1oZWFkZXJcIiB9LCBbXG4gICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJwcm9qZWN0LW5hbWVcIiB9LCBbXG4gICAgICBfYyhcImgyXCIsIFtfdm0uX3YoX3ZtLl9zKF92bS5wcm9qZWN0TmFtZSkpXSksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXCJwXCIsIHsgc3RhdGljQ2xhc3M6IFwicHJvamVjdC1kYXRlXCIgfSwgW1xuICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS5wcm9qZWN0RGF0ZSkpXG4gICAgICBdKVxuICAgIF0pLFxuICAgIF92bS5fdihcIiBcIiksXG4gICAgX2MoXCJkaXZcIiwgW1xuICAgICAgX2MoXCJpbWdcIiwge1xuICAgICAgICBzdGF0aWNDbGFzczogXCJwcm9qZWN0LWRpc3BsYXktcGhvdG9cIixcbiAgICAgICAgYXR0cnM6IHsgc3JjOiBfdm0ucHJvamVjdERpc3BsYXlQaG90b1BhdGgsIFwiZGF0YS1hb3NcIjogXCJmYWRlLXVwXCIgfVxuICAgICAgfSlcbiAgICBdKSxcbiAgICBfdm0uX3YoXCIgXCIpLFxuICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiY29udGFpbmVyLWZsdWlkIHByb2plY3QtY29udGV4dFwiIH0sIFtcbiAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwicm93XCIgfSwgW1xuICAgICAgICBfYyhcbiAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImNvbC0xMiBjb2wtbGctNiBteS01IHByb2plY3QtY29udGV4dC1kZXRhaWxzXCIsXG4gICAgICAgICAgICBhdHRyczogeyBcImRhdGEtYW9zXCI6IFwiZmFkZVwiIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIF9jKFwicFwiLCB7IHN0YXRpY0NsYXNzOiBcInByb2plY3QtdHlwZVwiIH0sIFtcbiAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0ucHJvamVjdFR5cGUpKVxuICAgICAgICAgICAgXSksXG4gICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgX2MoXCJwXCIsIHsgc3RhdGljQ2xhc3M6IFwicHJvamVjdC1wbGF0Zm9ybVwiIH0sIFtcbiAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0ucHJvamVjdFBsYXRmb3JtKSlcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICBcImFcIixcbiAgICAgICAgICAgICAgeyBhdHRyczogeyBocmVmOiBfdm0ucHJvamVjdEV4dGVybmFsTGluaywgdGFyZ2V0OiBcIl9ibGFua1wiIH0gfSxcbiAgICAgICAgICAgICAgW192bS5fdihcIlZpc2l0IHNpdGVcIildXG4gICAgICAgICAgICApXG4gICAgICAgICAgXVxuICAgICAgICApLFxuICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICBfYyhcbiAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHN0YXRpY0NsYXNzOlxuICAgICAgICAgICAgICBcImNvbC0xMiBjb2wtbGctNiBteS01IHByb2plY3QtY29udGV4dC1kZXNjIGFydGljbGUtc2xvdFwiLFxuICAgICAgICAgICAgYXR0cnM6IHsgXCJkYXRhLWFvc1wiOiBcImZhZGVcIiB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBbX2MoXCJkaXZcIiwgW192bS5fdChcImRlZmF1bHRcIildLCAyKV1cbiAgICAgICAgKVxuICAgICAgXSlcbiAgICBdKSxcbiAgICBfdm0uX3YoXCIgXCIpLFxuICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwicHJvamVjdC1jb250ZXh0LXBob3RvLWNvbnRhaW5lclwiIH0sIFtcbiAgICAgIF9jKFwiaW1nXCIsIHtcbiAgICAgICAgc3RhdGljQ2xhc3M6IFwicHJvamVjdC1jb250ZXh0LXBob3RvXCIsXG4gICAgICAgIGF0dHJzOiB7IHNyYzogX3ZtLnByb2plY3RDb250ZXh0UGhvdG9QYXRoLCBcImRhdGEtYW9zXCI6IFwiZmFkZS11cFwiIH1cbiAgICAgIH0pXG4gICAgXSlcbiAgXSlcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCI8dGVtcGxhdGU+XHJcbiAgICA8c2VjdGlvbiBjbGFzcz1cInNob3djYXNlLWhlYWRlclwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJwcm9qZWN0LW5hbWVcIj5cclxuICAgICAgICAgICAgPGgyPnt7IHByb2plY3ROYW1lIH19PC9oMj5cclxuICAgICAgICAgICAgPHAgY2xhc3M9XCJwcm9qZWN0LWRhdGVcIj57eyBwcm9qZWN0RGF0ZSB9fTwvcD5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICA8aW1nIGNsYXNzPVwicHJvamVjdC1kaXNwbGF5LXBob3RvXCIgdi1iaW5kOnNyYz1cInByb2plY3REaXNwbGF5UGhvdG9QYXRoXCIgZGF0YS1hb3M9XCJmYWRlLXVwXCI+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lci1mbHVpZCBwcm9qZWN0LWNvbnRleHRcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC0xMiBjb2wtbGctNiBteS01IHByb2plY3QtY29udGV4dC1kZXRhaWxzXCIgZGF0YS1hb3M9XCJmYWRlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJwcm9qZWN0LXR5cGVcIj57eyBwcm9qZWN0VHlwZSB9fTwvcD5cclxuICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInByb2plY3QtcGxhdGZvcm1cIj57eyBwcm9qZWN0UGxhdGZvcm0gfX08L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgPGEgdi1iaW5kOmhyZWY9XCJwcm9qZWN0RXh0ZXJuYWxMaW5rXCIgdGFyZ2V0PVwiX2JsYW5rXCI+VmlzaXQgc2l0ZTwvYT5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC0xMiBjb2wtbGctNiBteS01IHByb2plY3QtY29udGV4dC1kZXNjIGFydGljbGUtc2xvdFwiIGRhdGEtYW9zPVwiZmFkZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzbG90Pjwvc2xvdD5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwicHJvamVjdC1jb250ZXh0LXBob3RvLWNvbnRhaW5lclwiPlxyXG4gICAgICAgICAgICA8aW1nIGNsYXNzPVwicHJvamVjdC1jb250ZXh0LXBob3RvXCIgdi1iaW5kOnNyYz1cInByb2plY3RDb250ZXh0UGhvdG9QYXRoXCIgZGF0YS1hb3M9XCJmYWRlLXVwXCI+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L3NlY3Rpb24+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c3R5bGU+XHJcblxyXG48L3N0eWxlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgcHJvcHM6IHtcclxuICAgICAgICBwcm9qZWN0TmFtZToge1xyXG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsIFxyXG4gICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcHJvamVjdERhdGU6IHtcclxuICAgICAgICAgICAgdHlwZTogU3RyaW5nLCBcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgICAgIHByb2plY3REaXNwbGF5UGhvdG9QYXRoOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgICAgIHByb2plY3RUeXBlOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgICAgIHByb2plY3RQbGF0Zm9ybToge1xyXG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgfSxcclxuICAgICAgICBwcm9qZWN0RXh0ZXJuYWxMaW5rOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgICAgIHByb2plY3RDb250ZXh0UGhvdG9QYXRoOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9TaG93Y2FzZUNvbnRleHQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vU2hvd2Nhc2VDb250ZXh0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vU2hvd2Nhc2VDb250ZXh0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02NjNlN2ZkYSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9TaG93Y2FzZUNvbnRleHQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9TaG93Y2FzZUNvbnRleHQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgdmFyIGFwaSA9IHJlcXVpcmUoXCJDOlxcXFx4YW1wcFxcXFxodGRvY3NcXFxcUFJPSkVDVFNcXFxcZ3JhbnRhZGllbGVcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1ob3QtcmVsb2FkLWFwaVxcXFxkaXN0XFxcXGluZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnNjYzZTdmZGEnKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnNjYzZTdmZGEnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnNjYzZTdmZGEnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL1Nob3djYXNlQ29udGV4dC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjYzZTdmZGEmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignNjYzZTdmZGEnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInNyYy9wYWdlcy9TaG93Y2FzZVBhZ2UvU2hvd2Nhc2VDb250ZXh0LnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXG4gICAgXCJzZWN0aW9uXCIsXG4gICAgeyBzdGF0aWNDbGFzczogXCJwYWdlLXNlY3Rpb25cIiwgYXR0cnM6IHsgXCJkYXRhLWFvc1wiOiBcImZhZGVcIiB9IH0sXG4gICAgW1xuICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJpbm5lci1jb250YWluZXIgYXJ0aWNsZS1zbG90XCIgfSwgW1xuICAgICAgICBfdm0uX20oMCksXG4gICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwic2xvdC10ZXh0XCIgfSwgW192bS5fdChcImRlZmF1bHRcIildLCAyKVxuICAgICAgXSlcbiAgICBdXG4gIClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXG4gIGZ1bmN0aW9uKCkge1xuICAgIHZhciBfdm0gPSB0aGlzXG4gICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gICAgcmV0dXJuIF9jKFwiaDRcIiwgeyBzdGF0aWNDbGFzczogXCJzaG93Y2FzZS1zdWItaGVhZGluZ1wiIH0sIFtcbiAgICAgIF9jKFwic3BhblwiLCBbX3ZtLl92KFwiMi8zXCIpXSksXG4gICAgICBfdm0uX3YoXCIgcGxhbm5pbmdcIilcbiAgICBdKVxuICB9XG5dXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsIjx0ZW1wbGF0ZT5cclxuICAgIDxzZWN0aW9uIGNsYXNzPVwicGFnZS1zZWN0aW9uXCIgZGF0YS1hb3M9XCJmYWRlXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImlubmVyLWNvbnRhaW5lciBhcnRpY2xlLXNsb3RcIj5cclxuICAgICAgICAgICAgPGg0IGNsYXNzPVwic2hvd2Nhc2Utc3ViLWhlYWRpbmdcIj48c3Bhbj4yLzM8L3NwYW4+IHBsYW5uaW5nPC9oND5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNsb3QtdGV4dFwiPlxyXG4gICAgICAgICAgICAgICAgPHNsb3Q+PC9zbG90PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvc2VjdGlvbj4gICAgXHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c3R5bGU+XHJcblxyXG48L3N0eWxlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgXHJcbn1cclxuPC9zY3JpcHQ+IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1Nob3djYXNlUGxhbm5pbmcudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vU2hvd2Nhc2VQbGFubmluZy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL1Nob3djYXNlUGxhbm5pbmcudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTE5NmJjNWE5JlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL1Nob3djYXNlUGxhbm5pbmcudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9TaG93Y2FzZVBsYW5uaW5nLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiQzpcXFxceGFtcHBcXFxcaHRkb2NzXFxcXFBST0pFQ1RTXFxcXGdyYW50YWRpZWxlXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtaG90LXJlbG9hZC1hcGlcXFxcZGlzdFxcXFxpbmRleC5qc1wiKVxuICBhcGkuaW5zdGFsbChyZXF1aXJlKCd2dWUnKSlcbiAgaWYgKGFwaS5jb21wYXRpYmxlKSB7XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICAgIGlmICghYXBpLmlzUmVjb3JkZWQoJzE5NmJjNWE5JykpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJzE5NmJjNWE5JywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJzE5NmJjNWE5JywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9TaG93Y2FzZVBsYW5uaW5nLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xOTZiYzVhOSZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCcxOTZiYzVhOScsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwic3JjL3BhZ2VzL1Nob3djYXNlUGFnZS9TaG93Y2FzZVBsYW5uaW5nLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXG4gICAgXCJzZWN0aW9uXCIsXG4gICAgeyBzdGF0aWNDbGFzczogXCJwYWdlLXNlY3Rpb25cIiwgYXR0cnM6IHsgXCJkYXRhLWFvc1wiOiBcImZhZGVcIiB9IH0sXG4gICAgW1xuICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJpbm5lci1jb250YWluZXIgYXJ0aWNsZS1zbG90XCIgfSwgW1xuICAgICAgICBfdm0uX20oMCksXG4gICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwic2xvdC10ZXh0XCIgfSwgW192bS5fdChcImRlZmF1bHRcIildLCAyKSxcbiAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJwcm9qZWN0LXJlc3VsdC1waG90by1jb250YWluZXJcIiB9LCBbXG4gICAgICAgICAgX2MoXG4gICAgICAgICAgICBcInVsXCIsXG4gICAgICAgICAgICBfdm0uX2woX3ZtLnByb2plY3RTY3JlZW5zaG90cywgZnVuY3Rpb24ocHJvamVjdFNjcmVlbnNob3QpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIF9jKFxuICAgICAgICAgICAgICAgIFwibGlcIixcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBrZXk6IHByb2plY3RTY3JlZW5zaG90LnNyYyxcbiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IFwiZGF0YS1hb3NcIjogXCJmYWRlLXVwXCIgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgX2MoXCJpbWdcIiwge1xuICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJwcm9qZWN0LXJlc3VsdC1waG90b1wiLFxuICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IHByb2plY3RTY3JlZW5zaG90LnNyYyB9XG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAwXG4gICAgICAgICAgKVxuICAgICAgICBdKVxuICAgICAgXSlcbiAgICBdXG4gIClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXG4gIGZ1bmN0aW9uKCkge1xuICAgIHZhciBfdm0gPSB0aGlzXG4gICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gICAgcmV0dXJuIF9jKFwiaDRcIiwgeyBzdGF0aWNDbGFzczogXCJzaG93Y2FzZS1zdWItaGVhZGluZ1wiIH0sIFtcbiAgICAgIF9jKFwic3BhblwiLCBbX3ZtLl92KFwiMy8zXCIpXSksXG4gICAgICBfdm0uX3YoXCIgcmVzdWx0XCIpXG4gICAgXSlcbiAgfVxuXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCI8dGVtcGxhdGU+XHJcbiAgICA8c2VjdGlvbiBjbGFzcz1cInBhZ2Utc2VjdGlvblwiIGRhdGEtYW9zPVwiZmFkZVwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJpbm5lci1jb250YWluZXIgYXJ0aWNsZS1zbG90XCI+XHJcbiAgICAgICAgICAgIDxoNCBjbGFzcz1cInNob3djYXNlLXN1Yi1oZWFkaW5nXCI+PHNwYW4+My8zPC9zcGFuPiByZXN1bHQ8L2g0PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2xvdC10ZXh0XCI+XHJcbiAgICAgICAgICAgICAgICA8c2xvdD48L3Nsb3Q+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInByb2plY3QtcmVzdWx0LXBob3RvLWNvbnRhaW5lclwiPlxyXG4gICAgICAgICAgICAgICAgPHVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDxsaSB2LWZvcj1cInByb2plY3RTY3JlZW5zaG90IGluIHByb2plY3RTY3JlZW5zaG90c1wiIHYtYmluZDprZXk9XCJwcm9qZWN0U2NyZWVuc2hvdC5zcmNcIiBkYXRhLWFvcz1cImZhZGUtdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyB2LWJpbmQ6c3JjPVwicHJvamVjdFNjcmVlbnNob3Quc3JjXCIgY2xhc3M9XCJwcm9qZWN0LXJlc3VsdC1waG90b1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvc2VjdGlvbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzdHlsZT5cclxuXHJcbjwvc3R5bGU+XHJcblxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBwcm9wczoge1xyXG4gICAgICAgIHByb2plY3RTY3JlZW5zaG90czoge1xyXG4gICAgICAgICAgICB0eXBlOiBBcnJheSxcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9TaG93Y2FzZVJlc3VsdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9TaG93Y2FzZVJlc3VsdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL1Nob3djYXNlUmVzdWx0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1hYTRjNzkyZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9TaG93Y2FzZVJlc3VsdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL1Nob3djYXNlUmVzdWx0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiQzpcXFxceGFtcHBcXFxcaHRkb2NzXFxcXFBST0pFQ1RTXFxcXGdyYW50YWRpZWxlXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtaG90LXJlbG9hZC1hcGlcXFxcZGlzdFxcXFxpbmRleC5qc1wiKVxuICBhcGkuaW5zdGFsbChyZXF1aXJlKCd2dWUnKSlcbiAgaWYgKGFwaS5jb21wYXRpYmxlKSB7XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICAgIGlmICghYXBpLmlzUmVjb3JkZWQoJ2FhNGM3OTJlJykpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJ2FhNGM3OTJlJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJ2FhNGM3OTJlJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9TaG93Y2FzZVJlc3VsdC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9YWE0Yzc5MmUmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignYWE0Yzc5MmUnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInNyYy9wYWdlcy9TaG93Y2FzZVBhZ2UvU2hvd2Nhc2VSZXN1bHQudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiZXhwb3J0IGRlZmF1bHR7XHJcbiAgICBcclxuICAgIFwicHJvamVjdC1ueFwiIDoge1xyXG4gICAgICAgIHByb2plY3ROYW1lOiAnUHJvamVjdCBOWCcsIFxyXG4gICAgICAgIHByb2plY3REYXRlOiAnMjAyMCcsIFxyXG4gICAgICAgIHByb2plY3REaXNwbGF5UGhvdG9QYXRoOiAnaHR0cHM6Ly9pbnNwaXJpbmctYmhhYmhhLTY4MDYyOS5uZXRsaWZ5LmFwcC9wcm9qZWN0X254L3NjcmVlbnNob3RzLzM0MjQ2Mi1QQTlRNk8tNDUyLnBuZycsIFxyXG4gICAgICAgIHByb2plY3RUeXBlOiAnV2ViIERlc2lnbiwgRGV2ZWxvcG1lbnQnLCBcclxuICAgICAgICBwcm9qZWN0UGxhdGZvcm06ICdNb2JpbGUsIFRhYmxldCwgRGVza3RvcCcsIFxyXG4gICAgICAgIHByb2plY3RFeHRlcm5hbExpbms6ICdhYm91dDpibGFuaycsIFxyXG4gICAgICAgIHByb2plY3RDb250ZXh0UGhvdG9QYXRoOiAnaHR0cHM6Ly9pbnNwaXJpbmctYmhhYmhhLTY4MDYyOS5uZXRsaWZ5LmFwcC9wcm9qZWN0X254L3Byb2plY3QtbngtY29udGV4dC0yODgweDE4MDAucG5nJywgXHJcblxyXG4gICAgICAgIHByb2plY3REZXNjOiBgPHA+SG93IGFib3V0IHJlYWRpbmcgc3RvcmllcyByaWdodCBvbiB5b3VyIG1vYmlsZSwgb24gdGhlIGdvPyE8L3A+XHJcbiAgICAgICAgPHA+UmVhZGluZyBzdG9yaWVzIHlvdSBsb3ZlIHJpZ2h0IG9uIHlvdXIgbW9iaWxlIGRldmljZXMgaXMgZnVuIGFuZCBJIHdhbnQgdG8gZXZlbiBtYWtlIHRoYXQgYSBsb3QgYmV0dGVyITwvcD5cclxuICAgICAgICA8cD5Qcm9qZWN0IE5YIGlzIGFuIGV4cGVyaW1lbnRhbCBwbGF0Zm9ybSB0aGF0IGFsbG93cyB5b3UgdG8gcmVhZCBzdG9yaWVzIHJpZ2h0IG9uIHlvdXIgZGV2aWNlIChNb2JpbGUsIExhYnRvcCBvciBldmVuIERlc2t0b3ApLiBUaGUgY29uY2VwdCBvZiB0aGUgcGxhdGZvcm0gZGVzaWduIGVuYWJsZXMgZm9yIHF1aWNrIGZpbmRpbmcgb2Ygc3RvcmllcyBhbmQgYXJ0aWNsZXMgSSB0aGluayB5b3UnZCBiZSBpbnRlcmVzdGVkIGluIHJlYWRpbmcuPC9wPmAsIFxyXG5cclxuICAgICAgICBwcm9qZWN0UGxhbm5pbmc6IGA8cD5UaGUgZGVzaWduIGFuZCBkZXZlbG9wbWVudCBpbXBsZW1lbnRhdGlvbnMgd2VyZSBwcmV0dHkgc3RyYWlnaHQgZm93YXJkLiBEZXNpZ25lZCB3aXRoIHRoZSBCb290c3RyYXAgNCBtYXRlcmlhbCBkZXNpZ24gZnJhbWV3b3JrLCBJIHdhcyBhYmxlIHRvIHF1aWNrbHkgYWNoaWV2ZSB0aGUgZGVzaWduIHBhdHRlcm4gdGhhdCBzdWl0ZXMgYW4gaW1tZXJzaXZlIHBsYXRmb3JtIG9mIHN0b3JpZXMhIFRoZSBtYXRlcmlhbCBkZXNpZ24gd2FzIHRoZSByaWdodCB3YXkgdG8gZ28gYmVjYXVzZSBJIHdhbnRlZCB0aGUgZGVzaWduIHRvIGxvb2sgYXMgcmVhbCBhcyBwb3NzaWJsZS48L3A+XHJcbiAgICAgICAgPHA+VG8gcHJvbW90ZSByZWFkYWJsaXR5LCB0aGUgZm9udCBvZiBjaG9pY2Ugd2FzIHRoZSB3ZWxsIGtub3duIFJvYm90by4gQWRkaW5nIG1vcmUgcmVhbG5lc3MgdG8gUHJvamVjdCBOWCwgRm9udCBBd2Vzb21lIGljb25zIHdlcmUgdXNlZC48L3A+XHJcbiAgICAgICAgPHA+VGhlIGJhY2tlbmQgcG93ZXJlZCBieSBQSFAgYW5kIE15U1FMIGRhdGFiYXNlIHVzaW5nIGEgZnJhbWV3b3JrIEkgY3JlYXRlZCA8YSBocmVmPVwiLy9naXRodWIuY29tL2RldmdyYW50eS90bV9mcmFtZXdvcmtcIiByZWw9XCJleHRlcm5hbFwiIHRhcmdldD1cIl9ibGFua1wiPmhlcmU8L2E+PC9wPlxyXG4gICAgICAgIDxwPlBsZWFzZSBub3RlOiBQcm9qZWN0IE5YIGlzIHN0aWxsIGluIGl0cyBiZXRhIGFuZCBoYXMgbm90IGJlZW4gcmVsZWFzZWQgdG8gdGhlIHB1YmxpYyBhbmQgSSBob3BlIG9uIGRvaW5nIHRoYXQgcHJldHR5IHNvb24hLjwvcD5gLCBcclxuXHJcbiAgICAgICAgcHJvamVjdFJlc3VsdDogYDxwPk1pc3Npb24gYWNjb21wbGlzaGVkITwvcD5cclxuICAgICAgICA8cD5JdCdzIGFsd2F5cyBhbiBhbWF6aW5nIGZlZWxpbmcgd2hlbiB5b3UgY3JlYXRlIHN0dWZmcyBhbmQgc2VlIG1pbGxpb25zIG9mIHBlb3BsZSBtYWtlIHRoZSBiZXN0IG91dCBvZiBpdCBlYWNoIGRheS4gQW5kIEhleSEsIERvbid0IGFzayB0aGUgbWVhbmluZyBvZiBcIk5YXCIgYmVjYXVzZSBJIGNlcnRhaW5seSBoYXZlIG5vIGlkZWEsIHByb2JhYmx5IGRheWRyZWFtaW5nIHdoZW4gSSBnYXZlIGl0IHRoYXQgbmFtZSDwn5i0PC9wPmAsIFxyXG5cclxuICAgICAgICBwcm9qZWN0U2NyZWVuc2hvdHM6IFtcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvcHJvamVjdF9ueC9zY3JlZW5zaG90cy9sb2NhbGhvc3RfcHJvamVjdHNfcHJvamVjdF9ueF8oTGFwdG9wIHdpdGggSGlEUEkgc2NyZWVuKS5wbmcnfSwgXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL2luc3BpcmluZy1iaGFiaGEtNjgwNjI5Lm5ldGxpZnkuYXBwL3Byb2plY3Rfbngvc2NyZWVuc2hvdHMvbG9jYWxob3N0X3Byb2plY3RzX3Byb2plY3RfbnhfKExhcHRvcCB3aXRoIE1EUEkgc2NyZWVuKS5wbmcnfSwgXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL2luc3BpcmluZy1iaGFiaGEtNjgwNjI5Lm5ldGxpZnkuYXBwL3Byb2plY3Rfbngvc2NyZWVuc2hvdHMvbG9jYWxob3N0X3Byb2plY3RzX3Byb2plY3RfbnhfZm9ydW0ucGhwX3A9dGhlLXRocmVlLWJpbGx5LWdvYXRzLWdydWZmKExhcHRvcCB3aXRoIE1EUEkgc2NyZWVuKS5wbmcnfSxcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvcHJvamVjdF9ueC9zY3JlZW5zaG90cy9sb2NhbGhvc3RfcHJvamVjdHNfcHJvamVjdF9ueF9zaWdudXAucGhwKExhcHRvcCB3aXRoIE1EUEkgc2NyZWVuKS5wbmcnfSxcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvcHJvamVjdF9ueC9zY3JlZW5zaG90cy9sb2NhbGhvc3RfcHJvamVjdHNfcHJvamVjdF9ueF9zaWduaW4ucGhwKExhcHRvcCB3aXRoIE1EUEkgc2NyZWVuKSAoMSkucG5nJ30sXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL2luc3BpcmluZy1iaGFiaGEtNjgwNjI5Lm5ldGxpZnkuYXBwL3Byb2plY3Rfbngvc2NyZWVuc2hvdHMvbG9jYWxob3N0X3Byb2plY3RzX3Byb2plY3Rfbnhfc2lnbmluLnBocChMYXB0b3Agd2l0aCBNRFBJIHNjcmVlbikucG5nJ30sXHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgXCJ3aWxsb3ctaW52ZXN0bWVudFwiIDoge1xyXG4gICAgICAgIHByb2plY3ROYW1lOiAnV2lsbG93IEludmVzdG1lbnQnLCBcclxuICAgICAgICBwcm9qZWN0RGF0ZTogJzIwMTknLCBcclxuICAgICAgICBwcm9qZWN0RGlzcGxheVBob3RvUGF0aDogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvd2lsbG93X2ludmVzdG1lbnQvc2NyZWVuc2hvdHMvYWR1bHQtYXR0aXJlLWNvbW1lcmNlLTEzNjcyNjkucG5nJywgXHJcbiAgICAgICAgcHJvamVjdFR5cGU6ICdXZWIgRGVzaWduLCBEZXZlbG9wbWVudCcsIFxyXG4gICAgICAgIHByb2plY3RQbGF0Zm9ybTogJ01vYmlsZSwgVGFibGV0LCBEZXNrdG9wJywgXHJcbiAgICAgICAgcHJvamVjdEV4dGVybmFsTGluazogJy8vd2lsbG93aW52ZXN0bWVudC5uZXQnLCBcclxuICAgICAgICBwcm9qZWN0Q29udGV4dFBob3RvUGF0aDogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvd2lsbG93X2ludmVzdG1lbnQvd2lsbG93LWludmVzdG1lbnQtY29udGV4dC0yODgweDE4MDAucG5nJywgXHJcblxyXG4gICAgICAgIHByb2plY3REZXNjOiBgPHA+V2lsbG93IEludmVzdG1lbnQgaXMgYSBCaXRjb2luIEludmVzdG1lbnQgcGxhdGZvcm0gb3duZWQgYW5kIG1hbmFnZWQgYnkgdGhlIFdpbGxvdyBHcm91cC48L3A+XHJcbiAgICAgICAgPHA+SXMgV2lsbG93IHNlY3VyZWQ/IC0gWWVzISwgV2lsbG93IGlzIHBlZmVjdGx5IHNlY3VyZWQgYXMgbm8gdHJhbnNhY3Rpb25zIGFyZSBkb25lIG9uIHRoZSBzaXRlLiBBbGwgdHJhbnNhY3Rpb25zIHJlcXVpcmUgYW4gZW5jcnlwdGVkIGJpdGNvaW4gd2FsbGV0IGFuZCBkYXRhIGlzIG9ubHkgdHJhbnNmZXJyZWQgdmlhIEFQSXMuPC9wPmAsIFxyXG5cclxuICAgICAgICBwcm9qZWN0UGxhbm5pbmc6IGA8cD48c3Ryb25nPlByb2JsZW0gU29sdmluZzwvc3Ryb25nPiA8YnI+IFRoZSBlbnRpcmUgaWRlYSB3YXMgdG8gY3JlYXRlIHNvbWV0aGluZyB0aGF0IGFsbG93ZWQgY29tbXVtaWNhdGlvbiBiZXR3ZWVuIGNyeXB0b2N1cnJlbmNpZXMsIHN0b3JlIHRoZW0sIHBlcmZvcm0gbWF0aGVtYXRpY2FsIG9wZXJhdGlvbnMgb24gdGhlbSB3aXRob3V0IHRoZW0gYmVpbmcgdGhlcmUuIFRoaXMgaGFkIHRvIGJlIGFzIGFjY3VyYXRlIGFzIHBvc3NpYmxlLjwvcD5cclxuICAgICAgICA8cD5UbyBzb2x2ZSB0aGlzIHByb2JsZW0gd2UgcmVzb3J0IHRvIEFQSXMgLSBBcHBsaWNhdGlvbiBQcm9ncmFtbWluZyBJbnRlcmZhY2UuIFdlIGNvdWxkIHN0b3JlIHNvbWV3aGVyZSBlbHNlIHdoaWxlIG1ha2luZyB0aGluZ3MgaGFwcGVuIGluIHRob3NlIHBsYWNlcyBhbmQgcmV0dXJuaW5nIGFjY3VyYXRlIHJlc3VsdHMgaW4gdGhlaXIgZXhhY3QgcXVhbnRpdGllcyBhbmQgbm90IGVuaGFuY2VkLiBQUk9CTEVNIFNPTFZFRCE8L3A+XHJcbiAgICAgICAgPHA+PHN0cm9uZz5EZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnQ8L3N0cm9uZz4gPGJyPiBXaWxsb3cgSW52ZXN0bWVudCBsaWtlIGFueSBvdGhlciBwcm9qZWN0IEkndmUgd29ya2VkIG9uIHNvcnQgc2ltcGxpY2l0eSBpbiB0aGUgaGlnaGVzdCBmb3JtLCB3ZSB3b24ndCB3YW50IGRlbGF5cyBpbiBjb21tdW5pY2F0aW9ucywgc28gd2Ugc29ydCBhZnRlciB0aGUgYmVzdCB5ZXQgbGlnaHRlc3QgdGVjaG5vbG9neSBzdGFja3MgdG8gbWFrZSB0aGlzIGhhcHBlbi4gQm9vdHN0cmFwIDMgd2FzIHVzZWQgdG8gcXVpY2tseSBjcmVhdGUgc3R5bGUgdGhlIG1hcmt1cCwgSnF1ZXJ5IHdpdGggSmF2YVNjcmlwdC48L3A+XHJcbiAgICAgICAgPHA+Rm9yIGRldmVsb3BtZW50IFBIUCA3LCBhbiBlYXJseSB2ZXJzaW9uIG9mIGEgZnJhbWV3b3JrIEkgZGV2ZWxvcGVkIGFuZCBNeVNRTCB3YXMgdXNlZCBhcyBvdXIgZGF0YWJhc2UuPC9wPmAsIFxyXG5cclxuICAgICAgICBwcm9qZWN0UmVzdWx0OiBgPHA+XCJBbWF6aW5nIHdvcmsgR3JhbnQhXCIsIERlbGl2ZXJpbmcgcXVpY2tseSwgd2hpbGUgbWFraW5nIHRoZSBlbnRpcmUgcHJvamVjdCBmdWN0aW9uYWwgYW5kIGludHV0aXZlIGlzIG5vdCBqdXN0IGFib3V0IHNlbGVjdGluZyB0aGUgcmlnaHQgY29kZSBzdGFjaywgdGhlIHRlY2hub2xvZ2llcyBoYXMgdG8gYmUgdXNlZCBjb3JyZWN0bHkuIENoZWVycyB0byBhbm90aGVyIGdyZWF0IHN1Y2Nlc3Mg8J+lgjwvcD5gLCBcclxuXHJcbiAgICAgICAgcHJvamVjdFNjcmVlbnNob3RzOiBbXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL2luc3BpcmluZy1iaGFiaGEtNjgwNjI5Lm5ldGxpZnkuYXBwL3dpbGxvd19pbnZlc3RtZW50L3NjcmVlbnNob3RzL2xvY2FsaG9zdF9wcm9qZWN0c193aWxsb3dfaW52ZXN0bWVudF8oTGFwdG9wIHdpdGggTURQSSBzY3JlZW4pLnBuZyd9LCBcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvd2lsbG93X2ludmVzdG1lbnQvc2NyZWVuc2hvdHMvbG9jYWxob3N0X3Byb2plY3RzX3dpbGxvd19pbnZlc3RtZW50X3NpZ251cC5waHAoTGFwdG9wIHdpdGggTURQSSBzY3JlZW4pLnBuZyd9LCBcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvd2lsbG93X2ludmVzdG1lbnQvc2NyZWVuc2hvdHMvbG9jYWxob3N0X3Byb2plY3RzX3dpbGxvd19pbnZlc3RtZW50X2FjY291bnRfbG9naW4ucGhwKExhcHRvcCB3aXRoIE1EUEkgc2NyZWVuKS5wbmcnfSxcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvd2lsbG93X2ludmVzdG1lbnQvc2NyZWVuc2hvdHMvbG9jYWxob3N0X3Byb2plY3RzX3dpbGxvd19pbnZlc3RtZW50XyhMYXB0b3Agd2l0aCBNRFBJIHNjcmVlbikgKDMpLnBuZyd9LFxyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9pbnNwaXJpbmctYmhhYmhhLTY4MDYyOS5uZXRsaWZ5LmFwcC93aWxsb3dfaW52ZXN0bWVudC9zY3JlZW5zaG90cy9sb2NhbGhvc3RfcHJvamVjdHNfd2lsbG93X2ludmVzdG1lbnRfKExhcHRvcCB3aXRoIE1EUEkgc2NyZWVuKSAoMSkucG5nJ30sXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL2luc3BpcmluZy1iaGFiaGEtNjgwNjI5Lm5ldGxpZnkuYXBwL3dpbGxvd19pbnZlc3RtZW50L3NjcmVlbnNob3RzL2xvY2FsaG9zdF9wcm9qZWN0c193aWxsb3dfaW52ZXN0bWVudF8oTGFwdG9wIHdpdGggTURQSSBzY3JlZW4pICgyKS5wbmcnfSxcclxuICAgICAgICBdXHJcbiAgICB9LFxyXG5cclxuXHJcbiAgICBcIm1vdnluZXRcIiA6IHtcclxuICAgICAgICBwcm9qZWN0TmFtZTogJ01vdnluZXQnLCBcclxuICAgICAgICBwcm9qZWN0RGF0ZTogJzIwMTknLCBcclxuICAgICAgICBwcm9qZWN0RGlzcGxheVBob3RvUGF0aDogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvbW92eW5ldC9zY3JlZW5zaG90cy9zaGF6YW0temFjaGFyeS1sZXZpLWphY2stZHlsYW4tZ3JhemVyLmpwZycsIFxyXG4gICAgICAgIHByb2plY3RUeXBlOiAnV2ViIERlc2lnbiwgRGV2ZWxvcG1lbnQnLCBcclxuICAgICAgICBwcm9qZWN0UGxhdGZvcm06ICdNb2JpbGUsIFRhYmxldCwgRGVza3RvcCcsIFxyXG4gICAgICAgIHByb2plY3RFeHRlcm5hbExpbms6ICcvL21vdnluZXQuY29tJywgXHJcbiAgICAgICAgcHJvamVjdENvbnRleHRQaG90b1BhdGg6ICdodHRwczovL2luc3BpcmluZy1iaGFiaGEtNjgwNjI5Lm5ldGxpZnkuYXBwL21vdnluZXQvbW92eW5ldC1jb250ZXh0LTI4ODB4MTgwMC5wbmcnLCBcclxuXHJcbiAgICAgICAgcHJvamVjdERlc2M6IGA8cD5TaW1wbGUsIGZhc3QsIHVzZWZ1bCBhbmQgYXMgaW1tZXJzaXZlIGFzIHBvc3NpYmxlLiBJdCdzIGFsbCBhYm91dCBlbnRlcnRhaW5tZW50LCBpdCBzaG91bGQgYXMgd2VsbCBiZSBlbnRlcnRhaW5pbmcuPC9wPlxyXG4gICAgICAgIDxwPk1vdnluZXQgaXMgYSBzaW1wbGUgYW5kIGJhc2ljIG1vdmllIHdlYnNpdGUgSSBzdGFydGVkIHBlcnNvbmx5IHRvIGdldCBrbm93IGhvdyBzb21lIHRoaW5ncyBpbiBwcm9ncmFtbWluZyB3b3JrLiBJdCdzIHF1aXRlIG9idmlvdXMgdGhhdCBtb3ZpZXMgYXJlIG9uZSBvZiB0aGUgbW9zdCBlbnRhaW50YWluaW5nIHRoaW5ncyBhbmQgZGVmaW5pdGVseSB3b3J0aCBzb21lIHRyeS48L3A+YCwgXHJcblxyXG4gICAgICAgIHByb2plY3RQbGFubmluZzogYDxwPjxzdHJvbmc+UGxhbm5pbmcsIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudDwvc3Ryb25nPiA8YnI+IFdoZW4gSSBzdGFydGVkIGJ1aWxkaW5nIE1vdnluZXQsIEkgd2FzIGN1cmlvdXMgYWJvdXQgc29tZSB0aGluZ3MgaW4gcHJvZ3JhbW1pbmcuIEkga25ldyB0aGF0IG9uZSBvZiB0aGUgYmVzdCB3YXlzIHRvIHRyeSB0aGVtIG91dCB3YXMgZG9pbmcgaXQgd2l0aCBvbmUgb2YgbXkgZmF2b3JpdGUgaG9iYmllcy48L3A+XHJcbiAgICAgICAgPHA+SXQgdG9vayBhYm91dCAyIG1vbnRocyB0byBjb21wbGV0ZSB0aGUgcHJvamVjdCBhbmQgZHVyaW5nIHRoYXQgcGVyaW9kIEkgZ290IGZhbWlsaWFyIHdpdGggQVBJcywgU29mdHdhcmUgYXJjaGl0ZWN0dXJlcywgZS5nIE1WQywgZGVzaWduIHBhdHRlcm5zIGFuZCBzb21lIGZyYW1ld29ya3MuPC9wPlxyXG4gICAgICAgIDxwPk1vdnluZXQncyBkYXRhIGFyZSBhbGwgc291cmNlZCB0aHJvdWdoIHRoZSBUTURCIG1vdmllIEFQSSwgZnJvbSB3aGljaCBwYXJ0cyBhcmUgc3RvcmVkIGluIHRoZSBkYXRhYmFzZS4gQWxsIHRoZXNlIHdoZXJlIG1hZGUgcG9zc2libGUgd2l0aCBQSFAgYW5kIE1ZU1FMLiBNb3Z5bmV0IHVzZWQgdGhlIGVhcmxpZXN0IGFuZCB2ZXJ5IGZpcnN0IHZlcnNpb24gb2YgYSBmcmFtZXdvcmsgSSBjcmVhdGVkIC0gVE0gZnJhbWV3b3JrLiBUaGUgaWRlYSBvZiB0aGUgZnJhbWV3b3JrIHdhcyB0byBjcmVhdGUgY2xhc3NlcywgZS5nIERhdGFiYXNlLCBEYXRldGltZSwgVmFsaWRhdGlvbiwgRmlsZXN5c3RlbSwgU3RyaW5nLCBFbmNyeXB0aW9uIGNsYXNzZXMsIGZ1bmN0aW9ucyBhbmQgZ2VuZXJhbCBwcm9qZWN0IGNvbmZpZ3VyYXRpb25zIHdoaWNoIGFsbG93ZWQgbWUgc2NhZmZvbGQgbmV3ZXIgcHJvamVjdHMgaW4gUEhQIGV2ZW4gZmFzdGVyITwvcD5cclxuICAgICAgICA8cD5Nb3Z5bmV0IGRlc2lnbiB3YXMgYSBtaXggb2YgYm9vdHN0cmFwLCBjdXN0b20gQ1NTIGFuZCBKcXVlcnkuPC9wPlxyXG4gICAgICAgIDxwPk1vdnluZXQgd2FzIGFsc28gdGhlIGZpcnN0IFBXQSAtIFByb2dyZXNzaXZlIFdlYiBBcHAgSSBkZXNpZ25lZCwgdW5kZXJzdGFuZGluZyBob3cgc2VydmljZSB3b3JrZXJzIHdvcmsuPC9wPmAsIFxyXG5cclxuICAgICAgICBwcm9qZWN0UmVzdWx0OiBgPHA+XCJUaGUgY29sb3JzLCBkZXNpZ24gYW5kIGVudGlyZSB3ZWJzaXRlIHdvcmtzIHdlbGxcIiwgdGhpcyBoYXMgYmVlbiBvbmUgb2YgdGhlIGdyZWF0ZXN0IHByb2plY3RzIEkndmUgZG9uZSBpbiBhIHNob3J0IGFtb3VudCBvZiB0aW1lLjwvcD5cclxuICAgICAgICA8cD5UaGUgb3V0Y29tZT8sIFZlcnkgZGVzaXJlYWJsZS48L3A+YCwgXHJcblxyXG4gICAgICAgIHByb2plY3RTY3JlZW5zaG90czogW1xyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9pbnNwaXJpbmctYmhhYmhhLTY4MDYyOS5uZXRsaWZ5LmFwcC9tb3Z5bmV0L2xvZ29zL21vdnluZXRfbG9nb181NTJ4MTgwLnBuZyd9LCBcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvbW92eW5ldC9zY3JlZW5zaG90cy9sb2NhbGhvc3RfcHJvamVjdHNfbW92eW5ldF8oTGFwdG9wIHdpdGggTURQSSBzY3JlZW4pLnBuZyd9LCBcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvbW92eW5ldC9zY3JlZW5zaG90cy9sb2NhbGhvc3RfcHJvamVjdHNfbW92eW5ldF92aWV3LnBocF92d2lkPTI0NiZ0eXBlPU1vdmllJmZyb209aG9tZShMYXB0b3Agd2l0aCBNRFBJIHNjcmVlbikucG5nJ30sIFxyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9pbnNwaXJpbmctYmhhYmhhLTY4MDYyOS5uZXRsaWZ5LmFwcC9tb3Z5bmV0L3NjcmVlbnNob3RzL2xvY2FsaG9zdF9wcm9qZWN0c19tb3Z5bmV0X3ZpZXcucGhwX3Z3aWQ9MjQ2JnR5cGU9TW92aWUmZnJvbT1ob21lKExhcHRvcCB3aXRoIE1EUEkgc2NyZWVuKSAoMSkucG5nJ30sXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL2luc3BpcmluZy1iaGFiaGEtNjgwNjI5Lm5ldGxpZnkuYXBwL21vdnluZXQvc2NyZWVuc2hvdHMvbG9jYWxob3N0X3Byb2plY3RzX21vdnluZXRfdmlldy5waHBfdndpZD0yNDYmdHlwZT1Nb3ZpZSZmcm9tPWhvbWUoTGFwdG9wIHdpdGggTURQSSBzY3JlZW4pICg0KS5wbmcnfSxcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvbW92eW5ldC9zY3JlZW5zaG90cy9sb2NhbGhvc3RfcHJvamVjdHNfbW92eW5ldF92aWV3LnBocF92d2lkPTI0NiZ0eXBlPU1vdmllJmZyb209aG9tZShMYXB0b3Agd2l0aCBNRFBJIHNjcmVlbikgKDMpLnBuZyd9LFxyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9pbnNwaXJpbmctYmhhYmhhLTY4MDYyOS5uZXRsaWZ5LmFwcC9tb3Z5bmV0L3NjcmVlbnNob3RzL2xvY2FsaG9zdF9wcm9qZWN0c19tb3Z5bmV0X3ZpZXcucGhwX3Z3aWQ9MjQ2JnR5cGU9TW92aWUmZnJvbT1ob21lKExhcHRvcCB3aXRoIE1EUEkgc2NyZWVuKSAoMikucG5nJ30sXHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgXCJqb3ZpYW5iaXpcIiA6IHtcclxuICAgICAgICBwcm9qZWN0TmFtZTogJ0pvdmlhbmJpeicsIFxyXG4gICAgICAgIHByb2plY3REYXRlOiAnMjAxOCcsIFxyXG4gICAgICAgIHByb2plY3REaXNwbGF5UGhvdG9QYXRoOiAnaHR0cHM6Ly9pbnNwaXJpbmctYmhhYmhhLTY4MDYyOS5uZXRsaWZ5LmFwcC9qb3ZpYW5iaXovc2NyZWVuc2hvdHMvYWR1bHQtYXJ0aXN0LWJhbmQtMjc0NDA2LmdpZicsIFxyXG4gICAgICAgIHByb2plY3RUeXBlOiAnV2ViIERlc2lnbiwgRGV2ZWxvcG1lbnQnLCBcclxuICAgICAgICBwcm9qZWN0UGxhdGZvcm06ICdNb2JpbGUsIFRhYmxldCwgRGVza3RvcCcsIFxyXG4gICAgICAgIHByb2plY3RFeHRlcm5hbExpbms6ICcvL2pvdmlhbmJpei5jb20nLCBcclxuICAgICAgICBwcm9qZWN0Q29udGV4dFBob3RvUGF0aDogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvam92aWFuYml6L2pvdmlhbmJpei1jb250ZXh0LTI4ODB4MTgwMC5wbmcnLCBcclxuXHJcbiAgICAgICAgcHJvamVjdERlc2M6IGA8cD5Kb3ZpYW5iaXogaXMgYSBjb21iaW5hdGlvbiBvZiB0d28gYnVzaW5lc3Mgc2VnbWVudHMuPC9wPlxyXG4gICAgICAgIDxwPlRoZSBKb3ZpYW4gSGFpciBpcyBjb25jZXJuZWQgd2l0aCBzYWxlcyBvZiBoYWlyLCBoYWlyIHByb2R1Y3RzIGFuZCBhY2Nlc3Nvcmllcywgd2hpbGUsIEpvdmlhbiBFdmVudHMgaXMgY29uY2VybmVkIHdpdGggcHJvdmlkaW5nIGV2ZW50IHNlcnZpY2VzLjwvcD5cclxuICAgICAgICA8cD5UaGUgYW1hemluZyB0aGluZyBhYm91dCBKb3ZpYW5iaXogaXMgdGhlaXIgcGFzc2lvbi4gVGhlIGJlbGlldmUgdGhleSBjYW4gYnJpbmcgb3V0IHRoZSBiZWF1dHkgaW4gZXZlcnkgdGhpbmcgYW5kIHRoYXQgaXMgd2h5IEkgd2FzIGV4Y2l0ZWQgdG8gd29yayB3aXRoIHRoZW0uPC9wPmAsIFxyXG5cclxuICAgICAgICBwcm9qZWN0UGxhbm5pbmc6IGA8cD48c3Ryb25nPkNoYWxsZW5nZXM8L3N0cm9uZz4gPGJyPiBGaW5kaW5nIHRoZSBwZXJmZWN0IHdheSB0byBjb21iaW5lIGFuZCByZWdpc3RlciB0d28gdW5yZWxhdGVkIGJ1c2luZXNzIHNlZ21lbnRzIGFuZCBzdGlsbCBtYWtpbmcgdGhlbSBzdGFuZCBvdXQgbmVlZGVkIGEgbGl0dGxlIGJpdCBvZiBtYWdpYywgd2UgaGFkIHRvIGRyYWZ0IHBvc3NpYmxlIHdheXMgdG8gYWNjb21wbGlzaCB0aGlzLiBUbyBzb2x2ZSB0aGlzIGNoYWxsZW5nZSB3ZSBlbmRlZCBidWlsZGluZyBhIHN0YW5kYXJkIGxhbmRpbmcgcGFnZSBmb3IgdGhlIGJvdGggc2VnbWVudHMsIGNyZWF0aW5nIGEgc2VwZXJhdGUgc3ViZG9tYWluIGFuZCBhZGRpbmcgdGhlIGxpbmtzIHRvIGVhY2ggc2VnbWVudCwgdGFzayBjb21wbGV0ZWQhPC9wPlxyXG4gICAgICAgIDxwPjxzdHJvbmc+RGVzaWduLCBEZXZlbG9wbWVudCBhbmQgcHJvYmxlbSBzb2x2aW5nPC9zdHJvbmc+IDxicj4gU2VsZWN0aW5nIHRoZSByaWdodCBjb2xvcnMgZm9yIGEgYnVzaW5lc3Mgd2Vic2l0ZXMgd2l0aCB0d28gc2VnbWVudHMgaXMgaW1wb3J0YW50LiBQcm9mZXNzaW9uYWwgY29sb3JzIGxpa2UgYmx1ZSgjMDBBMUZGKSwgb2ZmLXdoaXRlKCNFRUVFRUUpIGFuZCBibGFjaygjMDAwMDAwKSB3ZXJlIGNvbG9ycyBvZiBjaG9pY2UuPC9wPlxyXG4gICAgICAgIDxwPldlIHdhbnRlZCB0aGUgbG9nbyBhcyBzaW1wbGUgYXMgcG9zc2libGUsIHNvIHdlIHN0aWNrZWQgdG8gYSB0ZXh0YmFzZWQgbG9nbywgZW1wbG95aW5nIHRoZSBTb2ZpYSBSZWd1bGFyIGZvbnQuPC9wPlxyXG4gICAgICAgIDxwPlRoZSByZXN0IG9mIHRoZSB3ZWJzaXRlIG5lZWRlZCBzb21ldGhpbmcgbW9yZSBib2xkLCBwcm9mZXNzaW9uYWwgYW5kIG1vZGVybiwgTGF0byB3YXMgdGhlIGJlc3QgZm9udCB0byBhY2NvbXBsaXNoIHRoaXMuPC9wPlxyXG4gICAgICAgIDxwPkFzIGEgYnVzaW5lc3Mgd2Vic2l0ZSB3ZSBuZWVkZWQgbW9yZSBpbWFnZXMgdG8gaGVscCBjb252ZXkgd2hhdCB3YXMgcmVhbGx5IGhhcHBlbmluZyBvbiB0aGUgc2l0ZSB3aXRoIGxlc3NlciB3b3Jkcy48L3A+YCwgXHJcblxyXG4gICAgICAgIHByb2plY3RSZXN1bHQ6IGA8cD5cIldvdyEsIHRoaXMgbG9va3Mgc28gYmVhdXRpZnVsIGFuZCBpdCBpcyBleGFjdGx5IHdoYXQgSSBuZWVkZWQuXCIsIFllcywgb25jZSBhZ2FpbiBvdXIgZGVzaWduIHN0cmF0ZWd5IGdhdmUgdGhlIGJlc3QgcmVzdWx0cyE8L3A+YCwgXHJcblxyXG4gICAgICAgIHByb2plY3RTY3JlZW5zaG90czogW1xyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9pbnNwaXJpbmctYmhhYmhhLTY4MDYyOS5uZXRsaWZ5LmFwcC9qb3ZpYW5iaXovc2NyZWVuc2hvdHMvd3d3LmxvY2FsaG9zdF9wcm9qZWN0c19qb3ZpYW5iaXpfaW5kZXgucGhwKExhcHRvcCB3aXRoIE1EUEkgc2NyZWVuKS5wbmcnfSxcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvam92aWFuYml6L3NjcmVlbnNob3RzL3d3dy5sb2NhbGhvc3RfcHJvamVjdHNfam92aWFuYml6X3NlcnZpY2VzXyhMYXB0b3Agd2l0aCBNRFBJIHNjcmVlbikucG5nJ30sXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL2luc3BpcmluZy1iaGFiaGEtNjgwNjI5Lm5ldGxpZnkuYXBwL2pvdmlhbmJpei9zY3JlZW5zaG90cy93d3cubG9jYWxob3N0X3Byb2plY3RzX2pvdmlhbmJpel9oYWlyXyhMYXB0b3Agd2l0aCBNRFBJIHNjcmVlbikucG5nJ30sXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL2luc3BpcmluZy1iaGFiaGEtNjgwNjI5Lm5ldGxpZnkuYXBwL2pvdmlhbmJpei9zY3JlZW5zaG90cy93d3cubG9jYWxob3N0X3Byb2plY3RzX2pvdmlhbmJpel9oYWlyX2NhdGVnb3J5LnBocF9jYXQ9aF9oX3coTGFwdG9wIHdpdGggTURQSSBzY3JlZW4pLnBuZyd9LFxyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9pbnNwaXJpbmctYmhhYmhhLTY4MDYyOS5uZXRsaWZ5LmFwcC9qb3ZpYW5iaXovc2NyZWVuc2hvdHMvd3d3LmxvY2FsaG9zdF9wcm9qZWN0c19qb3ZpYW5iaXpfaGFpcl9wcm9kdWN0LnBocF9waWQ9MTYoTGFwdG9wIHdpdGggTURQSSBzY3JlZW4pLnBuZyd9LFxyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9pbnNwaXJpbmctYmhhYmhhLTY4MDYyOS5uZXRsaWZ5LmFwcC9qb3ZpYW5iaXovc2NyZWVuc2hvdHMvd3d3LmxvY2FsaG9zdF9wcm9qZWN0c19qb3ZpYW5iaXpfc2VydmljZXNfKExhcHRvcCB3aXRoIE1EUEkgc2NyZWVuKSAoMSkucG5nJ31cclxuICAgICAgICBdXHJcbiAgICB9LFxyXG5cclxuXHJcbiAgICBcImFkdmJpdGNvaW5lYXJuc1wiIDoge1xyXG4gICAgICAgIHByb2plY3ROYW1lOiAnQWR2Qml0Y29pbkVhcm5zJywgXHJcbiAgICAgICAgcHJvamVjdERhdGU6ICcyMDE4JywgXHJcbiAgICAgICAgcHJvamVjdERpc3BsYXlQaG90b1BhdGg6ICdodHRwczovL2luc3BpcmluZy1iaGFiaGEtNjgwNjI5Lm5ldGxpZnkuYXBwL2FkdmJpdGNvaW5lYXJucy9zY3JlZW5zaG90cy8yODQ3NTQ3LnBuZycsIFxyXG4gICAgICAgIHByb2plY3RUeXBlOiAnV2ViIERlc2lnbiwgRGV2ZWxvcG1lbnQnLCBcclxuICAgICAgICBwcm9qZWN0UGxhdGZvcm06ICdNb2JpbGUsIFRhYmxldCwgRGVza3RvcCcsIFxyXG4gICAgICAgIHByb2plY3RFeHRlcm5hbExpbms6ICcvL2FkdmJpdGNvaW5lYXJucy5jb20nLCBcclxuICAgICAgICBwcm9qZWN0Q29udGV4dFBob3RvUGF0aDogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvYWR2Yml0Y29pbmVhcm5zL2FkdmJpdGNvaW5lYXJucy1jb250ZXh0LTI4ODB4MTgwMC5wbmcnLCBcclxuICAgICAgICBwcm9qZWN0RGVzYzogJzxwPkFkdkJpdGNvaW5FYXJucyBpcyBhIGJpdGNvaW4gaW52ZXN0bWVudCBwbGF0Zm9ybSwgY3JlYXRlZCBmb3IgdGhlIHNvbGUgcHVycG9zZSBvZiBzYWZlIGFuZCBzZWN1cmUgYml0Y29pbiBpbnZlc3RtZW50cy48L3A+JywgXHJcblxyXG4gICAgICAgIHByb2plY3RQbGFubmluZzogYDxwPkFkdkJpdG9pbkVhcm5zIGRlc2lnbiBhbmQgZGV2ZWxvcG1lbnQgd2FzIG9uZSBvZiB0aGUgcXVpY2tlc3QgYW5kIGZhc3Rlc3QgSSBoYXZlIGV2ZXIgd29ya2VkIG9uLiBUaGlzIHdhcyBhIHJlc3VsdCBvZiB0aGUgQWR2Qml0Y29pbkVhcm5zIGdyb3VwJ3MgbmVlZCB0byBsYXVuY2ggdGhlIHBsYXRmb3JtIGFzIHF1aWNrIGFzIHBvc3NpYmxlLjwvcD5cclxuICAgICAgICA8cD5UaGUgZW50aXJlIHByb2plY3QgdG9vayBhYm91dCAzIHdlZWtzIHRvIGNvbXBsZXRlLCBhcyB0aGVyZSB3ZXJlIG5pIGZyYW1ld29ya3Mgb3IgbGlicmFyeSB1c2VkIGluIHRoZSBkZXZlbG9wbWVudCBvZiB0aGUgcHJvamVjdC4gVGhlIGVudGlyZSBmcm9udGVuZCB3YXMgY3JlYXRlZCB3aXRoIGN1c3RvbSBkZXNpZ24gY29kZXMuPC9wPlxyXG4gICAgICAgIDxwPlRoZSBiYWNrZW5kIGZ1bGx5IHBvd2VyZWQgYnkgUEhQIGFuZCBhIE15U1FMIHNlcnZlciB1dGlsaXppbmcgQVBJcyBhbmQgbWV0aG9kIG9mIGNvbW11bmljYXRpb24uPC9wPmAsIFxyXG5cclxuICAgICAgICBwcm9qZWN0UmVzdWx0OiBgPHA+U2luY2UgQWR2Qml0Y29pbkVhcm5zIHdhcyBvbmUgbXkgZWFybGllc3QgaW5kZXBlbmRlbnQgcHJvamVjdCBkZXZlbG9wZW10LCBJIHdhcyBhYmxlIHRvIHVuZGVyc3RhbmQgbW9zdCBmdW5jdGlvbmFsaXRpZXMgb2YgYSB3ZWIgYXBwIGFuZCBiZXR0ZXIgd2F5cyB0byBpbXByb3ZlIGZ1bmN0aW9uYWxpdHksIGRlc2lnbiBhbmQgZGV2ZWxvcG1lbnQuPC9wPmAsIFxyXG5cclxuICAgICAgICBwcm9qZWN0U2NyZWVuc2hvdHM6IFtcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvYWR2Yml0Y29pbmVhcm5zL3NjcmVlbnNob3RzL3d3dy5sb2NhbGhvc3RfcHJvamVjdHNfYWR2Yml0Y29pbmVhcm5zXyhMYXB0b3Agd2l0aCBNRFBJIHNjcmVlbikucG5nJ30sXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL2luc3BpcmluZy1iaGFiaGEtNjgwNjI5Lm5ldGxpZnkuYXBwL2FkdmJpdGNvaW5lYXJucy9zY3JlZW5zaG90cy93d3cubG9jYWxob3N0X3Byb2plY3RzX2FkdmJpdGNvaW5lYXJuc19zaWdudXAucGhwKExhcHRvcCB3aXRoIE1EUEkgc2NyZWVuKS5wbmcnfSxcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvYWR2Yml0Y29pbmVhcm5zL3NjcmVlbnNob3RzL3d3dy5sb2NhbGhvc3RfcHJvamVjdHNfYWR2Yml0Y29pbmVhcm5zX2xvZ2luXyhMYXB0b3Agd2l0aCBNRFBJIHNjcmVlbikucG5nJ30sXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL2luc3BpcmluZy1iaGFiaGEtNjgwNjI5Lm5ldGxpZnkuYXBwL2FkdmJpdGNvaW5lYXJucy9zY3JlZW5zaG90cy93d3cubG9jYWxob3N0X3Byb2plY3RzX2FkdmJpdGNvaW5lYXJuc19sb2dpbl93aXRoZHJhdy5waHAoTGFwdG9wIHdpdGggTURQSSBzY3JlZW4pLnBuZyd9LFxyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9pbnNwaXJpbmctYmhhYmhhLTY4MDYyOS5uZXRsaWZ5LmFwcC9hZHZiaXRjb2luZWFybnMvc2NyZWVuc2hvdHMvd3d3LmxvY2FsaG9zdF9wcm9qZWN0c19hZHZiaXRjb2luZWFybnNfaW5kZXgucGhwKExhcHRvcCB3aXRoIE1EUEkgc2NyZWVuKS5wbmcnfSxcclxuICAgICAgICBdXHJcbiAgICB9LFxyXG5cclxuXHJcbiAgICBcIm15YWZyaWNvbm5lY3RcIiA6IHtcclxuICAgICAgICBwcm9qZWN0TmFtZTogJ015QWZyaUNvbm5lY3QnLCBcclxuICAgICAgICBwcm9qZWN0RGF0ZTogJzIwMTgnLFxyXG4gICAgICAgIHByb2plY3REaXNwbGF5UGhvdG9QYXRoOiAnaHR0cHM6Ly9pbnNwaXJpbmctYmhhYmhhLTY4MDYyOS5uZXRsaWZ5LmFwcC9teWFmcmljb25uZWN0L3NjcmVlbnNob3RzL2NlbGxpc3QtYmFuZC1tdXNpYy1wZXJmb3JtYW5jZS5qcGcnLCBcclxuICAgICAgICBwcm9qZWN0VHlwZTogJ1dlYiBEZXNpZ24sIERldmVsb3BtZW50JywgXHJcbiAgICAgICAgcHJvamVjdFBsYXRmb3JtOiAnTW9iaWxlLCBUYWJsZXQsIERlc2t0b3AnLCBcclxuICAgICAgICBwcm9qZWN0RXh0ZXJuYWxMaW5rOiAnLy9teWFmcmljb25uZWN0LmNvbScsIFxyXG4gICAgICAgIHByb2plY3RDb250ZXh0UGhvdG9QYXRoOiAnaHR0cHM6Ly9pbnNwaXJpbmctYmhhYmhhLTY4MDYyOS5uZXRsaWZ5LmFwcC9teWFmcmljb25uZWN0L215YWZyaWNvbm5lY3QtY29udGV4dC0yODgweDE4MDAucG5nJywgXHJcblxyXG4gICAgICAgIHByb2plY3REZXNjOiBgPHA+XCJFdmVuIHRob3VnaCBpdCBpcyBzaW1wbGUgYW5kIHF1aWV0LCB3ZSBtYWRlIGdyZWF0IHNvdW5kcyFcIjwvcD5cclxuICAgICAgICA8cD5NeUFmcmljb25uZWN0IGlzIGFuIGF1ZGlvIGFuZCB2aWRlbyBtdXNpYyBkb3dubG9hZCBwbGF0Zm9ybS4gVGhlIGlkZWEgaXMgdG8gYnVpbGQgYSBuYXRpdmUgbXVzaWMgY2F0YWxvZ3VlIGZvciBldmVyeW9uZSB0byBkb3dubG9hZCB0aGVpciBmYXZvdXJpdGUgQWZyaWNhbiBtdXNpYy48L3A+YCwgXHJcblxyXG4gICAgICAgIHByb2plY3RQbGFubmluZzogYDxwPjxzdHJvbmc+Q2hhbGxlbmdlczwvc3Ryb25nPiA8YnI+IERlc2lnbmluZyBhbmQgY3JlYXRpbmcgdGhlIG5hdGl2ZSBmZWVsIG9mIGFuIGF1ZGlvICZhbXA7IHZpZGVvIGRvd25sb2FkaW5nIHdlYnNpdGUgd2FzIGEgYml0IGNoYWxsZW5naW5nLiBUaGUgcmlnaHQgY29sb3JzLCBmb250cyBhbmQgZ2VuZXJhbCBkZXNpZ24gaGFkIHRvIGJlIGluIHBsYWNlLjwvcD5cclxuICAgICAgICA8cD48c3Ryb25nPkRlc2lnbjwvc3Ryb25nPiA8YnI+IFdlIG5lZWRlZCB0byBkb3dubG9hZCB0aGUgcmlnaHQgdGVtcGxhdGUgZnJvbSA8YSBocmVmPVwiaHR0cHM6Ly93M2xheW91dHMuY29tL2VsdmlzLWEtZW50ZXJ0YWlubWVudC1jYXRlZ29yeS1mbGF0LWJvb3RzdHJhcC1yZXNwb25zaXZlLXdlYi10ZW1wbGF0ZS9cIiByZWw9XCJleHRlcm5hbFwiIHRhcmdldD1cIl9ibGFua1wiPnczbGF5b3V0cy5jb208L2E+LCBmZXcgbW9kaWZpY2F0aW9ucyB3aGVyZSBtYWRlIG9uIHRoZSBVSSB0byBnaXZlIGl0IHRoZSBuYXRpdmUgQWZyaWNhbiBsb29rIHdlIGNvbWJpbmVkIHRoZSBHaGFuYWlhbiBjb2xvcnMgYW5kIHVzZWQgdGhlIDxjaXRlPkNGIEZsb3dlcnMgYnkgRGVzdGlueTwvY2l0ZT4gZm9udC48L3A+XHJcbiAgICAgICAgPHA+PHN0cm9uZz5EZXZlbG9wbWVudDwvc3Ryb25nPiA8YnI+IFRvIGltcHJvdmUgZnVuY3Rpb25hbGl0eSBsaWdodCB3ZWlnaHQgbGlicmFyaWVzIGxpa2UgSlF1ZXJ5IGFuZCBhbmQgQm9vdHN0cmFwIHdlcmUgaW1wbGVtZW50ZWQuIFRoZSBiYWNrIGVuZCBoYW5kbGVkIGJ5IFBIUCB3ZXJlIHVzZWQgZm9yIGR5bmFtaWMgcmVuZGVyaW5nIG9mIHBhZ2VzIGFuZCBEYXRhYmFzZSBvZiBjaG9pY2Ugd2FzIE15U1FMLjwvcD5gLCBcclxuXHJcbiAgICAgICAgcHJvamVjdFJlc3VsdDogYDxwPlRoZSBmaW5hbCBvdXRjb21lIHdhcyBwb3dlcmZ1bCBwbGF0Zm9ybSB0aGF0IGtlZXBzIHZpc2l0b3JzIGluIGEgdG90YWwgc3RhdGUgb2YgZXhjaXRlbWVudC4gV2UgcmVjb3JkZWQgYSB0cmVtZW5kb3VzIGluY3JlYXNlIGluIHRoZSBkYWlseSB2aXNpdHMgZnJvbSBtb3N0IEFmcmljYW4gY291bnRyeSwgbm93IHRoYXQncyB3aGF0IEkgY2FsbCBzYXRpc2ZhY3Rpb24hPC9wPmAsIFxyXG5cclxuICAgICAgICBwcm9qZWN0U2NyZWVuc2hvdHM6IFtcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vaW5zcGlyaW5nLWJoYWJoYS02ODA2MjkubmV0bGlmeS5hcHAvbXlhZnJpY29ubmVjdC9zY3JlZW5zaG90cy8xMjcuMC4wLjFfNTUwMF8oTGFwdG9wIHdpdGggTURQSSBzY3JlZW4pICgyKS5wbmcnfSwgXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL2luc3BpcmluZy1iaGFiaGEtNjgwNjI5Lm5ldGxpZnkuYXBwL215YWZyaWNvbm5lY3Qvc2NyZWVuc2hvdHMvMTI3LjAuMC4xXzU1MDBfKExhcHRvcCB3aXRoIE1EUEkgc2NyZWVuKSAoMSkucG5nJ30sIFxyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9pbnNwaXJpbmctYmhhYmhhLTY4MDYyOS5uZXRsaWZ5LmFwcC9teWFmcmljb25uZWN0L3NjcmVlbnNob3RzLzEyNy4wLjAuMV81NTAwXyhMYXB0b3Agd2l0aCBNRFBJIHNjcmVlbikucG5nJ30sIFxyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9pbnNwaXJpbmctYmhhYmhhLTY4MDYyOS5uZXRsaWZ5LmFwcC9teWFmcmljb25uZWN0L3NjcmVlbnNob3RzLzEyNy4wLjAuMV81NTAwX3NpbmdsZS5odG1sKExhcHRvcCB3aXRoIE1EUEkgc2NyZWVuKS5wbmcnfSxcclxuICAgICAgICBdXHJcbiAgICB9LFxyXG59IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsIjx0ZW1wbGF0ZT5cclxuICAgIDx0cmFuc2l0aW9uIGVudGVyLWFjdGl2ZS1jbGFzcz1cImFuaW1hdGVfX2FuaW1hdGVkIGFuaW1hdGVfX2ZhZGVJbkxlZnRCaWdcIiBsZWF2ZS1hY3RpdmUtY2xhc3M9XCJhbmltYXRlX19hbmltYXRlZCBhbmltYXRlX19mYWRlT3V0TGVmdEJpZ1wiPlxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgIDxhcHAtbmF2Lz5cclxuICAgICAgICAgICAgPHNob3djYXNlLWNvbnRleHRcclxuICAgICAgICAgICAgICAgIHYtYmluZDpwcm9qZWN0LW5hbWU9XCJzaG93Y2FzZS5wcm9qZWN0TmFtZVwiXHJcbiAgICAgICAgICAgICAgICB2LWJpbmQ6cHJvamVjdC1kYXRlPVwic2hvd2Nhc2UucHJvamVjdERhdGVcIlxyXG4gICAgICAgICAgICAgICAgdi1iaW5kOnByb2plY3QtZGlzcGxheS1waG90by1wYXRoPVwic2hvd2Nhc2UucHJvamVjdERpc3BsYXlQaG90b1BhdGhcIlxyXG4gICAgICAgICAgICAgICAgdi1iaW5kOnByb2plY3QtdHlwZT1cInNob3djYXNlLnByb2plY3RUeXBlXCJcclxuICAgICAgICAgICAgICAgIHYtYmluZDpwcm9qZWN0LXBsYXRmb3JtPVwic2hvd2Nhc2UucHJvamVjdFBsYXRmb3JtXCJcclxuICAgICAgICAgICAgICAgIHYtYmluZDpwcm9qZWN0LWV4dGVybmFsLWxpbms9XCJzaG93Y2FzZS5wcm9qZWN0RXh0ZXJuYWxMaW5rXCJcclxuICAgICAgICAgICAgICAgIHYtYmluZDpwcm9qZWN0LWNvbnRleHQtcGhvdG8tcGF0aD1cInNob3djYXNlLnByb2plY3RDb250ZXh0UGhvdG9QYXRoXCJcclxuICAgICAgICAgICAgPjxzcGFuIHYtaHRtbD1cInNob3djYXNlLnByb2plY3REZXNjXCI+PC9zcGFuPjwvc2hvd2Nhc2UtY29udGV4dD5cclxuICAgICAgICAgICAgPHNob3djYXNlLXBsYW5uaW5nPjxzcGFuIHYtaHRtbD1cInNob3djYXNlLnByb2plY3RQbGFubmluZ1wiPjwvc3Bhbj48L3Nob3djYXNlLXBsYW5uaW5nPlxyXG4gICAgICAgICAgICA8c2hvd2Nhc2UtcmVzdWx0XHJcbiAgICAgICAgICAgICAgICB2LWJpbmQ6cHJvamVjdC1zY3JlZW5zaG90cz1cInNob3djYXNlLnByb2plY3RTY3JlZW5zaG90c1wiXHJcbiAgICAgICAgICAgID48c3BhbiB2LWh0bWw9XCJzaG93Y2FzZS5wcm9qZWN0UmVzdWx0XCI+PC9zcGFuPjwvc2hvd2Nhc2UtcmVzdWx0PlxyXG4gICAgICAgICAgICA8YXBwLWZvb3Rlci8+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L3RyYW5zaXRpb24+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c3R5bGU+XHJcblxyXG48L3N0eWxlPlxyXG5cclxuPHNjcmlwdD5cclxuaW1wb3J0IEFwcE5hdiBmcm9tICcuLi8uLi9jb21wb25lbnRzL2xheW91dC9BcHBOYXYudnVlJ1xyXG5pbXBvcnQgU2hvd2Nhc2VDb250ZXh0IGZyb20gJy4vU2hvd2Nhc2VDb250ZXh0LnZ1ZSdcclxuaW1wb3J0IFNob3djYXNlUGxhbm5pbmcgZnJvbSAnLi9TaG93Y2FzZVBsYW5uaW5nLnZ1ZSdcclxuaW1wb3J0IFNob3djYXNlUmVzdWx0IGZyb20gJy4vU2hvd2Nhc2VSZXN1bHQudnVlJ1xyXG5pbXBvcnQgQXBwRm9vdGVyIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvbGF5b3V0L0FwcEZvb3Rlci52dWUnXHJcbmltcG9ydCBzaG93Y2FzZXMgZnJvbSAnLi4vLi4vZGF0YS9zaG93Y2FzZXMuanMnXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBjb21wb25lbnRzOiB7XHJcbiAgICAgICAgQXBwTmF2LFxyXG4gICAgICAgIFNob3djYXNlQ29udGV4dCxcclxuICAgICAgICBTaG93Y2FzZVBsYW5uaW5nLFxyXG4gICAgICAgIFNob3djYXNlUmVzdWx0LFxyXG4gICAgICAgIEFwcEZvb3RlclxyXG4gICAgfSxcclxuXHJcbiAgICB3YXRjaDoge1xyXG4gICAgICAgICckcm91dGUnOiAnZmV0Y2hEYXRhJ1xyXG4gICAgfSxcclxuXHJcbiAgICBtZXRob2RzOiB7XHJcbiAgICAgICAgZmV0Y2hEYXRhICgpIHtcclxuICAgICAgICAgICAgY29uc3QgcGFnZUlkID0gdGhpcy4kcm91dGUucGFyYW1zLnBhZ2VJZFxyXG4gICAgICAgICAgICBjb25zdCBwYWdlSWRzID0gT2JqZWN0LmtleXMoc2hvd2Nhc2VzKVxyXG4gICAgICAgICAgICBpZihwYWdlSWRzLmluY2x1ZGVzKHBhZ2VJZCkpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zaG93Y2FzZSA9IHNob3djYXNlc1twYWdlSWRdXHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goe25hbWU6ICc0MDQnfSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgY3JlYXRlZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuZmV0Y2hEYXRhKClcclxuICAgIH0sXHJcblxyXG4gICAgbW91bnRlZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIEFPUy5pbml0KClcclxuICAgIH0sXHJcblxyXG4gICAgZGF0YTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHNob3djYXNlOiBudWxsLFxyXG4gICAgICAgICAgICBwYXJhbXM6IHtcclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVGhlIGRlc2lnbiBwb3J0Zm9saW8gb2YgR3JhbnQgQWRpZWxlLCBhbiBpbmRlcGVuZGVudCB3ZWIgZGVzaWduZXIgYW5kIGRldmVsb3BlciBiYXNlZCBpbiBOaWdlcmlhLicsXHJcbiAgICAgICAgICAgICAgICBzaXRlX25hbWU6ICdHcmFudCBBZGllbGUnLFxyXG4gICAgICAgICAgICAgICAgc2l0ZV91cmw6ICdodHRwczovL2dyYW50YWRpZWxlLndlYi5hcHAvIycgKyB0aGlzLiRyb3V0ZS5wYXRoLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBoZWFkOiB7XHJcbiAgICAgICAgdGl0bGU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIGlubmVyOiB0aGlzLnNob3djYXNlLnByb2plY3ROYW1lLFxyXG4gICAgICAgICAgICAgICAgc2VwZXJhdG9yOiAnJyxcclxuICAgICAgICAgICAgICAgIGNvbXBsZW1lbnQ6IHRoaXMucGFyYW1zLnNpdGVfbmFtZSxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbWV0YTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gW1xyXG4gICAgICAgICAgICAgICAge25hbWU6ICdyb2JvdHMnLCBjb250ZW50OiAnaW5kZXgnfSxcclxuICAgICAgICAgICAgICAgIHtuYW1lOiAnZGVzY3JpcHRpb24nLCBjb250ZW50OiB0aGlzLnBhcmFtcy5kZXNjcmlwdGlvbn0sXHJcbiAgICAgICAgICAgICAgICB7bmFtZTogJ2F1dGhvcicsIGNvbnRlbnQ6IHRoaXMucGFyYW1zLnNpdGVfbmFtZX0sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICdvZzp0aXRsZScsIGNvbnRlbnQ6IHRoaXMucGFyYW1zLnRpdGxlfSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ29nOnR5cGUnLCBjb250ZW50OiAnd2Vic2l0ZSd9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAnb2c6aW1hZ2UnLCBjb250ZW50OiB0aGlzLnBhcmFtcy5zaXRlX3VybCArICdhc3NldHMvaWNvbnMvZ2EtaWNvbi0yNTZ4MjU2LnBuZyd9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAnb2c6aW1hZ2U6dHlwZScsIGNvbnRlbnQ6ICdpbWFnZS9wbmcnfSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ29nOmltYWdlOndpZHRoJywgY29udGVudDogJzI1Nid9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAnb2c6aW1hZ2U6aGVpZ2h0JywgY29udGVudDogJzI1Nid9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAnb2c6dXJsJywgY29udGVudDogdGhpcy5wYXJhbXMuc2l0ZV91cmx9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAnb2c6ZGVzY3JpcHRpb24nLCBjb250ZW50OiB0aGlzLnBhcmFtcy5kZXNjcmlwdGlvbn0sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICdvZzpsb2NhbGUnLCBjb250ZW50OiAnZW5fVVMnfSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ29nOnNpdGVfbmFtZScsIGNvbnRlbnQ6IHRoaXMucGFyYW1zLnNpdGVfbmFtZX0sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICd0d2l0dGVyOmNhcmQnLCBjb250ZW50OiAnc3VtbWFyeSd9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAndHdpdHRlcjpjcmVhdG9yJywgY29udGVudDogJ0BkZXZncmFudHknfSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ3R3aXR0ZXI6dGl0bGUnLCBjb250ZW50OiB0aGlzLnBhcmFtcy50aXRsZX0sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICd0d2l0dGVyOmRlc2NyaXB0aW9uJywgY29udGVudDogdGhpcy5wYXJhbXMuZGVzY3JpcHRpb259LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAndHdpdHRlcjppbWFnZScsIGNvbnRlbnQ6IHRoaXMucGFyYW1zLnNpdGVfdXJsICsgJ2Fzc2V0cy9pY29ucy9nYS1pY29uLTI1NngyNTYucG5nJ30sXHJcbiAgICAgICAgICAgIF1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGxpbms6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIFtcclxuICAgICAgICAgICAgICAgIHtyZWw6ICdjYW5vbmljYWwnLCBocmVmOiB0aGlzLnBhcmFtcy5zaXRlX3VybH0sXHJcbiAgICAgICAgICAgIF1cclxuICAgICAgICB9LFxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTZjZjc1MzAzJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgdmFyIGFwaSA9IHJlcXVpcmUoXCJDOlxcXFx4YW1wcFxcXFxodGRvY3NcXFxcUFJPSkVDVFNcXFxcZ3JhbnRhZGllbGVcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1ob3QtcmVsb2FkLWFwaVxcXFxkaXN0XFxcXGluZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnNmNmNzUzMDMnKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnNmNmNzUzMDMnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnNmNmNzUzMDMnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02Y2Y3NTMwMyZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCc2Y2Y3NTMwMycsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwic3JjL3BhZ2VzL1Nob3djYXNlUGFnZS9pbmRleC52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF9jKFxuICAgIFwidHJhbnNpdGlvblwiLFxuICAgIHtcbiAgICAgIGF0dHJzOiB7XG4gICAgICAgIFwiZW50ZXItYWN0aXZlLWNsYXNzXCI6IFwiYW5pbWF0ZV9fYW5pbWF0ZWQgYW5pbWF0ZV9fZmFkZUluTGVmdEJpZ1wiLFxuICAgICAgICBcImxlYXZlLWFjdGl2ZS1jbGFzc1wiOiBcImFuaW1hdGVfX2FuaW1hdGVkIGFuaW1hdGVfX2ZhZGVPdXRMZWZ0QmlnXCJcbiAgICAgIH1cbiAgICB9LFxuICAgIFtcbiAgICAgIF9jKFwiZGl2XCIsIFtcbiAgICAgICAgX2MoXG4gICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzdGF0aWNTdHlsZToge1xuICAgICAgICAgICAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxuICAgICAgICAgICAgICBsZWZ0OiBcIjUwJVwiLFxuICAgICAgICAgICAgICB0b3A6IFwiMTAlXCIsXG4gICAgICAgICAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgICAgICAgICAgbWFyZ2luOiBcIjBcIixcbiAgICAgICAgICAgICAgcGFkZGluZzogXCIwXCIsXG4gICAgICAgICAgICAgIFwibWFyZ2luLWxlZnRcIjogXCItNTAlXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICBcImgxXCIsXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZToge1xuICAgICAgICAgICAgICAgICAgY29sb3I6IFwiI2RkZFwiLFxuICAgICAgICAgICAgICAgICAgXCJ0ZXh0LWFsaWduXCI6IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgICAgICBcImZvbnQtc2l6ZVwiOiBcImNhbGMoMTBlbSArIDJ2dylcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIF92bS5fdihcIjRcIiksXG4gICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICBcInNwYW5cIixcbiAgICAgICAgICAgICAgICAgIHsgc3RhdGljU3R5bGU6IHsgY29sb3I6IFwicmdiYSgyNTUsIDAsIDAsIDAuNDIpXCIgfSB9LFxuICAgICAgICAgICAgICAgICAgW192bS5fdihcIjBcIildXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBfdm0uX3YoXCI0XCIpXG4gICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICksXG4gICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgIFwicFwiLFxuICAgICAgICAgICAgICB7IHN0YXRpY1N0eWxlOiB7IFwidGV4dC1hbGlnblwiOiBcImNlbnRlclwiLCBcImZvbnQtd2VpZ2h0XCI6IFwiOTAwXCIgfSB9LFxuICAgICAgICAgICAgICBbX3ZtLl92KFwiTk9UIEZPVU5EXCIpXVxuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgXCJwXCIsXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZToge1xuICAgICAgICAgICAgICAgICAgcGFkZGluZzogXCIyMHB4XCIsXG4gICAgICAgICAgICAgICAgICBjb2xvcjogXCIjOTk5XCIsXG4gICAgICAgICAgICAgICAgICBcInRleHQtYWxpZ25cIjogXCJjZW50ZXJcIixcbiAgICAgICAgICAgICAgICAgIFwibGluZS1oZWlnaHRcIjogXCIxLjZcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgIFwiWW91IHNlZW0gbG9zdCwgdGhhdCBoYXBwZW5zISBIb2xkIG15IGhhbmRzIGxldCBtZSB0YWtlIHlvdSByaWdodCBcIlxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICBcInJvdXRlci1saW5rXCIsXG4gICAgICAgICAgICAgICAgICB7IHN0YXRpY1N0eWxlOiB7IGNvbG9yOiBcImdyZWVuXCIgfSwgYXR0cnM6IHsgdG86IFwiL1wiIH0gfSxcbiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoXCJob21lXCIpXVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgKVxuICAgICAgICAgIF1cbiAgICAgICAgKVxuICAgICAgXSlcbiAgICBdXG4gIClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCI8dGVtcGxhdGU+XHJcbiAgICA8dHJhbnNpdGlvbiBlbnRlci1hY3RpdmUtY2xhc3M9XCJhbmltYXRlX19hbmltYXRlZCBhbmltYXRlX19mYWRlSW5MZWZ0QmlnXCIgbGVhdmUtYWN0aXZlLWNsYXNzPVwiYW5pbWF0ZV9fYW5pbWF0ZWQgYW5pbWF0ZV9fZmFkZU91dExlZnRCaWdcIj5cclxuICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPVwicG9zaXRpb246YWJzb2x1dGU7IGxlZnQ6NTAlOyB0b3A6MTAlOyB3aWR0aDoxMDAlOyBtYXJnaW46MDsgcGFkZGluZzowOyBtYXJnaW4tbGVmdDotNTAlO1wiPlxyXG4gICAgICAgICAgICAgICAgPGgxIHN0eWxlPVwiY29sb3I6I2RkZDsgdGV4dC1hbGlnbjpjZW50ZXI7IGZvbnQtc2l6ZTpjYWxjKDEwZW0gKyAydncpO1wiPjQ8c3BhbiBzdHlsZT1cImNvbG9yOnJnYmEoMjU1LCAwLCAwLCAwLjQyKTtcIj4wPC9zcGFuPjQ8L2gxPlxyXG4gICAgICAgICAgICAgICAgPHAgc3R5bGU9XCJ0ZXh0LWFsaWduOmNlbnRlcjsgZm9udC13ZWlnaHQ6OTAwO1wiPk5PVCBGT1VORDwvcD5cclxuICAgICAgICAgICAgICAgIDxwIHN0eWxlPVwicGFkZGluZzoyMHB4OyBjb2xvcjojOTk5OyB0ZXh0LWFsaWduOmNlbnRlcjsgbGluZS1oZWlnaHQ6MS42O1wiPllvdSBzZWVtIGxvc3QsIHRoYXQgaGFwcGVucyEgSG9sZCBteSBoYW5kcyBsZXQgbWUgdGFrZSB5b3UgcmlnaHQgPHJvdXRlci1saW5rIHRvPVwiL1wiIHN0eWxlPVwiY29sb3I6Z3JlZW47XCI+aG9tZTwvcm91dGVyLWxpbms+PC9wPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvdHJhbnNpdGlvbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzdHlsZT5cclxuXHJcbjwvc3R5bGU+XHJcblxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBkYXRhOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcGFyYW1zOiB7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJzQwNCcsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgXHJcbiAgICBoZWFkOiB7XHJcbiAgICAgICAgdGl0bGU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIGlubmVyOiB0aGlzLnBhcmFtcy50aXRsZSxcclxuICAgICAgICAgICAgICAgIHNlcGVyYXRvcjogJycsXHJcbiAgICAgICAgICAgICAgICBjb21wbGVtZW50OiAnTm90IEZvdW5kJyxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIG1ldGE6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIFtcclxuICAgICAgICAgICAgICAgIHtuYW1lOiAncm9ib3RzJywgY29udGVudDogJ25vaW5kZXgnfSxcclxuICAgICAgICAgICAgXVxyXG4gICAgICAgIH0sXHJcbiAgICB9XHJcbn1cclxuPC9zY3JpcHQ+IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL05vdEZvdW5kUGFnZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9Ob3RGb3VuZFBhZ2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9Ob3RGb3VuZFBhZ2UudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWYzNzhmOTdjJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL05vdEZvdW5kUGFnZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL05vdEZvdW5kUGFnZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkM6XFxcXHhhbXBwXFxcXGh0ZG9jc1xcXFxQUk9KRUNUU1xcXFxncmFudGFkaWVsZVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWhvdC1yZWxvYWQtYXBpXFxcXGRpc3RcXFxcaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCdmMzc4Zjk3YycpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCdmMzc4Zjk3YycsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCdmMzc4Zjk3YycsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vTm90Rm91bmRQYWdlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1mMzc4Zjk3YyZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCdmMzc4Zjk3YycsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwic3JjL3BhZ2VzL05vdEZvdW5kUGFnZS52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJpbXBvcnQgVnVlIGZyb20gJ3Z1ZSdcclxuaW1wb3J0IFZ1ZVJvdXRlciBmcm9tICd2dWUtcm91dGVyJ1xyXG5pbXBvcnQgVnVlSGVhZCBmcm9tICd2dWUtaGVhZCdcclxuaW1wb3J0IFNjcm9sbHNweSBmcm9tICd2dWUyLXNjcm9sbHNweSdcclxuaW1wb3J0IFZ1ZUFuYWx5dGljcyBmcm9tICd2dWUtYW5hbHl0aWNzJ1xyXG5cclxuaW1wb3J0IEhvbWVQYWdlIGZyb20gJy4vcGFnZXMvSG9tZVBhZ2UvaW5kZXgudnVlJ1xyXG5pbXBvcnQgU2hvd2Nhc2VQYWdlIGZyb20gJy4vcGFnZXMvU2hvd2Nhc2VQYWdlL2luZGV4LnZ1ZSdcclxuaW1wb3J0IE5vdEZvdW5kUGFnZSBmcm9tICcuL3BhZ2VzL05vdEZvdW5kUGFnZS52dWUnXHJcblxyXG5WdWUudXNlKFZ1ZVJvdXRlcilcclxuVnVlLnVzZShWdWVIZWFkKVxyXG5WdWUudXNlKFNjcm9sbHNweSlcclxuXHJcbmNvbnN0IHJvdXRlcyA9IFtcclxuICAgIHtwYXRoOiAnLycsIG5hbWU6ICdob21lJywgY29tcG9uZW50OiBIb21lUGFnZX0sXHJcbiAgICB7cGF0aDogJy9jYXNlLzpwYWdlSWQnLCBuYW1lOiAnY2FzZScsIGNvbXBvbmVudDogU2hvd2Nhc2VQYWdlfSxcclxuICAgIHtwYXRoOiAnKicsIG5hbWU6ICc0MDQnLCBjb21wb25lbnQ6IE5vdEZvdW5kUGFnZX1cclxuXVxyXG5cclxuY29uc3Qgcm91dGVyID0gbmV3IFZ1ZVJvdXRlcih7XHJcbiAgICByb3V0ZXMsXHJcbiAgICBtb2RlOiAnaGFzaCcsXHJcbiAgICBzY3JvbGxCZWhhdmlvcih0bywgZnJvbSwgc2F2ZWRQb3NpdGlvbikge1xyXG5cdFx0aWYgKHRvLmhhc2gpIHtcclxuXHRcdFx0cmV0dXJuIHsgc2VsZWN0b3I6IHRvLmhhc2ggfVxyXG5cdFx0fSBlbHNlIGlmIChzYXZlZFBvc2l0aW9uKSB7XHJcbiAgICBcdFx0cmV0dXJuIHNhdmVkUG9zaXRpb247XHJcbiAgICBcdH0gZWxzZSB7XHJcblx0XHRcdHJldHVybiB7IHg6IDAsIHk6IDAgfVxyXG5cdFx0fVxyXG5cdH1cclxufSlcclxuXHJcblZ1ZS51c2UoVnVlQW5hbHl0aWNzLCB7XHJcblx0aWQ6ICdVQS0xNzAwOTQ3MjEtMScsXHJcblx0cm91dGVyXHJcbn0pXHJcblxyXG52YXIgdm0gPSBuZXcgVnVlKHtcclxuICAgIHJvdXRlclxyXG59KS4kbW91bnQoJyNhcHAnKVxyXG4iXSwic291cmNlUm9vdCI6IiJ9