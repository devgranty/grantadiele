!function(e){function t(t){for(var a,i,r=t[0],l=t[1],c=t[2],d=0,h=[];d<r.length;d++)i=r[d],Object.prototype.hasOwnProperty.call(s,i)&&s[i]&&h.push(s[i][0]),s[i]=0;for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&(e[a]=l[a]);for(p&&p(t);h.length;)h.shift()();return n.push.apply(n,c||[]),o()}function o(){for(var e,t=0;t<n.length;t++){for(var o=n[t],a=!0,r=1;r<o.length;r++){var l=o[r];0!==s[l]&&(a=!1)}a&&(n.splice(t--,1),e=i(i.s=o[0]))}return e}var a={},s={0:0},n=[];function i(t){if(a[t])return a[t].exports;var o=a[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=e,i.c=a,i.d=function(e,t,o){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(i.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)i.d(o,a,function(t){return e[t]}.bind(null,a));return o},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="";var r=window.webpackJsonp=window.webpackJsonp||[],l=r.push.bind(r);r.push=t,r=r.slice();for(var c=0;c<r.length;c++)t(r[c]);var p=l;n.push([11,1]),o()}({11:function(e,t,o){"use strict";o.r(t);var a=o(1),s=o(4),n=o(6),i=o.n(n),r=o(8),l=o(7),c=o.n(l),p=function(){var e=this.$createElement,t=this._self._c||e;return t("div",[t("app-nav"),this._v(" "),t("home-hero"),this._v(" "),t("div",{directives:[{name:"scroll-spy",rawName:"v-scroll-spy"}]},[t("home-me"),this._v(" "),t("home-showcase"),this._v(" "),t("home-whyme"),this._v(" "),t("app-footer")],1)],1)};p._withStripped=!0;var d=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("header",{staticClass:"navbar animate__animated animate__slideInDown animate__delay-3s"},[o("div",{directives:[{name:"scroll-spy-active",rawName:"v-scroll-spy-active",value:{selector:".scrollspy-find",class:"scrollspy-active"},expression:"{selector: '.scrollspy-find', class: 'scrollspy-active'}"}],staticClass:"navbar-container"},[o("router-link",{attrs:{to:"/"}},[o("img",{staticClass:"navbar-brand-logo",attrs:{src:e.navLogoPath,alt:"ga",width:"50",height:"50"}})]),e._v(" "),o("nav",{staticClass:"navbar-links",attrs:{role:"navigation"}},[o("ul",e._l(e.navbarLinks,(function(t){return o("li",{key:t.title},[o("router-link",{staticClass:"scrollspy-find",attrs:{to:t.link}},[e._v(e._s(t.title))])],1)})),0)]),e._v(" "),o("div",[o("button",{staticClass:"navbar-menu-btn",attrs:{id:"navbarModalBtn",role:"button","aria-haspopup":"true"},on:{click:function(t){e.showMenu=!e.showMenu}}},[e._v(e._s(e.showMenu?"Close":"Menu"))]),e._v(" "),o("transition",{attrs:{"enter-active-class":"animate__animated animate__flipInY","leave-active-class":"animate__animated animate__flipOutY"}},[o("nav",{directives:[{name:"show",rawName:"v-show",value:e.showMenu,expression:"showMenu"}],staticClass:"navbar-modal",attrs:{id:"navbarModal",role:"menu","aria-modal":"true"}},[o("ul",{directives:[{name:"scroll-spy-active",rawName:"v-scroll-spy-active",value:{selector:".scrollspy-find",class:"scrollspy-active"},expression:"{selector: '.scrollspy-find', class: 'scrollspy-active'}"}]},e._l(e.navbarLinks,(function(t){return o("li",{key:t.title},[o("router-link",{staticClass:"scrollspy-find",attrs:{to:t.link},nativeOn:{click:function(t){e.showMenu=!e.showMenu}}},[e._v(e._s(t.title))])],1)})),0)])])],1)],1)])};d._withStripped=!0;var h={data:function(){return{navLogoPath:"./assets/logos/ga-logo-600x600.png",navbarLinks:[{link:"/#me",title:"Me"},{link:"/#showcase",title:"Showcase"},{link:"/#whyme",title:"Why Me"},{link:"/#contact",title:"Contact"}],showMenu:!1}},methods:{hideNav(){var e=window.pageYOffset;window.onscroll=function(){var t=window.pageYOffset,o=document.querySelector(".navbar");o.style.top=e>t?"0":"-100px",e=t}}},created:function(){this.hideNav()}},m=o(0),u=Object(m.a)(h,d,[],!1,null,null,null);u.options.__file="src/components/layout/AppNav.vue";var _=u.exports,g=function(){var e=this.$createElement;this._self._c;return this._m(0)};g._withStripped=!0;var v={},w=Object(m.a)(v,g,[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"hero",attrs:{id:"myHero"}},[t("div",{staticClass:"hero-welcome-board"},[t("h1",{staticClass:"animate__animated animate__bounceInDown"},[this._v("Web Designer, Developer & Machine Learning enthusiast in Nigeria.")])]),this._v(" "),t("div",{staticClass:"animate__animated animate__bounce animate__infinite animate__delay-4s hero-scroll-down icon-gradient"},[t("i",{staticClass:"fas fa-chevron-up",attrs:{"aria-hidden":"true"}})])])}],!1,null,null,null);w.options.__file="src/pages/HomePage/HomeHero.vue";var f=w.exports,y=function(){var e=this.$createElement,t=this._self._c||e;return t("section",{staticClass:"page-section variation-section"},[t("div",{staticClass:"inner-container"},[t("h1",{staticClass:"section-heading",attrs:{id:"me"}},[this._v("Me "),t("router-link",{staticClass:"section-anchor-id icon-gradient",attrs:{to:"#me"}},[t("i",{staticClass:"fas fa-link",attrs:{"aria-hidden":"true"}})])],1),this._v(" "),this._m(0)])])};y._withStripped=!0;var j={},b=Object(m.a)(j,y,[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"about-me-note"},[t("p",[this._v("Hellooo! I'm Grant Adiele (Or you can call me Devgranty), an independent web designer/developer and machine learning enthusiast (not an expert) based in Nigeria.")]),this._v(" "),t("p",[this._v("My goal is to create functional and intutive interfaces that captures users and promotes your brand.")]),this._v(" "),t("p",[this._v("Aside programming, I enjoy playing games, moonwalking, watching movies, listening to music and daydreaming.")])])}],!1,null,null,null);b.options.__file="src/pages/HomePage/HomeMe.vue";var P=b.exports,z=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("section",{staticClass:"page-section"},[o("div",{staticClass:"inner-container"},[o("h1",{staticClass:"section-heading",attrs:{id:"showcase"}},[e._v("Showcase "),o("router-link",{staticClass:"section-anchor-id icon-gradient",attrs:{to:"#showcase"}},[o("i",{staticClass:"fas fa-link",attrs:{"aria-hidden":"true"}})])],1),e._v(" "),o("p",{staticClass:"section-headline"},[e._v("Some projects I've worked on independently.")]),e._v(" "),o("div",{staticClass:"container-fluid"},[o("div",{staticClass:"row"},e._l(e.projects,(function(t){return o("div",{key:t.title,staticClass:"col-12 col-lg-6 mb-4"},[o("div",{staticClass:"project-card",attrs:{"data-aos":"fade-up"}},[o("router-link",{staticClass:"project-link",attrs:{to:t.link}},[o("img",{staticClass:"project-thumbnail",attrs:{src:t.imagePath}}),e._v(" "),o("div",{staticClass:"project-details"},[o("h3",{style:t.details},[e._v(e._s(t.title))]),e._v(" "),o("h2",{style:t.details},[e._v(e._s(t.type))])])])],1)])})),0)])])])};z._withStripped=!0;var k={data:function(){return{projects:[{link:"case/project-nx",details:{color:"#000"},title:"project nx",type:"Web design, development",imagePath:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878535/uploads/project_nx/project-nx-cover-600x600_h9ir2g.png"},{link:"case/willow-investment",details:{color:"#fff"},title:"willow investment",type:"Web design, development",imagePath:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878585/uploads/willow_investment/willow-investment-cover-600x600_fipxwh.png"},{link:"case/movynet",details:{color:"#dd0404"},title:"movynet",type:"Web design, development",imagePath:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878483/uploads/movynet/movynet-cover-600x600_o2djmh.png"},{link:"case/jovianbiz",details:{color:"#fff"},title:"jovianbiz",type:"Web design, development",imagePath:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878433/uploads/jovianbiz/jovianbiz-cover-600x600_lxz6me.png"},{link:"case/advbitcoinearns",details:{color:"#aaa"},title:"advbitcoinearns",type:"Web design, development",imagePath:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878355/uploads/advbitcoinearns/advbitcoinearns-cover-600x600_tpxioj.png"},{link:"case/myafriconnect",details:{color:"#fff"},title:"myafriconnect",type:"Web design, development",imagePath:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878481/uploads/myafriconnect/logos%2Cicons/logo-1080x1080_d25dtw.jpg"}]}}},x=Object(m.a)(k,z,[],!1,null,null,null);x.options.__file="src/pages/HomePage/HomeShowcase.vue";var C=x.exports,D=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("section",{staticClass:"page-section"},[o("div",{staticClass:"inner-container"},[o("h1",{staticClass:"section-heading",attrs:{id:"whyme"}},[e._v("Why Me "),o("router-link",{staticClass:"section-anchor-id icon-gradient",attrs:{to:"#whyme"}},[o("i",{staticClass:"fas fa-link",attrs:{"aria-hidden":"true"}})])],1),e._v(" "),o("p",{staticClass:"section-headline"},[e._v('Still not convinced? Here are some "WHY ME" reasons.')]),e._v(" "),o("div",{staticClass:"whyme-carousel"},e._l(e.reasons,(function(t){return o("div",{key:t.title,staticClass:"carousel-cell"},[o("ul",[o("li",[o("i",{staticClass:"icon-gradient",class:t.iconClass,attrs:{"aria-hidden":"true"}})]),e._v(" "),o("li",[o("h2",[e._v(e._s(t.title))])]),e._v(" "),o("li",[e._v(e._s(t.comment))])])])})),0),e._v(" "),o("div",{staticClass:"whyme-reason"},[o("div",{staticClass:"row"},e._l(e.reasons,(function(t){return o("div",{key:t.title,class:t.columnClass},[o("div",{staticClass:"reason-cell",attrs:{"data-aos":"fade-up"}},[o("ul",[o("li",[o("i",{staticClass:"icon-gradient",class:t.iconClass,attrs:{"aria-hidden":"true"}})]),e._v(" "),o("li",[o("h2",[e._v(e._s(t.title))])]),e._v(" "),o("li",[e._v(e._s(t.comment))])])])])})),0)])])])};D._withStripped=!0;var M={data:function(){return{reasons:[{columnClass:"col-lg-4 offset-lg-4 mb-5",iconClass:"fas fa-smile",title:"Best Quality",comment:"Nothing but the BEST."},{columnClass:"col-lg-6 mb-5",iconClass:"fas fa-gem",title:"Fully Customized",comment:"Like nothing you've seen before, build it from the ground up."},{columnClass:"col-lg-4 offset-lg-1 mb-5",iconClass:"fas fa-money-bill-wave",title:"Affordable",comment:"Not to be mistaken for CHEAP."},{columnClass:"col-lg-4 offset-lg-1 mb-5",iconClass:"fas fa-shipping-fast",title:"Fast Delivery",comment:"Wouldn't have to rush it, just be there on time."},{columnClass:"col-lg-6 mb-5",iconClass:"fas fa-envelope",title:"Support",comment:"Provide all required assistance till you are up and running with your project."}]}}},S=Object(m.a)(M,D,[],!1,null,null,null);S.options.__file="src/pages/HomePage/HomeWhyme.vue";var I=S.exports,A=function(){var e=this.$createElement;this._self._c;return this._m(0)};A._withStripped=!0;var L={},E=Object(m.a)(L,A,[function(){var e=this.$createElement,t=this._self._c||e;return t("footer",{staticClass:"contact-footer",attrs:{id:"contact"}},[t("div",{staticClass:"inner-container"},[t("h1",{staticClass:"section-icon-heading"},[t("a",{staticClass:"icon-gradient",attrs:{href:"#contact"}},[t("i",{staticClass:"fas fa-envelope",attrs:{"aria-hidden":"true"}})])]),this._v(" "),t("h2",{staticClass:"contact-note"},[this._v("You're a mail away. Email me at "),t("a",{attrs:{href:"mailto:hello.devgranty@gmail.com"}},[this._v("hello.devgranty@gmail.com")])])])])}],!1,null,null,null);E.options.__file="src/components/layout/AppFooter.vue";var T=E.exports,N={components:{AppNav:_,HomeHero:f,HomeMe:P,HomeShowcase:C,HomeWhyme:I,AppFooter:T},data:function(){return{params:{title:"Design Portfolio of Grant Adiele",description:"The design portfolio of Grant Adiele, an independent web designer and developer based in Nigeria.",site_name:"Grant Adiele",site_url:"https://grantadiele.web.app/"}}},mounted:function(){particlesJS.load("myHero","./assets/json/myparticles-config.json");var e=document.querySelector(".whyme-carousel");new Flickity(e,{cellAlign:"center",contain:!0,wrapAround:!0,autoPlay:3500});AOS.init(),this.$ua.trackView("home")},head:{title:function(){return{inner:this.params.title,seperator:"",complement:""}},meta:function(){return[{name:"robots",content:"index"},{name:"description",content:this.params.description},{name:"author",content:this.params.site_name},{property:"og:title",content:this.params.title},{property:"og:type",content:"website"},{property:"og:image",content:this.params.site_url+"assets/icons/ga-icon-256x256.png"},{property:"og:image:type",content:"image/png"},{property:"og:image:width",content:"256"},{property:"og:image:height",content:"256"},{property:"og:url",content:this.params.site_url},{property:"og:description",content:this.params.description},{property:"og:locale",content:"en_US"},{property:"og:site_name",content:this.params.site_name},{property:"twitter:card",content:"summary"},{property:"twitter:creator",content:"@devgranty"},{property:"twitter:title",content:this.params.title},{property:"twitter:description",content:this.params.description},{property:"twitter:image",content:this.params.site_url+"assets/icons/ga-icon-256x256.png"}]},link:function(){return[{rel:"canonical",href:this.params.site_url}]}}},O=Object(m.a)(N,p,[],!1,null,null,null);O.options.__file="src/pages/HomePage/index.vue";var H=O.exports,W=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",[o("app-nav"),e._v(" "),o("showcase-context",{attrs:{"project-name":e.showcase.projectName,"project-date":e.showcase.projectDate,"project-display-photo-path":e.showcase.projectDisplayPhotoPath,"project-type":e.showcase.projectType,"project-platform":e.showcase.projectPlatform,"project-external-link":e.showcase.projectExternalLink,"project-context-photo-path":e.showcase.projectContextPhotoPath}},[o("span",{domProps:{innerHTML:e._s(e.showcase.projectDesc)}})]),e._v(" "),o("showcase-planning",[o("span",{domProps:{innerHTML:e._s(e.showcase.projectPlanning)}})]),e._v(" "),o("showcase-result",{attrs:{"project-screenshots":e.showcase.projectScreenshots}},[o("span",{domProps:{innerHTML:e._s(e.showcase.projectResult)}})]),e._v(" "),o("app-footer")],1)};W._withStripped=!0;var q=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("section",{staticClass:"showcase-header"},[o("div",{staticClass:"project-name"},[o("h2",[e._v(e._s(e.projectName))]),e._v(" "),o("p",{staticClass:"project-date"},[e._v(e._s(e.projectDate))])]),e._v(" "),o("div",[o("img",{staticClass:"project-display-photo",attrs:{src:e.projectDisplayPhotoPath,"data-aos":"fade-up"}})]),e._v(" "),o("div",{staticClass:"container-fluid project-context"},[o("div",{staticClass:"row"},[o("div",{staticClass:"col-12 col-lg-6 my-5 project-context-details",attrs:{"data-aos":"fade"}},[o("p",{staticClass:"project-type"},[e._v(e._s(e.projectType))]),e._v(" "),o("p",{staticClass:"project-platform"},[e._v(e._s(e.projectPlatform))]),e._v(" "),o("a",{attrs:{href:e.projectExternalLink,target:"_blank"}},[e._v("Visit site")])]),e._v(" "),o("div",{staticClass:"col-12 col-lg-6 my-5 project-context-desc article-slot",attrs:{"data-aos":"fade"}},[o("div",[e._t("default")],2)])])]),e._v(" "),o("div",{staticClass:"project-context-photo-container"},[o("img",{staticClass:"project-context-photo",attrs:{src:e.projectContextPhotoPath,"data-aos":"fade-up"}})])])};q._withStripped=!0;var $={props:{projectName:{type:String,required:!0},projectDate:{type:String,required:!0},projectDisplayPhotoPath:{type:String,required:!0},projectType:{type:String,required:!0},projectPlatform:{type:String,required:!0},projectExternalLink:{type:String,required:!0},projectContextPhotoPath:{type:String,required:!0}}},J=Object(m.a)($,q,[],!1,null,null,null);J.options.__file="src/pages/ShowcasePage/ShowcaseContext.vue";var F=J.exports,B=function(){var e=this.$createElement,t=this._self._c||e;return t("section",{staticClass:"page-section",attrs:{"data-aos":"fade"}},[t("div",{staticClass:"inner-container article-slot"},[this._m(0),this._v(" "),t("div",{staticClass:"slot-text"},[this._t("default")],2)])])};B._withStripped=!0;var R={},X=Object(m.a)(R,B,[function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{staticClass:"showcase-sub-heading"},[t("span",[this._v("2/3")]),this._v(" planning")])}],!1,null,null,null);X.options.__file="src/pages/ShowcasePage/ShowcasePlanning.vue";var G=X.exports,V=function(){var e=this.$createElement,t=this._self._c||e;return t("section",{staticClass:"page-section",attrs:{"data-aos":"fade"}},[t("div",{staticClass:"inner-container article-slot"},[this._m(0),this._v(" "),t("div",{staticClass:"slot-text"},[this._t("default")],2),this._v(" "),t("div",{staticClass:"project-result-photo-container"},[t("ul",this._l(this.projectScreenshots,(function(e){return t("li",{key:e.src,attrs:{"data-aos":"fade-up"}},[t("img",{staticClass:"project-result-photo",attrs:{src:e.src}})])})),0)])])])};V._withStripped=!0;var Y={props:{projectScreenshots:{type:Array,required:!0}}},Q=Object(m.a)(Y,V,[function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{staticClass:"showcase-sub-heading"},[t("span",[this._v("3/3")]),this._v(" result")])}],!1,null,null,null);Q.options.__file="src/pages/ShowcasePage/ShowcaseResult.vue";var U=Q.exports,K={"project-nx":{projectName:"Project NX",projectDate:"2020",projectDisplayPhotoPath:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878576/uploads/project_nx/Project_NX/342462-PA9Q6O-452_ixadnl.png",projectType:"Web Design, Development",projectPlatform:"Mobile, Tablet, Desktop",projectExternalLink:"about:blank",projectContextPhotoPath:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878540/uploads/project_nx/project-nx-context-2880x1800_cwgl4v.png",projectDesc:"<p>How about reading stories right on your mobile, on the go?!</p>\n        <p>Reading stories you love right on your mobile devices is fun and I want to even make that a lot better!</p>\n        <p>Project NX is an experimental platform that allows you to read stories right on your device (Mobile, Labtop or even Desktop). The concept of the platform design enables for quick finding of stories and articles I think you'd be interested in reading.</p>",projectPlanning:'<p>The design and development implementations were pretty straight foward. Designed with the Bootstrap 4 material design framework, I was able to quickly achieve the design pattern that suites an immersive platform of stories! The material design was the right way to go because I wanted the design to look as real as possible.</p>\n        <p>To promote readablity, the font of choice was the well known Roboto. Adding more realness to Project NX, Font Awesome icons were used.</p>\n        <p>The backend powered by PHP and MySQL database using a framework I created <a href="//github.com/devgranty/tm_framework" rel="external" target="_blank">here</a></p>\n        <p>Please note: Project NX is still in its beta and has not been released to the public and I hope on doing that pretty soon!.</p>',projectResult:"<p>Mission accomplished!</p>\n        <p>It's always an amazing feeling when you create stuffs and see millions of people make the best out of it each day. And Hey!, Don't ask the meaning of \"NX\" because I certainly have no idea, probably daydreaming when I gave it that name 😴</p>",projectScreenshots:[{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878579/uploads/project_nx/Project_NX/localhost_projects_project_nx__Laptop_with_HiDPI_screen_tmbq0n.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878562/uploads/project_nx/Project_NX/localhost_projects_project_nx__Laptop_with_MDPI_screen_oprm3e.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878574/uploads/project_nx/Project_NX/localhost_projects_project_nx_forum.php_p_the-three-billy-goats-gruff_Laptop_with_MDPI_screen_xski1k.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878582/uploads/project_nx/Project_NX/localhost_projects_project_nx_signup.php_Laptop_with_MDPI_screen_gnf6ib.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878580/uploads/project_nx/Project_NX/localhost_projects_project_nx_signin.php_Laptop_with_MDPI_screen_1_hpao3s.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878580/uploads/project_nx/Project_NX/localhost_projects_project_nx_signin.php_Laptop_with_MDPI_screen_cycupd.png"}]},"willow-investment":{projectName:"Willow Investment",projectDate:"2019",projectDisplayPhotoPath:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878586/uploads/willow_investment/willow_investment/adult-attire-commerce-1367269_qbwi9k.png",projectType:"Web Design, Development",projectPlatform:"Mobile, Tablet, Desktop",projectExternalLink:"//willowinvestment.net",projectContextPhotoPath:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878590/uploads/willow_investment/willow-investment-context-2880x1800_tploag.png",projectDesc:"<p>Willow Investment is a Bitcoin Investment platform owned and managed by the Willow Group.</p>\n        <p>Is Willow secured? - Yes!, Willow is pefectly secured as no transactions are done on the site. All transactions require an encrypted bitcoin wallet and data is only transferred via APIs.</p>",projectPlanning:"<p><strong>Problem Solving</strong> <br> The entire idea was to create something that allowed commumication between cryptocurrencies, store them, perform mathematical operations on them without them being there. This had to be as accurate as possible.</p>\n        <p>To solve this problem we resort to APIs - Application Programming Interface. We could store somewhere else while making things happen in those places and returning accurate results in their exact quantities and not enhanced. PROBLEM SOLVED!</p>\n        <p><strong>Design &amp; Development</strong> <br> Willow Investment like any other project I've worked on sort simplicity in the highest form, we won't want delays in communications, so we sort after the best yet lightest technology stacks to make this happen. Bootstrap 3 was used to quickly create style the markup, Jquery with JavaScript.</p>\n        <p>For development PHP 7, an early version of a framework I developed and MySQL was used as our database.</p>",projectResult:'<p>"Amazing work Grant!", Delivering quickly, while making the entire project fuctional and intutive is not just about selecting the right code stack, the technologies has to be used correctly. Cheers to another great success 🥂</p>',projectScreenshots:[{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878598/uploads/willow_investment/willow_investment/localhost_projects_willow_investment__Laptop_with_MDPI_screen_zkjrae.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878599/uploads/willow_investment/willow_investment/localhost_projects_willow_investment_signup.php_Laptop_with_MDPI_screen_xgeic7.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878598/uploads/willow_investment/willow_investment/localhost_projects_willow_investment_account_login.php_Laptop_with_MDPI_screen_hikstp.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878595/uploads/willow_investment/willow_investment/localhost_projects_willow_investment__Laptop_with_MDPI_screen_3_rbux7m.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878594/uploads/willow_investment/willow_investment/localhost_projects_willow_investment__Laptop_with_MDPI_screen_1_cmufk2.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878598/uploads/willow_investment/willow_investment/localhost_projects_willow_investment__Laptop_with_MDPI_screen_2_j6bckl.png"}]},movynet:{projectName:"Movynet",projectDate:"2019",projectDisplayPhotoPath:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878515/uploads/movynet/Movynet/shazam-zachary-levi-jack-dylan-grazer_rlai8j.jpg",projectType:"Web Design, Development",projectPlatform:"Mobile, Tablet, Desktop",projectExternalLink:"//movynet.com",projectContextPhotoPath:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878493/uploads/movynet/movynet-context-2880x1800_izb4jr.png",projectDesc:"<p>Simple, fast, useful and as immersive as possible. It's all about entertainment, it should as well be entertaining.</p>\n        <p>Movynet is a simple and basic movie website I started personly to get know how some things in programming work. It's quite obvious that movies are one of the most entaintaining things and definitely worth some try.</p>",projectPlanning:"<p><strong>Planning, Design &amp; Development</strong> <br> When I started building Movynet, I was curious about some things in programming. I knew that one of the best ways to try them out was doing it with one of my favorite hobbies.</p>\n        <p>It took about 2 months to complete the project and during that period I got familiar with APIs, Software architectures, e.g MVC, design patterns and some frameworks.</p>\n        <p>Movynet's data are all sourced through the TMDB movie API, from which parts are stored in the database. All these where made possible with PHP and MYSQL. Movynet used the earliest and very first version of a framework I created - TM framework. The idea of the framework was to create classes, e.g Database, Datetime, Validation, Filesystem, String, Encryption classes, functions and general project configurations which allowed me scaffold newer projects in PHP even faster!</p>\n        <p>Movynet design was a mix of bootstrap, custom CSS and Jquery.</p>\n        <p>Movynet was also the first PWA - Progressive Web App I designed, understanding how service workers work.</p>",projectResult:'<p>"The colors, design and entire website works well", this has been one of the greatest projects I\'ve done in a short amount of time.</p>\n        <p>The outcome?, Very desireable.</p>',projectScreenshots:[{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878436/uploads/movynet/logos%2Cicons/movynet_logo_552x180_t5qp9h.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878446/uploads/movynet/Movynet/localhost_projects_movynet__Laptop_with_MDPI_screen_amrqdm.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878482/uploads/movynet/Movynet/localhost_projects_movynet_view.php_vwid_246_type_Movie_from_home_Laptop_with_MDPI_screen_xxw7mr.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878475/uploads/movynet/Movynet/localhost_projects_movynet_view.php_vwid_246_type_Movie_from_home_Laptop_with_MDPI_screen_1_gno03o.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878478/uploads/movynet/Movynet/localhost_projects_movynet_view.php_vwid_246_type_Movie_from_home_Laptop_with_MDPI_screen_4_xvp643.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878479/uploads/movynet/Movynet/localhost_projects_movynet_view.php_vwid_246_type_Movie_from_home_Laptop_with_MDPI_screen_3_j3otke.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878474/uploads/movynet/Movynet/localhost_projects_movynet_view.php_vwid_246_type_Movie_from_home_Laptop_with_MDPI_screen_2_trxvvh.png"}]},jovianbiz:{projectName:"Jovianbiz",projectDate:"2018",projectDisplayPhotoPath:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878357/uploads/jovianbiz/Jovianbiz/adult-artist-band-274406_doztd6.gif",projectType:"Web Design, Development",projectPlatform:"Mobile, Tablet, Desktop",projectExternalLink:"//jovianbiz.com",projectContextPhotoPath:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878442/uploads/jovianbiz/jovianbiz-context-2880x1800_mo6frd.png",projectDesc:"<p>Jovianbiz is a combination of two business segments.</p>\n        <p>The Jovian Hair is concerned with sales of hair, hair products and accessories, while, Jovian Events is concerned with providing event services.</p>\n        <p>The amazing thing about Jovianbiz is their passion. The believe they can bring out the beauty in every thing and that is why I was excited to work with them.</p>",projectPlanning:"<p><strong>Challenges</strong> <br> Finding the perfect way to combine and register two unrelated business segments and still making them stand out needed a little bit of magic, we had to draft possible ways to accomplish this. To solve this challenge we ended building a standard landing page for the both segments, creating a seperate subdomain and adding the links to each segment, task completed!</p>\n        <p><strong>Design, Development and problem solving</strong> <br> Selecting the right colors for a business websites with two segments is important. Professional colors like blue(#00A1FF), off-white(#EEEEEE) and black(#000000) were colors of choice.</p>\n        <p>We wanted the logo as simple as possible, so we sticked to a textbased logo, employing the Sofia Regular font.</p>\n        <p>The rest of the website needed something more bold, professional and modern, Lato was the best font to accomplish this.</p>\n        <p>As a business website we needed more images to help convey what was really happening on the site with lesser words.</p>",projectResult:'<p>"Wow!, this looks so beautiful and it is exactly what I needed.", Yes, once again our design strategy gave the best results!</p>',projectScreenshots:[{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878402/uploads/jovianbiz/Jovianbiz/www.localhost_projects_jovianbiz_index.php_Laptop_with_MDPI_screen_hh9dlt.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878434/uploads/jovianbiz/Jovianbiz/www.localhost_projects_jovianbiz_services__Laptop_with_MDPI_screen_p1lsg5.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878368/uploads/jovianbiz/Jovianbiz/www.localhost_projects_jovianbiz_hair__Laptop_with_MDPI_screen_rt0uiq.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878383/uploads/jovianbiz/Jovianbiz/www.localhost_projects_jovianbiz_hair_category.php_cat_h_h_w_Laptop_with_MDPI_screen_rfrh06.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878387/uploads/jovianbiz/Jovianbiz/www.localhost_projects_jovianbiz_hair_product.php_pid_16_Laptop_with_MDPI_screen_hm3fs8.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878439/uploads/jovianbiz/Jovianbiz/www.localhost_projects_jovianbiz_services__Laptop_with_MDPI_screen_1_ota9xq.png"}]},advbitcoinearns:{projectName:"AdvBitcoinEarns",projectDate:"2018",projectDisplayPhotoPath:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878368/uploads/advbitcoinearns/AdvbitcoinEarns/2847547_t3qy5n.png",projectType:"Web Design, Development",projectPlatform:"Mobile, Tablet, Desktop",projectExternalLink:"//advbitcoinearns.com",projectContextPhotoPath:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878368/uploads/advbitcoinearns/advbitcoinearns-context-2880x1800_fdfwxe.png",projectDesc:"<p>AdvBitcoinEarns is a bitcoin investment platform, created for the sole purpose of safe and secure bitcoin investments.</p>",projectPlanning:"<p>AdvBitoinEarns design and development was one of the quickest and fastest I have ever worked on. This was a result of the AdvBitcoinEarns group's need to launch the platform as quick as possible.</p>\n        <p>The entire project took about 3 weeks to complete, as there were ni frameworks or library used in the development of the project. The entire frontend was created with custom design codes.</p>\n        <p>The backend fully powered by PHP and a MySQL server utilizing APIs and method of communication.</p>",projectResult:"<p>Since AdvBitcoinEarns was one my earliest independent project developemt, I was able to understand most functionalities of a web app and better ways to improve functionality, design and development.</p>",projectScreenshots:[{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878327/uploads/advbitcoinearns/AdvbitcoinEarns/www.localhost_projects_advbitcoinearns__Laptop_with_MDPI_screen_fpa2aw.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878345/uploads/advbitcoinearns/AdvbitcoinEarns/www.localhost_projects_advbitcoinearns_signup.php_Laptop_with_MDPI_screen_jd6jfp.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878330/uploads/advbitcoinearns/AdvbitcoinEarns/www.localhost_projects_advbitcoinearns_login__Laptop_with_MDPI_screen_bzcuqr.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878332/uploads/advbitcoinearns/AdvbitcoinEarns/www.localhost_projects_advbitcoinearns_login_withdraw.php_Galaxy_S5_chg9jf.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878320/uploads/advbitcoinearns/AdvbitcoinEarns/www.localhost_projects_advbitcoinearns_index.php_Laptop_with_MDPI_screen_xo2lhz.png"}]},myafriconnect:{projectName:"MyAfriConnect",projectDate:"2018",projectDisplayPhotoPath:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878530/uploads/myafriconnect/MyAfriConnect/cellist-band-music-performance_ksg2t1.jpg",projectType:"Web Design, Development",projectPlatform:"Mobile, Tablet, Desktop",projectExternalLink:"//myafriconnect.com",projectContextPhotoPath:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878550/uploads/myafriconnect/myafriconnect-context-2880x1800_vnbybm.png",projectDesc:'<p>"Even though it is simple and quiet, we made great sounds!"</p>\n        <p>MyAfriconnect is an audio and video music download platform. The idea is to build a native music catalogue for everyone to download their favourite African music.</p>',projectPlanning:'<p><strong>Challenges</strong> <br> Designing and creating the native feel of an audio &amp; video downloading website was a bit challenging. The right colors, fonts and general design had to be in place.</p>\n        <p><strong>Design</strong> <br> We needed to download the right template from <a href="https://w3layouts.com/elvis-a-entertainment-category-flat-bootstrap-responsive-web-template/" rel="external" target="_blank">w3layouts.com</a>, few modifications where made on the UI to give it the native African look we combined the Ghanaian colors and used the <cite>CF Flowers by Destiny</cite> font.</p>\n        <p><strong>Development</strong> <br> To improve functionality light weight libraries like JQuery and and Bootstrap were implemented. The back end handled by PHP were used for dynamic rendering of pages and Database of choice was MySQL.</p>',projectResult:"<p>The final outcome was powerful platform that keeps visitors in a total state of excitement. We recorded a tremendous increase in the daily visits from most African country, now that's what I call satisfaction!</p>",projectScreenshots:[{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878519/uploads/myafriconnect/MyAfriConnect/127.0.0.1_5500__Laptop_with_MDPI_screen_2_z7pdqg.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878519/uploads/myafriconnect/MyAfriConnect/127.0.0.1_5500__Laptop_with_MDPI_screen_1_jehtbn.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878510/uploads/myafriconnect/MyAfriConnect/127.0.0.1_5500__Laptop_with_MDPI_screen_fnxbux.png"},{src:"https://res.cloudinary.com/dzw3gozjl/image/upload/v1592878530/uploads/myafriconnect/MyAfriConnect/127.0.0.1_5500_single.html_Laptop_with_MDPI_screen_n7u2sl.png"}]}},Z={components:{AppNav:_,ShowcaseContext:F,ShowcasePlanning:G,ShowcaseResult:U,AppFooter:T},watch:{$route:"fetchData"},methods:{fetchData(){const e=this.$route.params.pageId;Object.keys(K).includes(e)?this.showcase=K[e]:this.$router.push({name:"404"})}},created:function(){this.fetchData()},mounted:function(){AOS.init(),this.$ua.trackView("case")},data:function(){return{showcase:null,params:{description:"The design portfolio of Grant Adiele, an independent web designer and developer based in Nigeria.",site_name:"Grant Adiele",site_url:"https://grantadiele.web.app/#"+this.$route.path}}},head:{title:function(){return{inner:this.showcase.projectName,seperator:"",complement:this.params.site_name}},meta:function(){return[{name:"robots",content:"index"},{name:"description",content:this.params.description},{name:"author",content:this.params.site_name},{property:"og:title",content:this.params.title},{property:"og:type",content:"website"},{property:"og:image",content:this.params.site_url+"assets/icons/ga-icon-256x256.png"},{property:"og:image:type",content:"image/png"},{property:"og:image:width",content:"256"},{property:"og:image:height",content:"256"},{property:"og:url",content:this.params.site_url},{property:"og:description",content:this.params.description},{property:"og:locale",content:"en_US"},{property:"og:site_name",content:this.params.site_name},{property:"twitter:card",content:"summary"},{property:"twitter:creator",content:"@devgranty"},{property:"twitter:title",content:this.params.title},{property:"twitter:description",content:this.params.description},{property:"twitter:image",content:this.params.site_url+"assets/icons/ga-icon-256x256.png"}]},link:function(){return[{rel:"canonical",href:this.params.site_url}]}}},ee=Object(m.a)(Z,W,[],!1,null,null,null);ee.options.__file="src/pages/ShowcasePage/index.vue";var te=ee.exports,oe=function(){var e=this.$createElement,t=this._self._c||e;return t("div",[t("div",{staticStyle:{position:"absolute",left:"50%",top:"10%",width:"100%",margin:"0",padding:"0","margin-left":"-50%"}},[this._m(0),this._v(" "),t("p",{staticStyle:{"text-align":"center","font-weight":"900"}},[this._v("NOT FOUND")]),this._v(" "),t("p",{staticStyle:{padding:"20px",color:"#999","text-align":"center","line-height":"1.6"}},[this._v("You seem lost, that happens! Hold my hands let me take you right "),t("router-link",{staticStyle:{color:"green"},attrs:{to:"/"}},[this._v("home")])],1)])])};oe._withStripped=!0;var ae={data:function(){return{params:{title:"404"}}},mounted:function(){this.$ua.trackView("404")},head:{title:function(){return{inner:this.params.title,seperator:"",complement:"Not Found"}},meta:function(){return[{name:"robots",content:"noindex"}]}}},se=Object(m.a)(ae,oe,[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{staticStyle:{color:"#ddd","text-align":"center","font-size":"calc(10em + 2vw)"}},[this._v("4"),t("span",{staticStyle:{color:"rgba(255, 0, 0, 0.42)"}},[this._v("0")]),this._v("4")])}],!1,null,null,null);se.options.__file="src/pages/NotFoundPage.vue";var ne=se.exports;a.a.use(s.a),a.a.use(i.a),a.a.use(r.a);const ie=[{path:"/",name:"home",component:H},{path:"/case/:pageId",name:"case",component:te},{path:"*",name:"404",component:ne}],re=new s.a({routes:ie,mode:"hash",scrollBehavior:(e,t,o)=>e.hash?{selector:e.hash}:o||{x:0,y:0}});a.a.use(c.a,{appName:"Grant Adiele",appVersion:"1.1",trackingId:"UA-170094721-1",VueRouter:re});new a.a({router:re}).$mount("#app")}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL0hvbWVQYWdlL2luZGV4LnZ1ZT8wZGU2Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2xheW91dC9BcHBOYXYudnVlPzljMmYiLCJ3ZWJwYWNrOi8vL3NyYy9jb21wb25lbnRzL2xheW91dC9BcHBOYXYudnVlIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2xheW91dC9BcHBOYXYudnVlPzM4MjIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbGF5b3V0L0FwcE5hdi52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL0hvbWVQYWdlL0hvbWVIZXJvLnZ1ZT8wOTNkIiwid2VicGFjazovLy9zcmMvcGFnZXMvSG9tZVBhZ2UvSG9tZUhlcm8udnVlIiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9Ib21lUGFnZS9Ib21lSGVyby52dWU/MzYzNCIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvSG9tZVBhZ2UvSG9tZUhlcm8udnVlIiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9Ib21lUGFnZS9Ib21lTWUudnVlPzJmYzgiLCJ3ZWJwYWNrOi8vL3NyYy9wYWdlcy9Ib21lUGFnZS9Ib21lTWUudnVlIiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9Ib21lUGFnZS9Ib21lTWUudnVlPzgyYjQiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL0hvbWVQYWdlL0hvbWVNZS52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL0hvbWVQYWdlL0hvbWVTaG93Y2FzZS52dWU/NGU3OCIsIndlYnBhY2s6Ly8vc3JjL3BhZ2VzL0hvbWVQYWdlL0hvbWVTaG93Y2FzZS52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL0hvbWVQYWdlL0hvbWVTaG93Y2FzZS52dWU/NjZhYiIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvSG9tZVBhZ2UvSG9tZVNob3djYXNlLnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvSG9tZVBhZ2UvSG9tZVdoeW1lLnZ1ZT80MjI2Iiwid2VicGFjazovLy9zcmMvcGFnZXMvSG9tZVBhZ2UvSG9tZVdoeW1lLnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvSG9tZVBhZ2UvSG9tZVdoeW1lLnZ1ZT85ODU3Iiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9Ib21lUGFnZS9Ib21lV2h5bWUudnVlIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2xheW91dC9BcHBGb290ZXIudnVlP2VmNDUiLCJ3ZWJwYWNrOi8vL3NyYy9jb21wb25lbnRzL2xheW91dC9BcHBGb290ZXIudnVlIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2xheW91dC9BcHBGb290ZXIudnVlPzgyNTQiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbGF5b3V0L0FwcEZvb3Rlci52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL0hvbWVQYWdlL2luZGV4LnZ1ZT8yOGJmIiwid2VicGFjazovLy9zcmMvcGFnZXMvSG9tZVBhZ2UvaW5kZXgudnVlIiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9Ib21lUGFnZS9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL1Nob3djYXNlUGFnZS9pbmRleC52dWU/ZTlkYiIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvU2hvd2Nhc2VQYWdlL1Nob3djYXNlQ29udGV4dC52dWU/M2M4ZCIsIndlYnBhY2s6Ly8vc3JjL3BhZ2VzL1Nob3djYXNlUGFnZS9TaG93Y2FzZUNvbnRleHQudnVlIiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9TaG93Y2FzZVBhZ2UvU2hvd2Nhc2VDb250ZXh0LnZ1ZT84NjNiIiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9TaG93Y2FzZVBhZ2UvU2hvd2Nhc2VDb250ZXh0LnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvU2hvd2Nhc2VQYWdlL1Nob3djYXNlUGxhbm5pbmcudnVlP2EzZmUiLCJ3ZWJwYWNrOi8vL3NyYy9wYWdlcy9TaG93Y2FzZVBhZ2UvU2hvd2Nhc2VQbGFubmluZy52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL1Nob3djYXNlUGFnZS9TaG93Y2FzZVBsYW5uaW5nLnZ1ZT9iOWY4Iiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9TaG93Y2FzZVBhZ2UvU2hvd2Nhc2VQbGFubmluZy52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL1Nob3djYXNlUGFnZS9TaG93Y2FzZVJlc3VsdC52dWU/NDBhMSIsIndlYnBhY2s6Ly8vc3JjL3BhZ2VzL1Nob3djYXNlUGFnZS9TaG93Y2FzZVJlc3VsdC52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL1Nob3djYXNlUGFnZS9TaG93Y2FzZVJlc3VsdC52dWU/MDk2NCIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvU2hvd2Nhc2VQYWdlL1Nob3djYXNlUmVzdWx0LnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvZGF0YS9zaG93Y2FzZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL1Nob3djYXNlUGFnZS9pbmRleC52dWU/YWUxYiIsIndlYnBhY2s6Ly8vc3JjL3BhZ2VzL1Nob3djYXNlUGFnZS9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL1Nob3djYXNlUGFnZS9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL05vdEZvdW5kUGFnZS52dWU/OGZmZCIsIndlYnBhY2s6Ly8vc3JjL3BhZ2VzL05vdEZvdW5kUGFnZS52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL05vdEZvdW5kUGFnZS52dWU/MjY2ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvTm90Rm91bmRQYWdlLnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiXSwibmFtZXMiOlsid2VicGFja0pzb25wQ2FsbGJhY2siLCJkYXRhIiwibW9kdWxlSWQiLCJjaHVua0lkIiwiY2h1bmtJZHMiLCJtb3JlTW9kdWxlcyIsImV4ZWN1dGVNb2R1bGVzIiwiaSIsInJlc29sdmVzIiwibGVuZ3RoIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5zdGFsbGVkQ2h1bmtzIiwicHVzaCIsIm1vZHVsZXMiLCJwYXJlbnRKc29ucEZ1bmN0aW9uIiwic2hpZnQiLCJkZWZlcnJlZE1vZHVsZXMiLCJhcHBseSIsImNoZWNrRGVmZXJyZWRNb2R1bGVzIiwicmVzdWx0IiwiZGVmZXJyZWRNb2R1bGUiLCJmdWxmaWxsZWQiLCJqIiwiZGVwSWQiLCJzcGxpY2UiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwicyIsImluc3RhbGxlZE1vZHVsZXMiLCIwIiwiZXhwb3J0cyIsIm1vZHVsZSIsImwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicCIsImpzb25wQXJyYXkiLCJ3aW5kb3ciLCJvbGRKc29ucEZ1bmN0aW9uIiwic2xpY2UiLCJyZW5kZXIiLCJfaCIsInRoaXMiLCIkY3JlYXRlRWxlbWVudCIsIl9jIiwiX3NlbGYiLCJfdiIsImRpcmVjdGl2ZXMiLCJyYXdOYW1lIiwiX3dpdGhTdHJpcHBlZCIsIl92bSIsInN0YXRpY0NsYXNzIiwic2VsZWN0b3IiLCJjbGFzcyIsImV4cHJlc3Npb24iLCJhdHRycyIsInRvIiwic3JjIiwibmF2TG9nb1BhdGgiLCJhbHQiLCJ3aWR0aCIsImhlaWdodCIsInJvbGUiLCJfbCIsIm5hdmJhckxpbmtzIiwibmF2YmFyTGluayIsInRpdGxlIiwibGluayIsIl9zIiwiaWQiLCJvbiIsImNsaWNrIiwiJGV2ZW50Iiwic2hvd01lbnUiLCJuYXRpdmVPbiIsIm1ldGhvZHMiLCJwcmV2U2Nyb2xsUG9zIiwicGFnZVlPZmZzZXQiLCJvbnNjcm9sbCIsImN1cnJlbnRTY3JvbGxQb3MiLCJuYXZiYXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJzdHlsZSIsInRvcCIsImNyZWF0ZWQiLCJoaWRlTmF2IiwiY29tcG9uZW50Iiwib3B0aW9ucyIsIl9fZmlsZSIsIl9tIiwicHJvamVjdHMiLCJwcm9qZWN0IiwiaW1hZ2VQYXRoIiwiZGV0YWlscyIsInR5cGUiLCJjb2xvciIsInJlYXNvbnMiLCJyZWFzb24iLCJpY29uQ2xhc3MiLCJjb21tZW50IiwiY29sdW1uQ2xhc3MiLCJocmVmIiwiY29tcG9uZW50cyIsIkFwcE5hdiIsIkhvbWVIZXJvIiwiSG9tZU1lIiwiSG9tZVNob3djYXNlIiwiSG9tZVdoeW1lIiwiQXBwRm9vdGVyIiwicGFyYW1zIiwiZGVzY3JpcHRpb24iLCJzaXRlX25hbWUiLCJzaXRlX3VybCIsIm1vdW50ZWQiLCJwYXJ0aWNsZXNKUyIsImxvYWQiLCJlbGVtIiwiRmxpY2tpdHkiLCJjZWxsQWxpZ24iLCJjb250YWluIiwid3JhcEFyb3VuZCIsImF1dG9QbGF5IiwiQU9TIiwiaW5pdCIsIiR1YSIsInRyYWNrVmlldyIsImhlYWQiLCJpbm5lciIsInNlcGVyYXRvciIsImNvbXBsZW1lbnQiLCJtZXRhIiwiY29udGVudCIsInJlbCIsInNob3djYXNlIiwicHJvamVjdE5hbWUiLCJwcm9qZWN0RGF0ZSIsInByb2plY3REaXNwbGF5UGhvdG9QYXRoIiwicHJvamVjdFR5cGUiLCJwcm9qZWN0UGxhdGZvcm0iLCJwcm9qZWN0RXh0ZXJuYWxMaW5rIiwicHJvamVjdENvbnRleHRQaG90b1BhdGgiLCJkb21Qcm9wcyIsImlubmVySFRNTCIsInByb2plY3REZXNjIiwicHJvamVjdFBsYW5uaW5nIiwicHJvamVjdFNjcmVlbnNob3RzIiwicHJvamVjdFJlc3VsdCIsInRhcmdldCIsIl90IiwicHJvcHMiLCJTdHJpbmciLCJyZXF1aXJlZCIsInByb2plY3RTY3JlZW5zaG90IiwiQXJyYXkiLCJTaG93Y2FzZUNvbnRleHQiLCJTaG93Y2FzZVBsYW5uaW5nIiwiU2hvd2Nhc2VSZXN1bHQiLCJ3YXRjaCIsInBhZ2VJZCIsIiRyb3V0ZSIsImtleXMiLCJzaG93Y2FzZXMiLCJpbmNsdWRlcyIsIiRyb3V0ZXIiLCJmZXRjaERhdGEiLCJwYXRoIiwic3RhdGljU3R5bGUiLCJwb3NpdGlvbiIsImxlZnQiLCJtYXJnaW4iLCJwYWRkaW5nIiwidXNlIiwicm91dGVzIiwiSG9tZVBhZ2UiLCJTaG93Y2FzZVBhZ2UiLCJOb3RGb3VuZFBhZ2UiLCJyb3V0ZXIiLCJzY3JvbGxCZWhhdmlvciIsImZyb20iLCJzYXZlZFBvc2l0aW9uIiwiaGFzaCIsIngiLCJ5IiwiYXBwTmFtZSIsImFwcFZlcnNpb24iLCJ0cmFja2luZ0lkIiwiVnVlUm91dGVyIiwiJG1vdW50Il0sIm1hcHBpbmdzIjoiYUFDRSxTQUFTQSxFQUFxQkMsR0FRN0IsSUFQQSxJQU1JQyxFQUFVQyxFQU5WQyxFQUFXSCxFQUFLLEdBQ2hCSSxFQUFjSixFQUFLLEdBQ25CSyxFQUFpQkwsRUFBSyxHQUlITSxFQUFJLEVBQUdDLEVBQVcsR0FDcENELEVBQUlILEVBQVNLLE9BQVFGLElBQ3pCSixFQUFVQyxFQUFTRyxHQUNoQkcsT0FBT0MsVUFBVUMsZUFBZUMsS0FBS0MsRUFBaUJYLElBQVlXLEVBQWdCWCxJQUNwRkssRUFBU08sS0FBS0QsRUFBZ0JYLEdBQVMsSUFFeENXLEVBQWdCWCxHQUFXLEVBRTVCLElBQUlELEtBQVlHLEVBQ1pLLE9BQU9DLFVBQVVDLGVBQWVDLEtBQUtSLEVBQWFILEtBQ3BEYyxFQUFRZCxHQUFZRyxFQUFZSCxJQUtsQyxJQUZHZSxHQUFxQkEsRUFBb0JoQixHQUV0Q08sRUFBU0MsUUFDZEQsRUFBU1UsT0FBVFYsR0FPRCxPQUhBVyxFQUFnQkosS0FBS0ssTUFBTUQsRUFBaUJiLEdBQWtCLElBR3ZEZSxJQUVSLFNBQVNBLElBRVIsSUFEQSxJQUFJQyxFQUNJZixFQUFJLEVBQUdBLEVBQUlZLEVBQWdCVixPQUFRRixJQUFLLENBRy9DLElBRkEsSUFBSWdC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WUFBYSxxQkFHakIsQ0FaUXRELEtBYUZJLEdBQUcsS0FDUEYsRUFBRyxPQUFRLENBQUUySCxZQUFhLENBQUV2RSxNQUFPLDBCQUE2QixDQWQxRHRELEtBZUFJLEdBQUcsT0FmSEosS0FpQkZJLEdBQUcsVUc3RGIsRUFDQSxLQUNBLEtBQ0EsTUF1QkYsR0FBVTBDLFFBQVFDLE9BQVMsNkJBQ1osVSxRQzVCZixJQUFJbUYsSUFBSSxLQUNSLElBQUlBLElBQUksS0FDUixJQUFJQSxJQUFJLEtBRVIsTUFBTUMsR0FBUyxDQUNYLENBQUNQLEtBQU0sSUFBS3ZKLEtBQU0sT0FBUXdFLFVBQVd1RixHQUNyQyxDQUFDUixLQUFNLGdCQUFpQnZKLEtBQU0sT0FBUXdFLFVBQVd3RixJQUNqRCxDQUFDVCxLQUFNLElBQUt2SixLQUFNLE1BQU93RSxVQUFXeUYsS0FHbENDLEdBQVMsSUFBSSxJQUFVLENBQ3pCSixVQUNBbkosS0FBTSxPQUNOd0osZUFBYyxDQUFDMUgsRUFBSTJILEVBQU1DLElBQ3ZCNUgsRUFBRzZILEtBQ0MsQ0FBRWpJLFNBQVVJLEVBQUc2SCxNQUNaRCxHQUdILENBQUVFLEVBQUcsRUFBR0MsRUFBRyxLQUtyQixJQUFJWCxJQUFJLElBQWMsQ0FDckJZLFFBQVMsZUFDVEMsV0FBWSxNQUNaQyxXQUFZLGlCQUNaQyxVQUFXVixLQUdILElBQUksSUFBSSxDQUNiQSxZQUNEVyxPQUFPIiwiZmlsZSI6Im1haW4uYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gaW5zdGFsbCBhIEpTT05QIGNhbGxiYWNrIGZvciBjaHVuayBsb2FkaW5nXG4gXHRmdW5jdGlvbiB3ZWJwYWNrSnNvbnBDYWxsYmFjayhkYXRhKSB7XG4gXHRcdHZhciBjaHVua0lkcyA9IGRhdGFbMF07XG4gXHRcdHZhciBtb3JlTW9kdWxlcyA9IGRhdGFbMV07XG4gXHRcdHZhciBleGVjdXRlTW9kdWxlcyA9IGRhdGFbMl07XG5cbiBcdFx0Ly8gYWRkIFwibW9yZU1vZHVsZXNcIiB0byB0aGUgbW9kdWxlcyBvYmplY3QsXG4gXHRcdC8vIHRoZW4gZmxhZyBhbGwgXCJjaHVua0lkc1wiIGFzIGxvYWRlZCBhbmQgZmlyZSBjYWxsYmFja1xuIFx0XHR2YXIgbW9kdWxlSWQsIGNodW5rSWQsIGkgPSAwLCByZXNvbHZlcyA9IFtdO1xuIFx0XHRmb3IoO2kgPCBjaHVua0lkcy5sZW5ndGg7IGkrKykge1xuIFx0XHRcdGNodW5rSWQgPSBjaHVua0lkc1tpXTtcbiBcdFx0XHRpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSAmJiBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0pIHtcbiBcdFx0XHRcdHJlc29sdmVzLnB1c2goaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdWzBdKTtcbiBcdFx0XHR9XG4gXHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gMDtcbiBcdFx0fVxuIFx0XHRmb3IobW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcbiBcdFx0XHRpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuIFx0XHRcdFx0bW9kdWxlc1ttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG4gXHRcdFx0fVxuIFx0XHR9XG4gXHRcdGlmKHBhcmVudEpzb25wRnVuY3Rpb24pIHBhcmVudEpzb25wRnVuY3Rpb24oZGF0YSk7XG5cbiBcdFx0d2hpbGUocmVzb2x2ZXMubGVuZ3RoKSB7XG4gXHRcdFx0cmVzb2x2ZXMuc2hpZnQoKSgpO1xuIFx0XHR9XG5cbiBcdFx0Ly8gYWRkIGVudHJ5IG1vZHVsZXMgZnJvbSBsb2FkZWQgY2h1bmsgdG8gZGVmZXJyZWQgbGlzdFxuIFx0XHRkZWZlcnJlZE1vZHVsZXMucHVzaC5hcHBseShkZWZlcnJlZE1vZHVsZXMsIGV4ZWN1dGVNb2R1bGVzIHx8IFtdKTtcblxuIFx0XHQvLyBydW4gZGVmZXJyZWQgbW9kdWxlcyB3aGVuIGFsbCBjaHVua3MgcmVhZHlcbiBcdFx0cmV0dXJuIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCk7XG4gXHR9O1xuIFx0ZnVuY3Rpb24gY2hlY2tEZWZlcnJlZE1vZHVsZXMoKSB7XG4gXHRcdHZhciByZXN1bHQ7XG4gXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBkZWZlcnJlZE1vZHVsZXMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHR2YXIgZGVmZXJyZWRNb2R1bGUgPSBkZWZlcnJlZE1vZHVsZXNbaV07XG4gXHRcdFx0dmFyIGZ1bGZpbGxlZCA9IHRydWU7XG4gXHRcdFx0Zm9yKHZhciBqID0gMTsgaiA8IGRlZmVycmVkTW9kdWxlLmxlbmd0aDsgaisrKSB7XG4gXHRcdFx0XHR2YXIgZGVwSWQgPSBkZWZlcnJlZE1vZHVsZVtqXTtcbiBcdFx0XHRcdGlmKGluc3RhbGxlZENodW5rc1tkZXBJZF0gIT09IDApIGZ1bGZpbGxlZCA9IGZhbHNlO1xuIFx0XHRcdH1cbiBcdFx0XHRpZihmdWxmaWxsZWQpIHtcbiBcdFx0XHRcdGRlZmVycmVkTW9kdWxlcy5zcGxpY2UoaS0tLCAxKTtcbiBcdFx0XHRcdHJlc3VsdCA9IF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gZGVmZXJyZWRNb2R1bGVbMF0pO1xuIFx0XHRcdH1cbiBcdFx0fVxuXG4gXHRcdHJldHVybiByZXN1bHQ7XG4gXHR9XG5cbiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4gXHQvLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbiBcdC8vIFByb21pc2UgPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG4gXHR2YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuIFx0XHQwOiAwXG4gXHR9O1xuXG4gXHR2YXIgZGVmZXJyZWRNb2R1bGVzID0gW107XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cbiBcdHZhciBqc29ucEFycmF5ID0gd2luZG93W1wid2VicGFja0pzb25wXCJdID0gd2luZG93W1wid2VicGFja0pzb25wXCJdIHx8IFtdO1xuIFx0dmFyIG9sZEpzb25wRnVuY3Rpb24gPSBqc29ucEFycmF5LnB1c2guYmluZChqc29ucEFycmF5KTtcbiBcdGpzb25wQXJyYXkucHVzaCA9IHdlYnBhY2tKc29ucENhbGxiYWNrO1xuIFx0anNvbnBBcnJheSA9IGpzb25wQXJyYXkuc2xpY2UoKTtcbiBcdGZvcih2YXIgaSA9IDA7IGkgPCBqc29ucEFycmF5Lmxlbmd0aDsgaSsrKSB3ZWJwYWNrSnNvbnBDYWxsYmFjayhqc29ucEFycmF5W2ldKTtcbiBcdHZhciBwYXJlbnRKc29ucEZ1bmN0aW9uID0gb2xkSnNvbnBGdW5jdGlvbjtcblxuXG4gXHQvLyBhZGQgZW50cnkgbW9kdWxlIHRvIGRlZmVycmVkIGxpc3RcbiBcdGRlZmVycmVkTW9kdWxlcy5wdXNoKFsxMSwxXSk7XG4gXHQvLyBydW4gZGVmZXJyZWQgbW9kdWxlcyB3aGVuIHJlYWR5XG4gXHRyZXR1cm4gY2hlY2tEZWZlcnJlZE1vZHVsZXMoKTtcbiIsInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXG4gICAgXCJkaXZcIixcbiAgICBbXG4gICAgICBfYyhcImFwcC1uYXZcIiksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXCJob21lLWhlcm9cIiksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXG4gICAgICAgIFwiZGl2XCIsXG4gICAgICAgIHsgZGlyZWN0aXZlczogW3sgbmFtZTogXCJzY3JvbGwtc3B5XCIsIHJhd05hbWU6IFwidi1zY3JvbGwtc3B5XCIgfV0gfSxcbiAgICAgICAgW1xuICAgICAgICAgIF9jKFwiaG9tZS1tZVwiKSxcbiAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgIF9jKFwiaG9tZS1zaG93Y2FzZVwiKSxcbiAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgIF9jKFwiaG9tZS13aHltZVwiKSxcbiAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgIF9jKFwiYXBwLWZvb3RlclwiKVxuICAgICAgICBdLFxuICAgICAgICAxXG4gICAgICApXG4gICAgXSxcbiAgICAxXG4gIClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF9jKFxuICAgIFwiaGVhZGVyXCIsXG4gICAge1xuICAgICAgc3RhdGljQ2xhc3M6XG4gICAgICAgIFwibmF2YmFyIGFuaW1hdGVfX2FuaW1hdGVkIGFuaW1hdGVfX3NsaWRlSW5Eb3duIGFuaW1hdGVfX2RlbGF5LTNzXCJcbiAgICB9LFxuICAgIFtcbiAgICAgIF9jKFxuICAgICAgICBcImRpdlwiLFxuICAgICAgICB7XG4gICAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBuYW1lOiBcInNjcm9sbC1zcHktYWN0aXZlXCIsXG4gICAgICAgICAgICAgIHJhd05hbWU6IFwidi1zY3JvbGwtc3B5LWFjdGl2ZVwiLFxuICAgICAgICAgICAgICB2YWx1ZTogeyBzZWxlY3RvcjogXCIuc2Nyb2xsc3B5LWZpbmRcIiwgY2xhc3M6IFwic2Nyb2xsc3B5LWFjdGl2ZVwiIH0sXG4gICAgICAgICAgICAgIGV4cHJlc3Npb246XG4gICAgICAgICAgICAgICAgXCJ7c2VsZWN0b3I6ICcuc2Nyb2xsc3B5LWZpbmQnLCBjbGFzczogJ3Njcm9sbHNweS1hY3RpdmUnfVwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICBzdGF0aWNDbGFzczogXCJuYXZiYXItY29udGFpbmVyXCJcbiAgICAgICAgfSxcbiAgICAgICAgW1xuICAgICAgICAgIF9jKFwicm91dGVyLWxpbmtcIiwgeyBhdHRyczogeyB0bzogXCIvXCIgfSB9LCBbXG4gICAgICAgICAgICBfYyhcImltZ1wiLCB7XG4gICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcIm5hdmJhci1icmFuZC1sb2dvXCIsXG4gICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgc3JjOiBfdm0ubmF2TG9nb1BhdGgsXG4gICAgICAgICAgICAgICAgYWx0OiBcImdhXCIsXG4gICAgICAgICAgICAgICAgd2lkdGg6IFwiNTBcIixcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IFwiNTBcIlxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgIF0pLFxuICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgX2MoXG4gICAgICAgICAgICBcIm5hdlwiLFxuICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJuYXZiYXItbGlua3NcIiwgYXR0cnM6IHsgcm9sZTogXCJuYXZpZ2F0aW9uXCIgfSB9LFxuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICBcInVsXCIsXG4gICAgICAgICAgICAgICAgX3ZtLl9sKF92bS5uYXZiYXJMaW5rcywgZnVuY3Rpb24obmF2YmFyTGluaykge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKFxuICAgICAgICAgICAgICAgICAgICBcImxpXCIsXG4gICAgICAgICAgICAgICAgICAgIHsga2V5OiBuYXZiYXJMaW5rLnRpdGxlIH0sXG4gICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicm91dGVyLWxpbmtcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwic2Nyb2xsc3B5LWZpbmRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdG86IG5hdmJhckxpbmsubGluayB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdihfdm0uX3MobmF2YmFyTGluay50aXRsZSkpXVxuICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIDBcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgXVxuICAgICAgICAgICksXG4gICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICBfYyhcbiAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgIFwiYnV0dG9uXCIsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwibmF2YmFyLW1lbnUtYnRuXCIsXG4gICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICBpZDogXCJuYXZiYXJNb2RhbEJ0blwiLFxuICAgICAgICAgICAgICAgICAgICByb2xlOiBcImJ1dHRvblwiLFxuICAgICAgICAgICAgICAgICAgICBcImFyaWEtaGFzcG9wdXBcIjogXCJ0cnVlXCJcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgX3ZtLnNob3dNZW51ID0gIV92bS5zaG93TWVudVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBbX3ZtLl92KF92bS5fcyhfdm0uc2hvd01lbnUgPyBcIkNsb3NlXCIgOiBcIk1lbnVcIikpXVxuICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICBcInRyYW5zaXRpb25cIixcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICBcImVudGVyLWFjdGl2ZS1jbGFzc1wiOiBcImFuaW1hdGVfX2FuaW1hdGVkIGFuaW1hdGVfX2ZsaXBJbllcIixcbiAgICAgICAgICAgICAgICAgICAgXCJsZWF2ZS1hY3RpdmUtY2xhc3NcIjogXCJhbmltYXRlX19hbmltYXRlZCBhbmltYXRlX19mbGlwT3V0WVwiXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgXCJuYXZcIixcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJzaG93XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6IFwidi1zaG93XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uc2hvd01lbnUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwic2hvd01lbnVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwibmF2YmFyLW1vZGFsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBcIm5hdmJhck1vZGFsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICByb2xlOiBcIm1lbnVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiYXJpYS1tb2RhbFwiOiBcInRydWVcIlxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJ1bFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJzY3JvbGwtc3B5LWFjdGl2ZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogXCJ2LXNjcm9sbC1zcHktYWN0aXZlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogXCIuc2Nyb2xsc3B5LWZpbmRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IFwic2Nyb2xsc3B5LWFjdGl2ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJ7c2VsZWN0b3I6ICcuc2Nyb2xsc3B5LWZpbmQnLCBjbGFzczogJ3Njcm9sbHNweS1hY3RpdmUnfVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9sKF92bS5uYXZiYXJMaW5rcywgZnVuY3Rpb24obmF2YmFyTGluaykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsaVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsga2V5OiBuYXZiYXJMaW5rLnRpdGxlIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwicm91dGVyLWxpbmtcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcInNjcm9sbHNweS1maW5kXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdG86IG5hdmJhckxpbmsubGluayB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hdGl2ZU9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5zaG93TWVudSA9ICFfdm0uc2hvd01lbnVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKG5hdmJhckxpbmsudGl0bGUpKV1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAwXG4gICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgMVxuICAgICAgICAgIClcbiAgICAgICAgXSxcbiAgICAgICAgMVxuICAgICAgKVxuICAgIF1cbiAgKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsIjx0ZW1wbGF0ZT5cclxuICAgIDxoZWFkZXIgY2xhc3M9XCJuYXZiYXIgYW5pbWF0ZV9fYW5pbWF0ZWQgYW5pbWF0ZV9fc2xpZGVJbkRvd24gYW5pbWF0ZV9fZGVsYXktM3NcIj5cclxuICAgICAgICA8ZGl2IHYtc2Nyb2xsLXNweS1hY3RpdmU9XCJ7c2VsZWN0b3I6ICcuc2Nyb2xsc3B5LWZpbmQnLCBjbGFzczogJ3Njcm9sbHNweS1hY3RpdmUnfVwiIGNsYXNzPVwibmF2YmFyLWNvbnRhaW5lclwiPlxyXG4gICAgICAgICAgICA8cm91dGVyLWxpbmsgdG89XCIvXCI+PGltZyBjbGFzcz1cIm5hdmJhci1icmFuZC1sb2dvXCIgdi1iaW5kOnNyYz1cIm5hdkxvZ29QYXRoXCIgYWx0PVwiZ2FcIiB3aWR0aD1cIjUwXCIgaGVpZ2h0PVwiNTBcIj48L3JvdXRlci1saW5rPlxyXG4gICAgICAgICAgICA8bmF2IGNsYXNzPVwibmF2YmFyLWxpbmtzXCIgcm9sZT1cIm5hdmlnYXRpb25cIj5cclxuICAgICAgICAgICAgICAgIDx1bD5cclxuICAgICAgICAgICAgICAgICAgICA8bGkgdi1mb3I9XCJuYXZiYXJMaW5rIGluIG5hdmJhckxpbmtzXCIgdi1iaW5kOmtleT1cIm5hdmJhckxpbmsudGl0bGVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHJvdXRlci1saW5rIHYtYmluZDp0bz1cIm5hdmJhckxpbmsubGlua1wiIGNsYXNzPVwic2Nyb2xsc3B5LWZpbmRcIj57eyBuYXZiYXJMaW5rLnRpdGxlIH19PC9yb3V0ZXItbGluaz5cclxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICAgICAgPC91bD5cclxuICAgICAgICAgICAgPC9uYXY+XHJcbiAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIHYtb246Y2xpY2s9XCJzaG93TWVudSA9ICFzaG93TWVudVwiIGlkPVwibmF2YmFyTW9kYWxCdG5cIiBjbGFzcz1cIm5hdmJhci1tZW51LWJ0blwiIHJvbGU9XCJidXR0b25cIiBhcmlhLWhhc3BvcHVwPVwidHJ1ZVwiPnt7IHNob3dNZW51ID8gJ0Nsb3NlJyA6ICdNZW51JyB9fTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPHRyYW5zaXRpb24gZW50ZXItYWN0aXZlLWNsYXNzPVwiYW5pbWF0ZV9fYW5pbWF0ZWQgYW5pbWF0ZV9fZmxpcEluWVwiIGxlYXZlLWFjdGl2ZS1jbGFzcz1cImFuaW1hdGVfX2FuaW1hdGVkIGFuaW1hdGVfX2ZsaXBPdXRZXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPG5hdiB2LXNob3c9XCJzaG93TWVudVwiIGNsYXNzPVwibmF2YmFyLW1vZGFsXCIgaWQ9XCJuYXZiYXJNb2RhbFwiIHJvbGU9XCJtZW51XCIgYXJpYS1tb2RhbD1cInRydWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHVsIHYtc2Nyb2xsLXNweS1hY3RpdmU9XCJ7c2VsZWN0b3I6ICcuc2Nyb2xsc3B5LWZpbmQnLCBjbGFzczogJ3Njcm9sbHNweS1hY3RpdmUnfVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIHYtZm9yPVwibmF2YmFyTGluayBpbiBuYXZiYXJMaW5rc1wiIHYtYmluZDprZXk9XCJuYXZiYXJMaW5rLnRpdGxlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJvdXRlci1saW5rIHYtYmluZDp0bz1cIm5hdmJhckxpbmsubGlua1wiIHYtb246Y2xpY2submF0aXZlPVwic2hvd01lbnUgPSAhc2hvd01lbnVcIiBjbGFzcz1cInNjcm9sbHNweS1maW5kXCI+e3sgbmF2YmFyTGluay50aXRsZSB9fTwvcm91dGVyLWxpbms+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvbmF2PlxyXG4gICAgICAgICAgICAgICAgPC90cmFuc2l0aW9uPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvaGVhZGVyPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHN0eWxlPlxyXG5cclxuPC9zdHlsZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGRhdGE6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBuYXZMb2dvUGF0aDogJy4vYXNzZXRzL2xvZ29zL2dhLWxvZ28tNjAweDYwMC5wbmcnLFxyXG4gICAgICAgICAgICBuYXZiYXJMaW5rczogW1xyXG4gICAgICAgICAgICAgICAge2xpbms6ICcvI21lJywgdGl0bGU6ICdNZSd9LFxyXG4gICAgICAgICAgICAgICAge2xpbms6ICcvI3Nob3djYXNlJywgdGl0bGU6ICdTaG93Y2FzZSd9LFxyXG4gICAgICAgICAgICAgICAge2xpbms6ICcvI3doeW1lJywgdGl0bGU6ICdXaHkgTWUnfSxcclxuICAgICAgICAgICAgICAgIHtsaW5rOiAnLyNjb250YWN0JywgdGl0bGU6ICdDb250YWN0J31cclxuICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgc2hvd01lbnU6IGZhbHNlLFxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICAgIGhpZGVOYXYgKCkge1xyXG4gICAgICAgICAgICB2YXIgcHJldlNjcm9sbFBvcyA9IHdpbmRvdy5wYWdlWU9mZnNldDtcclxuICAgICAgICAgICAgd2luZG93Lm9uc2Nyb2xsID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgY3VycmVudFNjcm9sbFBvcyA9IHdpbmRvdy5wYWdlWU9mZnNldDtcclxuICAgICAgICAgICAgICAgIHZhciBuYXZiYXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmF2YmFyJylcclxuICAgICAgICAgICAgICAgIGlmKHByZXZTY3JvbGxQb3MgPiBjdXJyZW50U2Nyb2xsUG9zKXtcclxuICAgICAgICAgICAgICAgICAgICBuYXZiYXIuc3R5bGUudG9wID0gXCIwXCI7XHJcbiAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICBuYXZiYXIuc3R5bGUudG9wID0gXCItMTAwcHhcIjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHByZXZTY3JvbGxQb3MgPSBjdXJyZW50U2Nyb2xsUG9zO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBjcmVhdGVkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5oaWRlTmF2KClcclxuICAgIH0sXHJcbn1cclxuPC9zY3JpcHQ+IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0FwcE5hdi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9BcHBOYXYudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9BcHBOYXYudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWQ5YzI4MmYyJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL0FwcE5hdi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL0FwcE5hdi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkM6XFxcXFBST0pFQ1RTXFxcXGdyYW50YWRpZWxlLXdlYnBhY2tcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1ob3QtcmVsb2FkLWFwaVxcXFxkaXN0XFxcXGluZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnZDljMjgyZjInKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnZDljMjgyZjInLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnZDljMjgyZjInLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL0FwcE5hdi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9ZDljMjgyZjImXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignZDljMjgyZjInLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInNyYy9jb21wb25lbnRzL2xheW91dC9BcHBOYXYudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfdm0uX20oMClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXG4gIGZ1bmN0aW9uKCkge1xuICAgIHZhciBfdm0gPSB0aGlzXG4gICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gICAgcmV0dXJuIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiaGVyb1wiLCBhdHRyczogeyBpZDogXCJteUhlcm9cIiB9IH0sIFtcbiAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiaGVyby13ZWxjb21lLWJvYXJkXCIgfSwgW1xuICAgICAgICBfYyhcImgxXCIsIHsgc3RhdGljQ2xhc3M6IFwiYW5pbWF0ZV9fYW5pbWF0ZWQgYW5pbWF0ZV9fYm91bmNlSW5Eb3duXCIgfSwgW1xuICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgIFwiV2ViIERlc2lnbmVyLCBEZXZlbG9wZXIgJiBNYWNoaW5lIExlYXJuaW5nIGVudGh1c2lhc3QgaW4gTmlnZXJpYS5cIlxuICAgICAgICAgIClcbiAgICAgICAgXSlcbiAgICAgIF0pLFxuICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgIF9jKFxuICAgICAgICBcImRpdlwiLFxuICAgICAgICB7XG4gICAgICAgICAgc3RhdGljQ2xhc3M6XG4gICAgICAgICAgICBcImFuaW1hdGVfX2FuaW1hdGVkIGFuaW1hdGVfX2JvdW5jZSBhbmltYXRlX19pbmZpbml0ZSBhbmltYXRlX19kZWxheS00cyBoZXJvLXNjcm9sbC1kb3duIGljb24tZ3JhZGllbnRcIlxuICAgICAgICB9LFxuICAgICAgICBbXG4gICAgICAgICAgX2MoXCJpXCIsIHtcbiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImZhcyBmYS1jaGV2cm9uLXVwXCIsXG4gICAgICAgICAgICBhdHRyczogeyBcImFyaWEtaGlkZGVuXCI6IFwidHJ1ZVwiIH1cbiAgICAgICAgICB9KVxuICAgICAgICBdXG4gICAgICApXG4gICAgXSlcbiAgfVxuXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCI8dGVtcGxhdGU+XHJcbiAgICA8ZGl2IGNsYXNzPVwiaGVyb1wiIGlkPVwibXlIZXJvXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImhlcm8td2VsY29tZS1ib2FyZFwiPlxyXG4gICAgICAgICAgICA8aDEgY2xhc3M9XCJhbmltYXRlX19hbmltYXRlZCBhbmltYXRlX19ib3VuY2VJbkRvd25cIj5XZWIgRGVzaWduZXIsIERldmVsb3BlciAmYW1wOyBNYWNoaW5lIExlYXJuaW5nIGVudGh1c2lhc3QgaW4gTmlnZXJpYS48L2gxPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJhbmltYXRlX19hbmltYXRlZCBhbmltYXRlX19ib3VuY2UgYW5pbWF0ZV9faW5maW5pdGUgYW5pbWF0ZV9fZGVsYXktNHMgaGVyby1zY3JvbGwtZG93biBpY29uLWdyYWRpZW50XCI+PGkgY2xhc3M9XCJmYXMgZmEtY2hldnJvbi11cFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvaT48L2Rpdj5cclxuICAgIDwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHN0eWxlPlxyXG5cclxuPC9zdHlsZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIFxyXG59XHJcbjwvc2NyaXB0PiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9Ib21lSGVyby52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9Ib21lSGVyby52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL0hvbWVIZXJvLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1jYTRlMjBmNCZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9Ib21lSGVyby52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL0hvbWVIZXJvLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiQzpcXFxcUFJPSkVDVFNcXFxcZ3JhbnRhZGllbGUtd2VicGFja1xcXFxub2RlX21vZHVsZXNcXFxcdnVlLWhvdC1yZWxvYWQtYXBpXFxcXGRpc3RcXFxcaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCdjYTRlMjBmNCcpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCdjYTRlMjBmNCcsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCdjYTRlMjBmNCcsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vSG9tZUhlcm8udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWNhNGUyMGY0JlwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhcGkucmVyZW5kZXIoJ2NhNGUyMGY0Jywge1xuICAgICAgICByZW5kZXI6IHJlbmRlcixcbiAgICAgICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnNcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJzcmMvcGFnZXMvSG9tZVBhZ2UvSG9tZUhlcm8udnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcInNlY3Rpb25cIiwgeyBzdGF0aWNDbGFzczogXCJwYWdlLXNlY3Rpb24gdmFyaWF0aW9uLXNlY3Rpb25cIiB9LCBbXG4gICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJpbm5lci1jb250YWluZXJcIiB9LCBbXG4gICAgICBfYyhcbiAgICAgICAgXCJoMVwiLFxuICAgICAgICB7IHN0YXRpY0NsYXNzOiBcInNlY3Rpb24taGVhZGluZ1wiLCBhdHRyczogeyBpZDogXCJtZVwiIH0gfSxcbiAgICAgICAgW1xuICAgICAgICAgIF92bS5fdihcIk1lIFwiKSxcbiAgICAgICAgICBfYyhcbiAgICAgICAgICAgIFwicm91dGVyLWxpbmtcIixcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwic2VjdGlvbi1hbmNob3ItaWQgaWNvbi1ncmFkaWVudFwiLFxuICAgICAgICAgICAgICBhdHRyczogeyB0bzogXCIjbWVcIiB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICBfYyhcImlcIiwge1xuICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImZhcyBmYS1saW5rXCIsXG4gICAgICAgICAgICAgICAgYXR0cnM6IHsgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIiB9XG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBdXG4gICAgICAgICAgKVxuICAgICAgICBdLFxuICAgICAgICAxXG4gICAgICApLFxuICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgIF92bS5fbSgwKVxuICAgIF0pXG4gIF0pXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW1xuICBmdW5jdGlvbigpIHtcbiAgICB2YXIgX3ZtID0gdGhpc1xuICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICAgIHJldHVybiBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImFib3V0LW1lLW5vdGVcIiB9LCBbXG4gICAgICBfYyhcInBcIiwgW1xuICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgXCJIZWxsb29vISBJJ20gR3JhbnQgQWRpZWxlIChPciB5b3UgY2FuIGNhbGwgbWUgRGV2Z3JhbnR5KSwgYW4gaW5kZXBlbmRlbnQgd2ViIGRlc2lnbmVyL2RldmVsb3BlciBhbmQgbWFjaGluZSBsZWFybmluZyBlbnRodXNpYXN0IChub3QgYW4gZXhwZXJ0KSBiYXNlZCBpbiBOaWdlcmlhLlwiXG4gICAgICAgIClcbiAgICAgIF0pLFxuICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgIF9jKFwicFwiLCBbXG4gICAgICAgIF92bS5fdihcbiAgICAgICAgICBcIk15IGdvYWwgaXMgdG8gY3JlYXRlIGZ1bmN0aW9uYWwgYW5kIGludHV0aXZlIGludGVyZmFjZXMgdGhhdCBjYXB0dXJlcyB1c2VycyBhbmQgcHJvbW90ZXMgeW91ciBicmFuZC5cIlxuICAgICAgICApXG4gICAgICBdKSxcbiAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICBfYyhcInBcIiwgW1xuICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgXCJBc2lkZSBwcm9ncmFtbWluZywgSSBlbmpveSBwbGF5aW5nIGdhbWVzLCBtb29ud2Fsa2luZywgd2F0Y2hpbmcgbW92aWVzLCBsaXN0ZW5pbmcgdG8gbXVzaWMgYW5kIGRheWRyZWFtaW5nLlwiXG4gICAgICAgIClcbiAgICAgIF0pXG4gICAgXSlcbiAgfVxuXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCI8dGVtcGxhdGU+XHJcbiAgICA8c2VjdGlvbiBjbGFzcz1cInBhZ2Utc2VjdGlvbiB2YXJpYXRpb24tc2VjdGlvblwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJpbm5lci1jb250YWluZXJcIj5cclxuICAgICAgICAgICAgPGgxIGNsYXNzPVwic2VjdGlvbi1oZWFkaW5nXCIgaWQ9XCJtZVwiPk1lIDxyb3V0ZXItbGluayB0bz1cIiNtZVwiIGNsYXNzPVwic2VjdGlvbi1hbmNob3ItaWQgaWNvbi1ncmFkaWVudFwiPjxpIGNsYXNzPVwiZmFzIGZhLWxpbmtcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+PC9yb3V0ZXItbGluaz48L2gxPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYWJvdXQtbWUtbm90ZVwiPlxyXG4gICAgICAgICAgICAgICAgPHA+SGVsbG9vbyEgSSdtIEdyYW50IEFkaWVsZSAoT3IgeW91IGNhbiBjYWxsIG1lIERldmdyYW50eSksIGFuIGluZGVwZW5kZW50IHdlYiBkZXNpZ25lci9kZXZlbG9wZXIgYW5kIG1hY2hpbmUgbGVhcm5pbmcgZW50aHVzaWFzdCAobm90IGFuIGV4cGVydCkgYmFzZWQgaW4gTmlnZXJpYS48L3A+XHJcbiAgICAgICAgICAgICAgICA8cD5NeSBnb2FsIGlzIHRvIGNyZWF0ZSBmdW5jdGlvbmFsIGFuZCBpbnR1dGl2ZSBpbnRlcmZhY2VzIHRoYXQgY2FwdHVyZXMgdXNlcnMgYW5kIHByb21vdGVzIHlvdXIgYnJhbmQuPC9wPlxyXG4gICAgICAgICAgICAgICAgPHA+QXNpZGUgcHJvZ3JhbW1pbmcsIEkgZW5qb3kgcGxheWluZyBnYW1lcywgbW9vbndhbGtpbmcsIHdhdGNoaW5nIG1vdmllcywgbGlzdGVuaW5nIHRvIG11c2ljIGFuZCBkYXlkcmVhbWluZy48L3A+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9zZWN0aW9uPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHN0eWxlPlxyXG5cclxuPC9zdHlsZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIFxyXG59XHJcbjwvc2NyaXB0PiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9Ib21lTWUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vSG9tZU1lLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vSG9tZU1lLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1jYTViYzliOCZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9Ib21lTWUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9Ib21lTWUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgdmFyIGFwaSA9IHJlcXVpcmUoXCJDOlxcXFxQUk9KRUNUU1xcXFxncmFudGFkaWVsZS13ZWJwYWNrXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtaG90LXJlbG9hZC1hcGlcXFxcZGlzdFxcXFxpbmRleC5qc1wiKVxuICBhcGkuaW5zdGFsbChyZXF1aXJlKCd2dWUnKSlcbiAgaWYgKGFwaS5jb21wYXRpYmxlKSB7XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICAgIGlmICghYXBpLmlzUmVjb3JkZWQoJ2NhNWJjOWI4JykpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJ2NhNWJjOWI4JywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJ2NhNWJjOWI4JywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9Ib21lTWUudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWNhNWJjOWI4JlwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhcGkucmVyZW5kZXIoJ2NhNWJjOWI4Jywge1xuICAgICAgICByZW5kZXI6IHJlbmRlcixcbiAgICAgICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnNcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJzcmMvcGFnZXMvSG9tZVBhZ2UvSG9tZU1lLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXCJzZWN0aW9uXCIsIHsgc3RhdGljQ2xhc3M6IFwicGFnZS1zZWN0aW9uXCIgfSwgW1xuICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiaW5uZXItY29udGFpbmVyXCIgfSwgW1xuICAgICAgX2MoXG4gICAgICAgIFwiaDFcIixcbiAgICAgICAgeyBzdGF0aWNDbGFzczogXCJzZWN0aW9uLWhlYWRpbmdcIiwgYXR0cnM6IHsgaWQ6IFwic2hvd2Nhc2VcIiB9IH0sXG4gICAgICAgIFtcbiAgICAgICAgICBfdm0uX3YoXCJTaG93Y2FzZSBcIiksXG4gICAgICAgICAgX2MoXG4gICAgICAgICAgICBcInJvdXRlci1saW5rXCIsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcInNlY3Rpb24tYW5jaG9yLWlkIGljb24tZ3JhZGllbnRcIixcbiAgICAgICAgICAgICAgYXR0cnM6IHsgdG86IFwiI3Nob3djYXNlXCIgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgX2MoXCJpXCIsIHtcbiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJmYXMgZmEtbGlua1wiLFxuICAgICAgICAgICAgICAgIGF0dHJzOiB7IFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIgfVxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgXVxuICAgICAgICAgIClcbiAgICAgICAgXSxcbiAgICAgICAgMVxuICAgICAgKSxcbiAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICBfYyhcInBcIiwgeyBzdGF0aWNDbGFzczogXCJzZWN0aW9uLWhlYWRsaW5lXCIgfSwgW1xuICAgICAgICBfdm0uX3YoXCJTb21lIHByb2plY3RzIEkndmUgd29ya2VkIG9uIGluZGVwZW5kZW50bHkuXCIpXG4gICAgICBdKSxcbiAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImNvbnRhaW5lci1mbHVpZFwiIH0sIFtcbiAgICAgICAgX2MoXG4gICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcInJvd1wiIH0sXG4gICAgICAgICAgX3ZtLl9sKF92bS5wcm9qZWN0cywgZnVuY3Rpb24ocHJvamVjdCkge1xuICAgICAgICAgICAgcmV0dXJuIF9jKFxuICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICB7IGtleTogcHJvamVjdC50aXRsZSwgc3RhdGljQ2xhc3M6IFwiY29sLTEyIGNvbC1sZy02IG1iLTRcIiB9LFxuICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJwcm9qZWN0LWNhcmRcIixcbiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgXCJkYXRhLWFvc1wiOiBcImZhZGUtdXBcIiB9XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICBcInJvdXRlci1saW5rXCIsXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwicHJvamVjdC1saW5rXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0bzogcHJvamVjdC5saW5rIH1cbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaW1nXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwicHJvamVjdC10aHVtYm5haWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiBwcm9qZWN0LmltYWdlUGF0aCB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcInByb2plY3QtZGV0YWlsc1wiIH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJoM1wiLCB7IHN0eWxlOiBwcm9qZWN0LmRldGFpbHMgfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MocHJvamVjdC50aXRsZSkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImgyXCIsIHsgc3R5bGU6IHByb2plY3QuZGV0YWlscyB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhwcm9qZWN0LnR5cGUpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICBdXG4gICAgICAgICAgICApXG4gICAgICAgICAgfSksXG4gICAgICAgICAgMFxuICAgICAgICApXG4gICAgICBdKVxuICAgIF0pXG4gIF0pXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiPHRlbXBsYXRlPlxyXG4gICAgPHNlY3Rpb24gY2xhc3M9XCJwYWdlLXNlY3Rpb25cIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiaW5uZXItY29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgIDxoMSBjbGFzcz1cInNlY3Rpb24taGVhZGluZ1wiIGlkPVwic2hvd2Nhc2VcIj5TaG93Y2FzZSA8cm91dGVyLWxpbmsgdG89XCIjc2hvd2Nhc2VcIiBjbGFzcz1cInNlY3Rpb24tYW5jaG9yLWlkIGljb24tZ3JhZGllbnRcIj48aSBjbGFzcz1cImZhcyBmYS1saW5rXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPjwvcm91dGVyLWxpbms+PC9oMT5cclxuICAgICAgICAgICAgPHAgY2xhc3M9XCJzZWN0aW9uLWhlYWRsaW5lXCI+U29tZSBwcm9qZWN0cyBJJ3ZlIHdvcmtlZCBvbiBpbmRlcGVuZGVudGx5LjwvcD5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lci1mbHVpZFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtMTIgY29sLWxnLTYgbWItNFwiIHYtZm9yPVwicHJvamVjdCBpbiBwcm9qZWN0c1wiIHYtYmluZDprZXk9XCJwcm9qZWN0LnRpdGxlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwcm9qZWN0LWNhcmRcIiBkYXRhLWFvcz1cImZhZGUtdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyb3V0ZXItbGluayB2LWJpbmQ6dG89XCJwcm9qZWN0LmxpbmtcIiBjbGFzcz1cInByb2plY3QtbGlua1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9XCJwcm9qZWN0LXRodW1ibmFpbFwiIHYtYmluZDpzcmM9XCJwcm9qZWN0LmltYWdlUGF0aFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwcm9qZWN0LWRldGFpbHNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzIHYtYmluZDpzdHlsZT1cInByb2plY3QuZGV0YWlsc1wiPnt7IHByb2plY3QudGl0bGUgfX08L2gzPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDIgdi1iaW5kOnN0eWxlPVwicHJvamVjdC5kZXRhaWxzXCI+e3sgcHJvamVjdC50eXBlIH19PC9oMj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcm91dGVyLWxpbms+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9zZWN0aW9uPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHN0eWxlPlxyXG5cclxuPC9zdHlsZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGRhdGE6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBwcm9qZWN0czpbXHJcbiAgICAgICAgICAgICAgICB7bGluazogJ2Nhc2UvcHJvamVjdC1ueCcsIGRldGFpbHM6IHtjb2xvcjogJyMwMDAnfSwgdGl0bGU6ICdwcm9qZWN0IG54JywgdHlwZTogJ1dlYiBkZXNpZ24sIGRldmVsb3BtZW50JywgaW1hZ2VQYXRoOiAnaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZHp3M2dvempsL2ltYWdlL3VwbG9hZC92MTU5Mjg3ODUzNS91cGxvYWRzL3Byb2plY3RfbngvcHJvamVjdC1ueC1jb3Zlci02MDB4NjAwX2g5aXIyZy5wbmcnfSxcclxuXHJcbiAgICAgICAgICAgICAgICB7bGluazogJ2Nhc2Uvd2lsbG93LWludmVzdG1lbnQnLCBkZXRhaWxzOiB7Y29sb3I6ICcjZmZmJ30sIHRpdGxlOiAnd2lsbG93IGludmVzdG1lbnQnLCB0eXBlOiAnV2ViIGRlc2lnbiwgZGV2ZWxvcG1lbnQnLCBpbWFnZVBhdGg6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kenczZ296amwvaW1hZ2UvdXBsb2FkL3YxNTkyODc4NTg1L3VwbG9hZHMvd2lsbG93X2ludmVzdG1lbnQvd2lsbG93LWludmVzdG1lbnQtY292ZXItNjAweDYwMF9maXB4d2gucG5nJ30sXHJcblxyXG4gICAgICAgICAgICAgICAge2xpbms6ICdjYXNlL21vdnluZXQnLCBkZXRhaWxzOiB7Y29sb3I6ICcjZGQwNDA0J30sIHRpdGxlOiAnbW92eW5ldCcsIHR5cGU6ICdXZWIgZGVzaWduLCBkZXZlbG9wbWVudCcsIGltYWdlUGF0aDogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4Nzg0ODMvdXBsb2Fkcy9tb3Z5bmV0L21vdnluZXQtY292ZXItNjAweDYwMF9vMmRqbWgucG5nJ30sXHJcblxyXG4gICAgICAgICAgICAgICAge2xpbms6ICdjYXNlL2pvdmlhbmJpeicsIGRldGFpbHM6IHtjb2xvcjogJyNmZmYnfSwgdGl0bGU6ICdqb3ZpYW5iaXonLCB0eXBlOiAnV2ViIGRlc2lnbiwgZGV2ZWxvcG1lbnQnLCBpbWFnZVBhdGg6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kenczZ296amwvaW1hZ2UvdXBsb2FkL3YxNTkyODc4NDMzL3VwbG9hZHMvam92aWFuYml6L2pvdmlhbmJpei1jb3Zlci02MDB4NjAwX2x4ejZtZS5wbmcnfSxcclxuXHJcbiAgICAgICAgICAgICAgICB7bGluazogJ2Nhc2UvYWR2Yml0Y29pbmVhcm5zJywgZGV0YWlsczoge2NvbG9yOiAnI2FhYSd9LCB0aXRsZTogJ2FkdmJpdGNvaW5lYXJucycsIHR5cGU6ICdXZWIgZGVzaWduLCBkZXZlbG9wbWVudCcsIGltYWdlUGF0aDogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4NzgzNTUvdXBsb2Fkcy9hZHZiaXRjb2luZWFybnMvYWR2Yml0Y29pbmVhcm5zLWNvdmVyLTYwMHg2MDBfdHB4aW9qLnBuZyd9LFxyXG5cclxuICAgICAgICAgICAgICAgIHtsaW5rOiAnY2FzZS9teWFmcmljb25uZWN0JywgZGV0YWlsczoge2NvbG9yOiAnI2ZmZid9LCB0aXRsZTogJ215YWZyaWNvbm5lY3QnLCB0eXBlOiAnV2ViIGRlc2lnbiwgZGV2ZWxvcG1lbnQnLCBpbWFnZVBhdGg6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kenczZ296amwvaW1hZ2UvdXBsb2FkL3YxNTkyODc4NDgxL3VwbG9hZHMvbXlhZnJpY29ubmVjdC9sb2dvcyUyQ2ljb25zL2xvZ28tMTA4MHgxMDgwX2QyNWR0dy5qcGcnfVxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9Ib21lU2hvd2Nhc2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vSG9tZVNob3djYXNlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vSG9tZVNob3djYXNlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1jM2FjZjg4ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9Ib21lU2hvd2Nhc2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9Ib21lU2hvd2Nhc2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgdmFyIGFwaSA9IHJlcXVpcmUoXCJDOlxcXFxQUk9KRUNUU1xcXFxncmFudGFkaWVsZS13ZWJwYWNrXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtaG90LXJlbG9hZC1hcGlcXFxcZGlzdFxcXFxpbmRleC5qc1wiKVxuICBhcGkuaW5zdGFsbChyZXF1aXJlKCd2dWUnKSlcbiAgaWYgKGFwaS5jb21wYXRpYmxlKSB7XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICAgIGlmICghYXBpLmlzUmVjb3JkZWQoJ2MzYWNmODhlJykpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJ2MzYWNmODhlJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJ2MzYWNmODhlJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9Ib21lU2hvd2Nhc2UudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWMzYWNmODhlJlwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhcGkucmVyZW5kZXIoJ2MzYWNmODhlJywge1xuICAgICAgICByZW5kZXI6IHJlbmRlcixcbiAgICAgICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnNcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJzcmMvcGFnZXMvSG9tZVBhZ2UvSG9tZVNob3djYXNlLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXCJzZWN0aW9uXCIsIHsgc3RhdGljQ2xhc3M6IFwicGFnZS1zZWN0aW9uXCIgfSwgW1xuICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiaW5uZXItY29udGFpbmVyXCIgfSwgW1xuICAgICAgX2MoXG4gICAgICAgIFwiaDFcIixcbiAgICAgICAgeyBzdGF0aWNDbGFzczogXCJzZWN0aW9uLWhlYWRpbmdcIiwgYXR0cnM6IHsgaWQ6IFwid2h5bWVcIiB9IH0sXG4gICAgICAgIFtcbiAgICAgICAgICBfdm0uX3YoXCJXaHkgTWUgXCIpLFxuICAgICAgICAgIF9jKFxuICAgICAgICAgICAgXCJyb3V0ZXItbGlua1wiLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJzZWN0aW9uLWFuY2hvci1pZCBpY29uLWdyYWRpZW50XCIsXG4gICAgICAgICAgICAgIGF0dHJzOiB7IHRvOiBcIiN3aHltZVwiIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgIF9jKFwiaVwiLCB7XG4gICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiZmFzIGZhLWxpbmtcIixcbiAgICAgICAgICAgICAgICBhdHRyczogeyBcImFyaWEtaGlkZGVuXCI6IFwidHJ1ZVwiIH1cbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIF1cbiAgICAgICAgICApXG4gICAgICAgIF0sXG4gICAgICAgIDFcbiAgICAgICksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXCJwXCIsIHsgc3RhdGljQ2xhc3M6IFwic2VjdGlvbi1oZWFkbGluZVwiIH0sIFtcbiAgICAgICAgX3ZtLl92KCdTdGlsbCBub3QgY29udmluY2VkPyBIZXJlIGFyZSBzb21lIFwiV0hZIE1FXCIgcmVhc29ucy4nKVxuICAgICAgXSksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXG4gICAgICAgIFwiZGl2XCIsXG4gICAgICAgIHsgc3RhdGljQ2xhc3M6IFwid2h5bWUtY2Fyb3VzZWxcIiB9LFxuICAgICAgICBfdm0uX2woX3ZtLnJlYXNvbnMsIGZ1bmN0aW9uKHJlYXNvbikge1xuICAgICAgICAgIHJldHVybiBfYyhcbiAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICB7IGtleTogcmVhc29uLnRpdGxlLCBzdGF0aWNDbGFzczogXCJjYXJvdXNlbC1jZWxsXCIgfSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgX2MoXCJ1bFwiLCBbXG4gICAgICAgICAgICAgICAgX2MoXCJsaVwiLCBbXG4gICAgICAgICAgICAgICAgICBfYyhcImlcIiwge1xuICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJpY29uLWdyYWRpZW50XCIsXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzOiByZWFzb24uaWNvbkNsYXNzLFxuICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBcImFyaWEtaGlkZGVuXCI6IFwidHJ1ZVwiIH1cbiAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICBfYyhcImxpXCIsIFtfYyhcImgyXCIsIFtfdm0uX3YoX3ZtLl9zKHJlYXNvbi50aXRsZSkpXSldKSxcbiAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgIF9jKFwibGlcIiwgW192bS5fdihfdm0uX3MocmVhc29uLmNvbW1lbnQpKV0pXG4gICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICBdXG4gICAgICAgICAgKVxuICAgICAgICB9KSxcbiAgICAgICAgMFxuICAgICAgKSxcbiAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcIndoeW1lLXJlYXNvblwiIH0sIFtcbiAgICAgICAgX2MoXG4gICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcInJvd1wiIH0sXG4gICAgICAgICAgX3ZtLl9sKF92bS5yZWFzb25zLCBmdW5jdGlvbihyZWFzb24pIHtcbiAgICAgICAgICAgIHJldHVybiBfYyhcImRpdlwiLCB7IGtleTogcmVhc29uLnRpdGxlLCBjbGFzczogcmVhc29uLmNvbHVtbkNsYXNzIH0sIFtcbiAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJyZWFzb24tY2VsbFwiLFxuICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgXCJkYXRhLWFvc1wiOiBcImZhZGUtdXBcIiB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICBfYyhcInVsXCIsIFtcbiAgICAgICAgICAgICAgICAgICAgX2MoXCJsaVwiLCBbXG4gICAgICAgICAgICAgICAgICAgICAgX2MoXCJpXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImljb24tZ3JhZGllbnRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiByZWFzb24uaWNvbkNsYXNzLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIiB9XG4gICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgIF9jKFwibGlcIiwgW19jKFwiaDJcIiwgW192bS5fdihfdm0uX3MocmVhc29uLnRpdGxlKSldKV0pLFxuICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICBfYyhcImxpXCIsIFtfdm0uX3YoX3ZtLl9zKHJlYXNvbi5jb21tZW50KSldKVxuICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIF0pXG4gICAgICAgICAgfSksXG4gICAgICAgICAgMFxuICAgICAgICApXG4gICAgICBdKVxuICAgIF0pXG4gIF0pXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiPHRlbXBsYXRlPlxyXG4gICAgPHNlY3Rpb24gY2xhc3M9XCJwYWdlLXNlY3Rpb25cIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiaW5uZXItY29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgIDxoMSBjbGFzcz1cInNlY3Rpb24taGVhZGluZ1wiIGlkPVwid2h5bWVcIj5XaHkgTWUgPHJvdXRlci1saW5rIHRvPVwiI3doeW1lXCIgY2xhc3M9XCJzZWN0aW9uLWFuY2hvci1pZCBpY29uLWdyYWRpZW50XCI+PGkgY2xhc3M9XCJmYXMgZmEtbGlua1wiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvaT48L3JvdXRlci1saW5rPjwvaDE+XHJcbiAgICAgICAgICAgIDxwIGNsYXNzPVwic2VjdGlvbi1oZWFkbGluZVwiPlN0aWxsIG5vdCBjb252aW5jZWQ/IEhlcmUgYXJlIHNvbWUgXCJXSFkgTUVcIiByZWFzb25zLjwvcD5cclxuXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aHltZS1jYXJvdXNlbFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcm91c2VsLWNlbGxcIiB2LWZvcj1cInJlYXNvbiBpbiByZWFzb25zXCIgdi1iaW5kOmtleT1cInJlYXNvbi50aXRsZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDx1bD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxpIHYtYmluZDpjbGFzcz1cInJlYXNvbi5pY29uQ2xhc3NcIiBjbGFzcz1cImljb24tZ3JhZGllbnRcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+PC9saT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxoMj57eyByZWFzb24udGl0bGUgfX08L2gyPjwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT57eyByZWFzb24uY29tbWVudCB9fTwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgPC91bD5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aHltZS1yZWFzb25cIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtYmluZDpjbGFzcz1cInJlYXNvbi5jb2x1bW5DbGFzc1wiIHYtZm9yPVwicmVhc29uIGluIHJlYXNvbnNcIiB2LWJpbmQ6a2V5PVwicmVhc29uLnRpdGxlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyZWFzb24tY2VsbFwiIGRhdGEtYW9zPVwiZmFkZS11cFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48aSB2LWJpbmQ6Y2xhc3M9XCJyZWFzb24uaWNvbkNsYXNzXCIgY2xhc3M9XCJpY29uLWdyYWRpZW50XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPjwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxoMj57eyByZWFzb24udGl0bGUgfX08L2gyPjwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPnt7IHJlYXNvbi5jb21tZW50IH19PC9saT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9zZWN0aW9uPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHN0eWxlPlxyXG5cclxuPC9zdHlsZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGRhdGE6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICByZWFzb25zOiBbXHJcbiAgICAgICAgICAgICAgICB7Y29sdW1uQ2xhc3M6ICdjb2wtbGctNCBvZmZzZXQtbGctNCBtYi01JywgaWNvbkNsYXNzOiAnZmFzIGZhLXNtaWxlJywgdGl0bGU6ICdCZXN0IFF1YWxpdHknLCBjb21tZW50OiAnTm90aGluZyBidXQgdGhlIEJFU1QuJ30sXHJcbiAgICAgICAgICAgICAgICB7Y29sdW1uQ2xhc3M6ICdjb2wtbGctNiBtYi01JywgaWNvbkNsYXNzOiAnZmFzIGZhLWdlbScsIHRpdGxlOiAnRnVsbHkgQ3VzdG9taXplZCcsIGNvbW1lbnQ6ICdMaWtlIG5vdGhpbmcgeW91XFwndmUgc2VlbiBiZWZvcmUsIGJ1aWxkIGl0IGZyb20gdGhlIGdyb3VuZCB1cC4nfSxcclxuICAgICAgICAgICAgICAgIHtjb2x1bW5DbGFzczogJ2NvbC1sZy00IG9mZnNldC1sZy0xIG1iLTUnLCBpY29uQ2xhc3M6ICdmYXMgZmEtbW9uZXktYmlsbC13YXZlJywgdGl0bGU6ICdBZmZvcmRhYmxlJywgY29tbWVudDogJ05vdCB0byBiZSBtaXN0YWtlbiBmb3IgQ0hFQVAuJ30sXHJcbiAgICAgICAgICAgICAgICB7Y29sdW1uQ2xhc3M6ICdjb2wtbGctNCBvZmZzZXQtbGctMSBtYi01JywgaWNvbkNsYXNzOiAnZmFzIGZhLXNoaXBwaW5nLWZhc3QnLCB0aXRsZTogJ0Zhc3QgRGVsaXZlcnknLCBjb21tZW50OiAnV291bGRuXFwndCBoYXZlIHRvIHJ1c2ggaXQsIGp1c3QgYmUgdGhlcmUgb24gdGltZS4nfSxcclxuICAgICAgICAgICAgICAgIHtjb2x1bW5DbGFzczogJ2NvbC1sZy02IG1iLTUnLCBpY29uQ2xhc3M6ICdmYXMgZmEtZW52ZWxvcGUnLCB0aXRsZTogJ1N1cHBvcnQnLCBjb21tZW50OiAnUHJvdmlkZSBhbGwgcmVxdWlyZWQgYXNzaXN0YW5jZSB0aWxsIHlvdSBhcmUgdXAgYW5kIHJ1bm5pbmcgd2l0aCB5b3VyIHByb2plY3QuJ31cclxuICAgICAgICAgICAgXVxyXG4gICAgICAgIH1cclxuICAgIH0sICAgXHJcbn1cclxuPC9zY3JpcHQ+IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0hvbWVXaHltZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9Ib21lV2h5bWUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9Ib21lV2h5bWUudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTE5YjM0ZTg0JlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL0hvbWVXaHltZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL0hvbWVXaHltZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkM6XFxcXFBST0pFQ1RTXFxcXGdyYW50YWRpZWxlLXdlYnBhY2tcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1ob3QtcmVsb2FkLWFwaVxcXFxkaXN0XFxcXGluZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnMTliMzRlODQnKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnMTliMzRlODQnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnMTliMzRlODQnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL0hvbWVXaHltZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MTliMzRlODQmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignMTliMzRlODQnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInNyYy9wYWdlcy9Ib21lUGFnZS9Ib21lV2h5bWUudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfdm0uX20oMClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXG4gIGZ1bmN0aW9uKCkge1xuICAgIHZhciBfdm0gPSB0aGlzXG4gICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gICAgcmV0dXJuIF9jKFxuICAgICAgXCJmb290ZXJcIixcbiAgICAgIHsgc3RhdGljQ2xhc3M6IFwiY29udGFjdC1mb290ZXJcIiwgYXR0cnM6IHsgaWQ6IFwiY29udGFjdFwiIH0gfSxcbiAgICAgIFtcbiAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJpbm5lci1jb250YWluZXJcIiB9LCBbXG4gICAgICAgICAgX2MoXCJoMVwiLCB7IHN0YXRpY0NsYXNzOiBcInNlY3Rpb24taWNvbi1oZWFkaW5nXCIgfSwgW1xuICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgIFwiYVwiLFxuICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImljb24tZ3JhZGllbnRcIiwgYXR0cnM6IHsgaHJlZjogXCIjY29udGFjdFwiIH0gfSxcbiAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIF9jKFwiaVwiLCB7XG4gICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJmYXMgZmEtZW52ZWxvcGVcIixcbiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIClcbiAgICAgICAgICBdKSxcbiAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgIF9jKFwiaDJcIiwgeyBzdGF0aWNDbGFzczogXCJjb250YWN0LW5vdGVcIiB9LCBbXG4gICAgICAgICAgICBfdm0uX3YoXCJZb3UncmUgYSBtYWlsIGF3YXkuIEVtYWlsIG1lIGF0IFwiKSxcbiAgICAgICAgICAgIF9jKFwiYVwiLCB7IGF0dHJzOiB7IGhyZWY6IFwibWFpbHRvOmhlbGxvLmRldmdyYW50eUBnbWFpbC5jb21cIiB9IH0sIFtcbiAgICAgICAgICAgICAgX3ZtLl92KFwiaGVsbG8uZGV2Z3JhbnR5QGdtYWlsLmNvbVwiKVxuICAgICAgICAgICAgXSlcbiAgICAgICAgICBdKVxuICAgICAgICBdKVxuICAgICAgXVxuICAgIClcbiAgfVxuXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCI8dGVtcGxhdGU+XHJcbiAgICA8Zm9vdGVyIGNsYXNzPVwiY29udGFjdC1mb290ZXJcIiBpZD1cImNvbnRhY3RcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiaW5uZXItY29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgIDxoMSBjbGFzcz1cInNlY3Rpb24taWNvbi1oZWFkaW5nXCI+PGEgY2xhc3M9XCJpY29uLWdyYWRpZW50XCIgaHJlZj1cIiNjb250YWN0XCI+PGkgY2xhc3M9XCJmYXMgZmEtZW52ZWxvcGVcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+PC9hPjwvaDE+XHJcbiAgICAgICAgICAgIDxoMiBjbGFzcz1cImNvbnRhY3Qtbm90ZVwiPllvdSdyZSBhIG1haWwgYXdheS4gRW1haWwgbWUgYXQgPGEgaHJlZj1cIm1haWx0bzpoZWxsby5kZXZncmFudHlAZ21haWwuY29tXCI+aGVsbG8uZGV2Z3JhbnR5QGdtYWlsLmNvbTwvYT48L2gyPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9mb290ZXI+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c3R5bGU+XHJcblxyXG48L3N0eWxlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgXHJcbn1cclxuPC9zY3JpcHQ+IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0FwcEZvb3Rlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9BcHBGb290ZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9BcHBGb290ZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWZhOGVmYTMyJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL0FwcEZvb3Rlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL0FwcEZvb3Rlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkM6XFxcXFBST0pFQ1RTXFxcXGdyYW50YWRpZWxlLXdlYnBhY2tcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1ob3QtcmVsb2FkLWFwaVxcXFxkaXN0XFxcXGluZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnZmE4ZWZhMzInKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnZmE4ZWZhMzInLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnZmE4ZWZhMzInLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL0FwcEZvb3Rlci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9ZmE4ZWZhMzImXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignZmE4ZWZhMzInLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInNyYy9jb21wb25lbnRzL2xheW91dC9BcHBGb290ZXIudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsIjx0ZW1wbGF0ZT5cclxuICAgIDxkaXY+XHJcbiAgICAgICAgPGFwcC1uYXYvPlxyXG4gICAgICAgIDxob21lLWhlcm8vPlxyXG4gICAgICAgIDxkaXYgdi1zY3JvbGwtc3B5PlxyXG4gICAgICAgICAgICA8aG9tZS1tZS8+XHJcbiAgICAgICAgICAgIDxob21lLXNob3djYXNlLz5cclxuICAgICAgICAgICAgPGhvbWUtd2h5bWUvPlxyXG4gICAgICAgICAgICA8YXBwLWZvb3Rlci8+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzdHlsZT5cclxuXHJcbjwvc3R5bGU+XHJcblxyXG48c2NyaXB0PlxyXG5pbXBvcnQgQXBwTmF2IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvbGF5b3V0L0FwcE5hdi52dWUnXHJcbmltcG9ydCBIb21lSGVybyBmcm9tICcuL0hvbWVIZXJvLnZ1ZSdcclxuaW1wb3J0IEhvbWVNZSBmcm9tICcuL0hvbWVNZS52dWUnXHJcbmltcG9ydCBIb21lU2hvd2Nhc2UgZnJvbSAnLi9Ib21lU2hvd2Nhc2UudnVlJ1xyXG5pbXBvcnQgSG9tZVdoeW1lIGZyb20gJy4vSG9tZVdoeW1lLnZ1ZSdcclxuaW1wb3J0IEFwcEZvb3RlciBmcm9tICcuLi8uLi9jb21wb25lbnRzL2xheW91dC9BcHBGb290ZXIudnVlJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgY29tcG9uZW50czoge1xyXG4gICAgICAgIEFwcE5hdixcclxuICAgICAgICBIb21lSGVybyxcclxuICAgICAgICBIb21lTWUsXHJcbiAgICAgICAgSG9tZVNob3djYXNlLFxyXG4gICAgICAgIEhvbWVXaHltZSxcclxuICAgICAgICBBcHBGb290ZXJcclxuICAgIH0sXHJcblxyXG4gICAgZGF0YTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHBhcmFtczoge1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdEZXNpZ24gUG9ydGZvbGlvIG9mIEdyYW50IEFkaWVsZScsXHJcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ1RoZSBkZXNpZ24gcG9ydGZvbGlvIG9mIEdyYW50IEFkaWVsZSwgYW4gaW5kZXBlbmRlbnQgd2ViIGRlc2lnbmVyIGFuZCBkZXZlbG9wZXIgYmFzZWQgaW4gTmlnZXJpYS4nLFxyXG4gICAgICAgICAgICAgICAgc2l0ZV9uYW1lOiAnR3JhbnQgQWRpZWxlJyxcclxuICAgICAgICAgICAgICAgIHNpdGVfdXJsOiAnaHR0cHM6Ly9ncmFudGFkaWVsZS53ZWIuYXBwLycsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvKiBwYXJ0aWNsZXNKUy5sb2FkKEBkb20taWQsIEBwYXRoLWpzb24sIEBjYWxsYmFjayAob3B0aW9uYWwpKTsgKi9cclxuICAgICAgICBwYXJ0aWNsZXNKUy5sb2FkKCdteUhlcm8nLCAnLi9hc3NldHMvanNvbi9teXBhcnRpY2xlcy1jb25maWcuanNvbicpO1xyXG5cclxuICAgICAgICB2YXIgZWxlbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53aHltZS1jYXJvdXNlbCcpO1xyXG4gICAgICAgIHZhciBmbGt0eSA9IG5ldyBGbGlja2l0eSggZWxlbSwge1xyXG4gICAgICAgICAgICBjZWxsQWxpZ246ICdjZW50ZXInLFxyXG4gICAgICAgICAgICBjb250YWluOiB0cnVlLFxyXG4gICAgICAgICAgICB3cmFwQXJvdW5kOiB0cnVlLFxyXG4gICAgICAgICAgICBhdXRvUGxheTogMzUwMFxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBBT1MuaW5pdCgpO1xyXG5cclxuICAgICAgICB0aGlzLiR1YS50cmFja1ZpZXcoJ2hvbWUnKVxyXG4gICAgfSxcclxuXHJcbiAgICBoZWFkOiB7XHJcbiAgICAgICAgdGl0bGU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIGlubmVyOiB0aGlzLnBhcmFtcy50aXRsZSxcclxuICAgICAgICAgICAgICAgIHNlcGVyYXRvcjogJycsXHJcbiAgICAgICAgICAgICAgICBjb21wbGVtZW50OiAnJyxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIG1ldGE6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIFtcclxuICAgICAgICAgICAgICAgIHtuYW1lOiAncm9ib3RzJywgY29udGVudDogJ2luZGV4J30sXHJcbiAgICAgICAgICAgICAgICB7bmFtZTogJ2Rlc2NyaXB0aW9uJywgY29udGVudDogdGhpcy5wYXJhbXMuZGVzY3JpcHRpb259LFxyXG4gICAgICAgICAgICAgICAge25hbWU6ICdhdXRob3InLCBjb250ZW50OiB0aGlzLnBhcmFtcy5zaXRlX25hbWV9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAnb2c6dGl0bGUnLCBjb250ZW50OiB0aGlzLnBhcmFtcy50aXRsZX0sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICdvZzp0eXBlJywgY29udGVudDogJ3dlYnNpdGUnfSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ29nOmltYWdlJywgY29udGVudDogdGhpcy5wYXJhbXMuc2l0ZV91cmwgKyAnYXNzZXRzL2ljb25zL2dhLWljb24tMjU2eDI1Ni5wbmcnfSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ29nOmltYWdlOnR5cGUnLCBjb250ZW50OiAnaW1hZ2UvcG5nJ30sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICdvZzppbWFnZTp3aWR0aCcsIGNvbnRlbnQ6ICcyNTYnfSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ29nOmltYWdlOmhlaWdodCcsIGNvbnRlbnQ6ICcyNTYnfSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ29nOnVybCcsIGNvbnRlbnQ6IHRoaXMucGFyYW1zLnNpdGVfdXJsfSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ29nOmRlc2NyaXB0aW9uJywgY29udGVudDogdGhpcy5wYXJhbXMuZGVzY3JpcHRpb259LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAnb2c6bG9jYWxlJywgY29udGVudDogJ2VuX1VTJ30sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICdvZzpzaXRlX25hbWUnLCBjb250ZW50OiB0aGlzLnBhcmFtcy5zaXRlX25hbWV9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAndHdpdHRlcjpjYXJkJywgY29udGVudDogJ3N1bW1hcnknfSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ3R3aXR0ZXI6Y3JlYXRvcicsIGNvbnRlbnQ6ICdAZGV2Z3JhbnR5J30sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICd0d2l0dGVyOnRpdGxlJywgY29udGVudDogdGhpcy5wYXJhbXMudGl0bGV9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAndHdpdHRlcjpkZXNjcmlwdGlvbicsIGNvbnRlbnQ6IHRoaXMucGFyYW1zLmRlc2NyaXB0aW9ufSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ3R3aXR0ZXI6aW1hZ2UnLCBjb250ZW50OiB0aGlzLnBhcmFtcy5zaXRlX3VybCArICdhc3NldHMvaWNvbnMvZ2EtaWNvbi0yNTZ4MjU2LnBuZyd9LFxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgbGluazogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gW1xyXG4gICAgICAgICAgICAgICAge3JlbDogJ2Nhbm9uaWNhbCcsIGhyZWY6IHRoaXMucGFyYW1zLnNpdGVfdXJsfSxcclxuICAgICAgICAgICAgXVxyXG4gICAgICAgIH0sXHJcbiAgICB9XHJcbn1cclxuPC9zY3JpcHQ+IiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9YjM2MWMyOTYmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkM6XFxcXFBST0pFQ1RTXFxcXGdyYW50YWRpZWxlLXdlYnBhY2tcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1ob3QtcmVsb2FkLWFwaVxcXFxkaXN0XFxcXGluZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnYjM2MWMyOTYnKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnYjM2MWMyOTYnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnYjM2MWMyOTYnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1iMzYxYzI5NiZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCdiMzYxYzI5NicsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwic3JjL3BhZ2VzL0hvbWVQYWdlL2luZGV4LnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXG4gICAgXCJkaXZcIixcbiAgICBbXG4gICAgICBfYyhcImFwcC1uYXZcIiksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXG4gICAgICAgIFwic2hvd2Nhc2UtY29udGV4dFwiLFxuICAgICAgICB7XG4gICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgIFwicHJvamVjdC1uYW1lXCI6IF92bS5zaG93Y2FzZS5wcm9qZWN0TmFtZSxcbiAgICAgICAgICAgIFwicHJvamVjdC1kYXRlXCI6IF92bS5zaG93Y2FzZS5wcm9qZWN0RGF0ZSxcbiAgICAgICAgICAgIFwicHJvamVjdC1kaXNwbGF5LXBob3RvLXBhdGhcIjogX3ZtLnNob3djYXNlLnByb2plY3REaXNwbGF5UGhvdG9QYXRoLFxuICAgICAgICAgICAgXCJwcm9qZWN0LXR5cGVcIjogX3ZtLnNob3djYXNlLnByb2plY3RUeXBlLFxuICAgICAgICAgICAgXCJwcm9qZWN0LXBsYXRmb3JtXCI6IF92bS5zaG93Y2FzZS5wcm9qZWN0UGxhdGZvcm0sXG4gICAgICAgICAgICBcInByb2plY3QtZXh0ZXJuYWwtbGlua1wiOiBfdm0uc2hvd2Nhc2UucHJvamVjdEV4dGVybmFsTGluayxcbiAgICAgICAgICAgIFwicHJvamVjdC1jb250ZXh0LXBob3RvLXBhdGhcIjogX3ZtLnNob3djYXNlLnByb2plY3RDb250ZXh0UGhvdG9QYXRoXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBbXG4gICAgICAgICAgX2MoXCJzcGFuXCIsIHtcbiAgICAgICAgICAgIGRvbVByb3BzOiB7IGlubmVySFRNTDogX3ZtLl9zKF92bS5zaG93Y2FzZS5wcm9qZWN0RGVzYykgfVxuICAgICAgICAgIH0pXG4gICAgICAgIF1cbiAgICAgICksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXCJzaG93Y2FzZS1wbGFubmluZ1wiLCBbXG4gICAgICAgIF9jKFwic3BhblwiLCB7XG4gICAgICAgICAgZG9tUHJvcHM6IHsgaW5uZXJIVE1MOiBfdm0uX3MoX3ZtLnNob3djYXNlLnByb2plY3RQbGFubmluZykgfVxuICAgICAgICB9KVxuICAgICAgXSksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXG4gICAgICAgIFwic2hvd2Nhc2UtcmVzdWx0XCIsXG4gICAgICAgIHsgYXR0cnM6IHsgXCJwcm9qZWN0LXNjcmVlbnNob3RzXCI6IF92bS5zaG93Y2FzZS5wcm9qZWN0U2NyZWVuc2hvdHMgfSB9LFxuICAgICAgICBbXG4gICAgICAgICAgX2MoXCJzcGFuXCIsIHtcbiAgICAgICAgICAgIGRvbVByb3BzOiB7IGlubmVySFRNTDogX3ZtLl9zKF92bS5zaG93Y2FzZS5wcm9qZWN0UmVzdWx0KSB9XG4gICAgICAgICAgfSlcbiAgICAgICAgXVxuICAgICAgKSxcbiAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICBfYyhcImFwcC1mb290ZXJcIilcbiAgICBdLFxuICAgIDFcbiAgKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXCJzZWN0aW9uXCIsIHsgc3RhdGljQ2xhc3M6IFwic2hvd2Nhc2UtaGVhZGVyXCIgfSwgW1xuICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwicHJvamVjdC1uYW1lXCIgfSwgW1xuICAgICAgX2MoXCJoMlwiLCBbX3ZtLl92KF92bS5fcyhfdm0ucHJvamVjdE5hbWUpKV0pLFxuICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgIF9jKFwicFwiLCB7IHN0YXRpY0NsYXNzOiBcInByb2plY3QtZGF0ZVwiIH0sIFtcbiAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0ucHJvamVjdERhdGUpKVxuICAgICAgXSlcbiAgICBdKSxcbiAgICBfdm0uX3YoXCIgXCIpLFxuICAgIF9jKFwiZGl2XCIsIFtcbiAgICAgIF9jKFwiaW1nXCIsIHtcbiAgICAgICAgc3RhdGljQ2xhc3M6IFwicHJvamVjdC1kaXNwbGF5LXBob3RvXCIsXG4gICAgICAgIGF0dHJzOiB7IHNyYzogX3ZtLnByb2plY3REaXNwbGF5UGhvdG9QYXRoLCBcImRhdGEtYW9zXCI6IFwiZmFkZS11cFwiIH1cbiAgICAgIH0pXG4gICAgXSksXG4gICAgX3ZtLl92KFwiIFwiKSxcbiAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImNvbnRhaW5lci1mbHVpZCBwcm9qZWN0LWNvbnRleHRcIiB9LCBbXG4gICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcInJvd1wiIH0sIFtcbiAgICAgICAgX2MoXG4gICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzdGF0aWNDbGFzczogXCJjb2wtMTIgY29sLWxnLTYgbXktNSBwcm9qZWN0LWNvbnRleHQtZGV0YWlsc1wiLFxuICAgICAgICAgICAgYXR0cnM6IHsgXCJkYXRhLWFvc1wiOiBcImZhZGVcIiB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBfYyhcInBcIiwgeyBzdGF0aWNDbGFzczogXCJwcm9qZWN0LXR5cGVcIiB9LCBbXG4gICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLnByb2plY3RUeXBlKSlcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgIF9jKFwicFwiLCB7IHN0YXRpY0NsYXNzOiBcInByb2plY3QtcGxhdGZvcm1cIiB9LCBbXG4gICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLnByb2plY3RQbGF0Zm9ybSkpXG4gICAgICAgICAgICBdKSxcbiAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgXCJhXCIsXG4gICAgICAgICAgICAgIHsgYXR0cnM6IHsgaHJlZjogX3ZtLnByb2plY3RFeHRlcm5hbExpbmssIHRhcmdldDogXCJfYmxhbmtcIiB9IH0sXG4gICAgICAgICAgICAgIFtfdm0uX3YoXCJWaXNpdCBzaXRlXCIpXVxuICAgICAgICAgICAgKVxuICAgICAgICAgIF1cbiAgICAgICAgKSxcbiAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgX2MoXG4gICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzdGF0aWNDbGFzczpcbiAgICAgICAgICAgICAgXCJjb2wtMTIgY29sLWxnLTYgbXktNSBwcm9qZWN0LWNvbnRleHQtZGVzYyBhcnRpY2xlLXNsb3RcIixcbiAgICAgICAgICAgIGF0dHJzOiB7IFwiZGF0YS1hb3NcIjogXCJmYWRlXCIgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgW19jKFwiZGl2XCIsIFtfdm0uX3QoXCJkZWZhdWx0XCIpXSwgMildXG4gICAgICAgIClcbiAgICAgIF0pXG4gICAgXSksXG4gICAgX3ZtLl92KFwiIFwiKSxcbiAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcInByb2plY3QtY29udGV4dC1waG90by1jb250YWluZXJcIiB9LCBbXG4gICAgICBfYyhcImltZ1wiLCB7XG4gICAgICAgIHN0YXRpY0NsYXNzOiBcInByb2plY3QtY29udGV4dC1waG90b1wiLFxuICAgICAgICBhdHRyczogeyBzcmM6IF92bS5wcm9qZWN0Q29udGV4dFBob3RvUGF0aCwgXCJkYXRhLWFvc1wiOiBcImZhZGUtdXBcIiB9XG4gICAgICB9KVxuICAgIF0pXG4gIF0pXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiPHRlbXBsYXRlPlxyXG4gICAgPHNlY3Rpb24gY2xhc3M9XCJzaG93Y2FzZS1oZWFkZXJcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwicHJvamVjdC1uYW1lXCI+XHJcbiAgICAgICAgICAgIDxoMj57eyBwcm9qZWN0TmFtZSB9fTwvaDI+XHJcbiAgICAgICAgICAgIDxwIGNsYXNzPVwicHJvamVjdC1kYXRlXCI+e3sgcHJvamVjdERhdGUgfX08L3A+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgPGltZyBjbGFzcz1cInByb2plY3QtZGlzcGxheS1waG90b1wiIHYtYmluZDpzcmM9XCJwcm9qZWN0RGlzcGxheVBob3RvUGF0aFwiIGRhdGEtYW9zPVwiZmFkZS11cFwiPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXItZmx1aWQgcHJvamVjdC1jb250ZXh0XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtMTIgY29sLWxnLTYgbXktNSBwcm9qZWN0LWNvbnRleHQtZGV0YWlsc1wiIGRhdGEtYW9zPVwiZmFkZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwicHJvamVjdC10eXBlXCI+e3sgcHJvamVjdFR5cGUgfX08L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJwcm9qZWN0LXBsYXRmb3JtXCI+e3sgcHJvamVjdFBsYXRmb3JtIH19PC9wPlxyXG4gICAgICAgICAgICAgICAgICAgIDxhIHYtYmluZDpocmVmPVwicHJvamVjdEV4dGVybmFsTGlua1wiIHRhcmdldD1cIl9ibGFua1wiPlZpc2l0IHNpdGU8L2E+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtMTIgY29sLWxnLTYgbXktNSBwcm9qZWN0LWNvbnRleHQtZGVzYyBhcnRpY2xlLXNsb3RcIiBkYXRhLWFvcz1cImZhZGVcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c2xvdD48L3Nsb3Q+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInByb2plY3QtY29udGV4dC1waG90by1jb250YWluZXJcIj5cclxuICAgICAgICAgICAgPGltZyBjbGFzcz1cInByb2plY3QtY29udGV4dC1waG90b1wiIHYtYmluZDpzcmM9XCJwcm9qZWN0Q29udGV4dFBob3RvUGF0aFwiIGRhdGEtYW9zPVwiZmFkZS11cFwiPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9zZWN0aW9uPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHN0eWxlPlxyXG5cclxuPC9zdHlsZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIHByb3BzOiB7XHJcbiAgICAgICAgcHJvamVjdE5hbWU6IHtcclxuICAgICAgICAgICAgdHlwZTogU3RyaW5nLCBcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgICAgIHByb2plY3REYXRlOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZywgXHJcbiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgfSxcclxuICAgICAgICBwcm9qZWN0RGlzcGxheVBob3RvUGF0aDoge1xyXG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgfSxcclxuICAgICAgICBwcm9qZWN0VHlwZToge1xyXG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgfSxcclxuICAgICAgICBwcm9qZWN0UGxhdGZvcm06IHtcclxuICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcHJvamVjdEV4dGVybmFsTGluazoge1xyXG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgfSxcclxuICAgICAgICBwcm9qZWN0Q29udGV4dFBob3RvUGF0aDoge1xyXG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgfSxcclxuICAgIH1cclxufVxyXG48L3NjcmlwdD4iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vU2hvd2Nhc2VDb250ZXh0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1Nob3djYXNlQ29udGV4dC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL1Nob3djYXNlQ29udGV4dC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjYzZTdmZGEmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vU2hvd2Nhc2VDb250ZXh0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vU2hvd2Nhc2VDb250ZXh0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiQzpcXFxcUFJPSkVDVFNcXFxcZ3JhbnRhZGllbGUtd2VicGFja1xcXFxub2RlX21vZHVsZXNcXFxcdnVlLWhvdC1yZWxvYWQtYXBpXFxcXGRpc3RcXFxcaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCc2NjNlN2ZkYScpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCc2NjNlN2ZkYScsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCc2NjNlN2ZkYScsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vU2hvd2Nhc2VDb250ZXh0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02NjNlN2ZkYSZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCc2NjNlN2ZkYScsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwic3JjL3BhZ2VzL1Nob3djYXNlUGFnZS9TaG93Y2FzZUNvbnRleHQudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcbiAgICBcInNlY3Rpb25cIixcbiAgICB7IHN0YXRpY0NsYXNzOiBcInBhZ2Utc2VjdGlvblwiLCBhdHRyczogeyBcImRhdGEtYW9zXCI6IFwiZmFkZVwiIH0gfSxcbiAgICBbXG4gICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImlubmVyLWNvbnRhaW5lciBhcnRpY2xlLXNsb3RcIiB9LCBbXG4gICAgICAgIF92bS5fbSgwKSxcbiAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJzbG90LXRleHRcIiB9LCBbX3ZtLl90KFwiZGVmYXVsdFwiKV0sIDIpXG4gICAgICBdKVxuICAgIF1cbiAgKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtcbiAgZnVuY3Rpb24oKSB7XG4gICAgdmFyIF92bSA9IHRoaXNcbiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgICByZXR1cm4gX2MoXCJoNFwiLCB7IHN0YXRpY0NsYXNzOiBcInNob3djYXNlLXN1Yi1oZWFkaW5nXCIgfSwgW1xuICAgICAgX2MoXCJzcGFuXCIsIFtfdm0uX3YoXCIyLzNcIildKSxcbiAgICAgIF92bS5fdihcIiBwbGFubmluZ1wiKVxuICAgIF0pXG4gIH1cbl1cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiPHRlbXBsYXRlPlxyXG4gICAgPHNlY3Rpb24gY2xhc3M9XCJwYWdlLXNlY3Rpb25cIiBkYXRhLWFvcz1cImZhZGVcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiaW5uZXItY29udGFpbmVyIGFydGljbGUtc2xvdFwiPlxyXG4gICAgICAgICAgICA8aDQgY2xhc3M9XCJzaG93Y2FzZS1zdWItaGVhZGluZ1wiPjxzcGFuPjIvMzwvc3Bhbj4gcGxhbm5pbmc8L2g0PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2xvdC10ZXh0XCI+XHJcbiAgICAgICAgICAgICAgICA8c2xvdD48L3Nsb3Q+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9zZWN0aW9uPiAgICBcclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzdHlsZT5cclxuXHJcbjwvc3R5bGU+XHJcblxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBcclxufVxyXG48L3NjcmlwdD4iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vU2hvd2Nhc2VQbGFubmluZy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9TaG93Y2FzZVBsYW5uaW5nLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vU2hvd2Nhc2VQbGFubmluZy52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MTk2YmM1YTkmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vU2hvd2Nhc2VQbGFubmluZy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL1Nob3djYXNlUGxhbm5pbmcudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgdmFyIGFwaSA9IHJlcXVpcmUoXCJDOlxcXFxQUk9KRUNUU1xcXFxncmFudGFkaWVsZS13ZWJwYWNrXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtaG90LXJlbG9hZC1hcGlcXFxcZGlzdFxcXFxpbmRleC5qc1wiKVxuICBhcGkuaW5zdGFsbChyZXF1aXJlKCd2dWUnKSlcbiAgaWYgKGFwaS5jb21wYXRpYmxlKSB7XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICAgIGlmICghYXBpLmlzUmVjb3JkZWQoJzE5NmJjNWE5JykpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJzE5NmJjNWE5JywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJzE5NmJjNWE5JywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9TaG93Y2FzZVBsYW5uaW5nLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xOTZiYzVhOSZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCcxOTZiYzVhOScsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwic3JjL3BhZ2VzL1Nob3djYXNlUGFnZS9TaG93Y2FzZVBsYW5uaW5nLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXG4gICAgXCJzZWN0aW9uXCIsXG4gICAgeyBzdGF0aWNDbGFzczogXCJwYWdlLXNlY3Rpb25cIiwgYXR0cnM6IHsgXCJkYXRhLWFvc1wiOiBcImZhZGVcIiB9IH0sXG4gICAgW1xuICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJpbm5lci1jb250YWluZXIgYXJ0aWNsZS1zbG90XCIgfSwgW1xuICAgICAgICBfdm0uX20oMCksXG4gICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwic2xvdC10ZXh0XCIgfSwgW192bS5fdChcImRlZmF1bHRcIildLCAyKSxcbiAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJwcm9qZWN0LXJlc3VsdC1waG90by1jb250YWluZXJcIiB9LCBbXG4gICAgICAgICAgX2MoXG4gICAgICAgICAgICBcInVsXCIsXG4gICAgICAgICAgICBfdm0uX2woX3ZtLnByb2plY3RTY3JlZW5zaG90cywgZnVuY3Rpb24ocHJvamVjdFNjcmVlbnNob3QpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIF9jKFxuICAgICAgICAgICAgICAgIFwibGlcIixcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBrZXk6IHByb2plY3RTY3JlZW5zaG90LnNyYyxcbiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IFwiZGF0YS1hb3NcIjogXCJmYWRlLXVwXCIgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgX2MoXCJpbWdcIiwge1xuICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJwcm9qZWN0LXJlc3VsdC1waG90b1wiLFxuICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IHByb2plY3RTY3JlZW5zaG90LnNyYyB9XG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAwXG4gICAgICAgICAgKVxuICAgICAgICBdKVxuICAgICAgXSlcbiAgICBdXG4gIClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXG4gIGZ1bmN0aW9uKCkge1xuICAgIHZhciBfdm0gPSB0aGlzXG4gICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gICAgcmV0dXJuIF9jKFwiaDRcIiwgeyBzdGF0aWNDbGFzczogXCJzaG93Y2FzZS1zdWItaGVhZGluZ1wiIH0sIFtcbiAgICAgIF9jKFwic3BhblwiLCBbX3ZtLl92KFwiMy8zXCIpXSksXG4gICAgICBfdm0uX3YoXCIgcmVzdWx0XCIpXG4gICAgXSlcbiAgfVxuXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCI8dGVtcGxhdGU+XHJcbiAgICA8c2VjdGlvbiBjbGFzcz1cInBhZ2Utc2VjdGlvblwiIGRhdGEtYW9zPVwiZmFkZVwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJpbm5lci1jb250YWluZXIgYXJ0aWNsZS1zbG90XCI+XHJcbiAgICAgICAgICAgIDxoNCBjbGFzcz1cInNob3djYXNlLXN1Yi1oZWFkaW5nXCI+PHNwYW4+My8zPC9zcGFuPiByZXN1bHQ8L2g0PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2xvdC10ZXh0XCI+XHJcbiAgICAgICAgICAgICAgICA8c2xvdD48L3Nsb3Q+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInByb2plY3QtcmVzdWx0LXBob3RvLWNvbnRhaW5lclwiPlxyXG4gICAgICAgICAgICAgICAgPHVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDxsaSB2LWZvcj1cInByb2plY3RTY3JlZW5zaG90IGluIHByb2plY3RTY3JlZW5zaG90c1wiIHYtYmluZDprZXk9XCJwcm9qZWN0U2NyZWVuc2hvdC5zcmNcIiBkYXRhLWFvcz1cImZhZGUtdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyB2LWJpbmQ6c3JjPVwicHJvamVjdFNjcmVlbnNob3Quc3JjXCIgY2xhc3M9XCJwcm9qZWN0LXJlc3VsdC1waG90b1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvc2VjdGlvbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzdHlsZT5cclxuXHJcbjwvc3R5bGU+XHJcblxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBwcm9wczoge1xyXG4gICAgICAgIHByb2plY3RTY3JlZW5zaG90czoge1xyXG4gICAgICAgICAgICB0eXBlOiBBcnJheSxcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9TaG93Y2FzZVJlc3VsdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9TaG93Y2FzZVJlc3VsdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL1Nob3djYXNlUmVzdWx0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1hYTRjNzkyZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9TaG93Y2FzZVJlc3VsdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL1Nob3djYXNlUmVzdWx0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiQzpcXFxcUFJPSkVDVFNcXFxcZ3JhbnRhZGllbGUtd2VicGFja1xcXFxub2RlX21vZHVsZXNcXFxcdnVlLWhvdC1yZWxvYWQtYXBpXFxcXGRpc3RcXFxcaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCdhYTRjNzkyZScpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCdhYTRjNzkyZScsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCdhYTRjNzkyZScsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vU2hvd2Nhc2VSZXN1bHQudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWFhNGM3OTJlJlwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhcGkucmVyZW5kZXIoJ2FhNGM3OTJlJywge1xuICAgICAgICByZW5kZXI6IHJlbmRlcixcbiAgICAgICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnNcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJzcmMvcGFnZXMvU2hvd2Nhc2VQYWdlL1Nob3djYXNlUmVzdWx0LnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsImV4cG9ydCBkZWZhdWx0e1xyXG4gICAgXHJcbiAgICBcInByb2plY3QtbnhcIiA6IHtcclxuICAgICAgICBwcm9qZWN0TmFtZTogJ1Byb2plY3QgTlgnLCBcclxuICAgICAgICBwcm9qZWN0RGF0ZTogJzIwMjAnLCBcclxuICAgICAgICBwcm9qZWN0RGlzcGxheVBob3RvUGF0aDogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4Nzg1NzYvdXBsb2Fkcy9wcm9qZWN0X254L1Byb2plY3RfTlgvMzQyNDYyLVBBOVE2Ty00NTJfaXhhZG5sLnBuZycsIFxyXG4gICAgICAgIHByb2plY3RUeXBlOiAnV2ViIERlc2lnbiwgRGV2ZWxvcG1lbnQnLCBcclxuICAgICAgICBwcm9qZWN0UGxhdGZvcm06ICdNb2JpbGUsIFRhYmxldCwgRGVza3RvcCcsIFxyXG4gICAgICAgIHByb2plY3RFeHRlcm5hbExpbms6ICdhYm91dDpibGFuaycsIFxyXG4gICAgICAgIHByb2plY3RDb250ZXh0UGhvdG9QYXRoOiAnaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZHp3M2dvempsL2ltYWdlL3VwbG9hZC92MTU5Mjg3ODU0MC91cGxvYWRzL3Byb2plY3RfbngvcHJvamVjdC1ueC1jb250ZXh0LTI4ODB4MTgwMF9jd2dsNHYucG5nJywgXHJcblxyXG4gICAgICAgIHByb2plY3REZXNjOiBgPHA+SG93IGFib3V0IHJlYWRpbmcgc3RvcmllcyByaWdodCBvbiB5b3VyIG1vYmlsZSwgb24gdGhlIGdvPyE8L3A+XHJcbiAgICAgICAgPHA+UmVhZGluZyBzdG9yaWVzIHlvdSBsb3ZlIHJpZ2h0IG9uIHlvdXIgbW9iaWxlIGRldmljZXMgaXMgZnVuIGFuZCBJIHdhbnQgdG8gZXZlbiBtYWtlIHRoYXQgYSBsb3QgYmV0dGVyITwvcD5cclxuICAgICAgICA8cD5Qcm9qZWN0IE5YIGlzIGFuIGV4cGVyaW1lbnRhbCBwbGF0Zm9ybSB0aGF0IGFsbG93cyB5b3UgdG8gcmVhZCBzdG9yaWVzIHJpZ2h0IG9uIHlvdXIgZGV2aWNlIChNb2JpbGUsIExhYnRvcCBvciBldmVuIERlc2t0b3ApLiBUaGUgY29uY2VwdCBvZiB0aGUgcGxhdGZvcm0gZGVzaWduIGVuYWJsZXMgZm9yIHF1aWNrIGZpbmRpbmcgb2Ygc3RvcmllcyBhbmQgYXJ0aWNsZXMgSSB0aGluayB5b3UnZCBiZSBpbnRlcmVzdGVkIGluIHJlYWRpbmcuPC9wPmAsIFxyXG5cclxuICAgICAgICBwcm9qZWN0UGxhbm5pbmc6IGA8cD5UaGUgZGVzaWduIGFuZCBkZXZlbG9wbWVudCBpbXBsZW1lbnRhdGlvbnMgd2VyZSBwcmV0dHkgc3RyYWlnaHQgZm93YXJkLiBEZXNpZ25lZCB3aXRoIHRoZSBCb290c3RyYXAgNCBtYXRlcmlhbCBkZXNpZ24gZnJhbWV3b3JrLCBJIHdhcyBhYmxlIHRvIHF1aWNrbHkgYWNoaWV2ZSB0aGUgZGVzaWduIHBhdHRlcm4gdGhhdCBzdWl0ZXMgYW4gaW1tZXJzaXZlIHBsYXRmb3JtIG9mIHN0b3JpZXMhIFRoZSBtYXRlcmlhbCBkZXNpZ24gd2FzIHRoZSByaWdodCB3YXkgdG8gZ28gYmVjYXVzZSBJIHdhbnRlZCB0aGUgZGVzaWduIHRvIGxvb2sgYXMgcmVhbCBhcyBwb3NzaWJsZS48L3A+XHJcbiAgICAgICAgPHA+VG8gcHJvbW90ZSByZWFkYWJsaXR5LCB0aGUgZm9udCBvZiBjaG9pY2Ugd2FzIHRoZSB3ZWxsIGtub3duIFJvYm90by4gQWRkaW5nIG1vcmUgcmVhbG5lc3MgdG8gUHJvamVjdCBOWCwgRm9udCBBd2Vzb21lIGljb25zIHdlcmUgdXNlZC48L3A+XHJcbiAgICAgICAgPHA+VGhlIGJhY2tlbmQgcG93ZXJlZCBieSBQSFAgYW5kIE15U1FMIGRhdGFiYXNlIHVzaW5nIGEgZnJhbWV3b3JrIEkgY3JlYXRlZCA8YSBocmVmPVwiLy9naXRodWIuY29tL2RldmdyYW50eS90bV9mcmFtZXdvcmtcIiByZWw9XCJleHRlcm5hbFwiIHRhcmdldD1cIl9ibGFua1wiPmhlcmU8L2E+PC9wPlxyXG4gICAgICAgIDxwPlBsZWFzZSBub3RlOiBQcm9qZWN0IE5YIGlzIHN0aWxsIGluIGl0cyBiZXRhIGFuZCBoYXMgbm90IGJlZW4gcmVsZWFzZWQgdG8gdGhlIHB1YmxpYyBhbmQgSSBob3BlIG9uIGRvaW5nIHRoYXQgcHJldHR5IHNvb24hLjwvcD5gLCBcclxuXHJcbiAgICAgICAgcHJvamVjdFJlc3VsdDogYDxwPk1pc3Npb24gYWNjb21wbGlzaGVkITwvcD5cclxuICAgICAgICA8cD5JdCdzIGFsd2F5cyBhbiBhbWF6aW5nIGZlZWxpbmcgd2hlbiB5b3UgY3JlYXRlIHN0dWZmcyBhbmQgc2VlIG1pbGxpb25zIG9mIHBlb3BsZSBtYWtlIHRoZSBiZXN0IG91dCBvZiBpdCBlYWNoIGRheS4gQW5kIEhleSEsIERvbid0IGFzayB0aGUgbWVhbmluZyBvZiBcIk5YXCIgYmVjYXVzZSBJIGNlcnRhaW5seSBoYXZlIG5vIGlkZWEsIHByb2JhYmx5IGRheWRyZWFtaW5nIHdoZW4gSSBnYXZlIGl0IHRoYXQgbmFtZSDwn5i0PC9wPmAsIFxyXG5cclxuICAgICAgICBwcm9qZWN0U2NyZWVuc2hvdHM6IFtcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4Nzg1NzkvdXBsb2Fkcy9wcm9qZWN0X254L1Byb2plY3RfTlgvbG9jYWxob3N0X3Byb2plY3RzX3Byb2plY3RfbnhfX0xhcHRvcF93aXRoX0hpRFBJX3NjcmVlbl90bWJxMG4ucG5nJ30sIFxyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZHp3M2dvempsL2ltYWdlL3VwbG9hZC92MTU5Mjg3ODU2Mi91cGxvYWRzL3Byb2plY3RfbngvUHJvamVjdF9OWC9sb2NhbGhvc3RfcHJvamVjdHNfcHJvamVjdF9ueF9fTGFwdG9wX3dpdGhfTURQSV9zY3JlZW5fb3BybTNlLnBuZyd9LCBcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4Nzg1NzQvdXBsb2Fkcy9wcm9qZWN0X254L1Byb2plY3RfTlgvbG9jYWxob3N0X3Byb2plY3RzX3Byb2plY3RfbnhfZm9ydW0ucGhwX3BfdGhlLXRocmVlLWJpbGx5LWdvYXRzLWdydWZmX0xhcHRvcF93aXRoX01EUElfc2NyZWVuX3hza2kxay5wbmcnfSxcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4Nzg1ODIvdXBsb2Fkcy9wcm9qZWN0X254L1Byb2plY3RfTlgvbG9jYWxob3N0X3Byb2plY3RzX3Byb2plY3Rfbnhfc2lnbnVwLnBocF9MYXB0b3Bfd2l0aF9NRFBJX3NjcmVlbl9nbmY2aWIucG5nJ30sXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kenczZ296amwvaW1hZ2UvdXBsb2FkL3YxNTkyODc4NTgwL3VwbG9hZHMvcHJvamVjdF9ueC9Qcm9qZWN0X05YL2xvY2FsaG9zdF9wcm9qZWN0c19wcm9qZWN0X254X3NpZ25pbi5waHBfTGFwdG9wX3dpdGhfTURQSV9zY3JlZW5fMV9ocGFvM3MucG5nJ30sXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kenczZ296amwvaW1hZ2UvdXBsb2FkL3YxNTkyODc4NTgwL3VwbG9hZHMvcHJvamVjdF9ueC9Qcm9qZWN0X05YL2xvY2FsaG9zdF9wcm9qZWN0c19wcm9qZWN0X254X3NpZ25pbi5waHBfTGFwdG9wX3dpdGhfTURQSV9zY3JlZW5fY3ljdXBkLnBuZyd9LFxyXG4gICAgICAgIF1cclxuICAgIH0sXHJcblxyXG5cclxuICAgIFwid2lsbG93LWludmVzdG1lbnRcIiA6IHtcclxuICAgICAgICBwcm9qZWN0TmFtZTogJ1dpbGxvdyBJbnZlc3RtZW50JywgXHJcbiAgICAgICAgcHJvamVjdERhdGU6ICcyMDE5JywgXHJcbiAgICAgICAgcHJvamVjdERpc3BsYXlQaG90b1BhdGg6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kenczZ296amwvaW1hZ2UvdXBsb2FkL3YxNTkyODc4NTg2L3VwbG9hZHMvd2lsbG93X2ludmVzdG1lbnQvd2lsbG93X2ludmVzdG1lbnQvYWR1bHQtYXR0aXJlLWNvbW1lcmNlLTEzNjcyNjlfcWJ3aTlrLnBuZycsIFxyXG4gICAgICAgIHByb2plY3RUeXBlOiAnV2ViIERlc2lnbiwgRGV2ZWxvcG1lbnQnLCBcclxuICAgICAgICBwcm9qZWN0UGxhdGZvcm06ICdNb2JpbGUsIFRhYmxldCwgRGVza3RvcCcsIFxyXG4gICAgICAgIHByb2plY3RFeHRlcm5hbExpbms6ICcvL3dpbGxvd2ludmVzdG1lbnQubmV0JywgXHJcbiAgICAgICAgcHJvamVjdENvbnRleHRQaG90b1BhdGg6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kenczZ296amwvaW1hZ2UvdXBsb2FkL3YxNTkyODc4NTkwL3VwbG9hZHMvd2lsbG93X2ludmVzdG1lbnQvd2lsbG93LWludmVzdG1lbnQtY29udGV4dC0yODgweDE4MDBfdHBsb2FnLnBuZycsIFxyXG5cclxuICAgICAgICBwcm9qZWN0RGVzYzogYDxwPldpbGxvdyBJbnZlc3RtZW50IGlzIGEgQml0Y29pbiBJbnZlc3RtZW50IHBsYXRmb3JtIG93bmVkIGFuZCBtYW5hZ2VkIGJ5IHRoZSBXaWxsb3cgR3JvdXAuPC9wPlxyXG4gICAgICAgIDxwPklzIFdpbGxvdyBzZWN1cmVkPyAtIFllcyEsIFdpbGxvdyBpcyBwZWZlY3RseSBzZWN1cmVkIGFzIG5vIHRyYW5zYWN0aW9ucyBhcmUgZG9uZSBvbiB0aGUgc2l0ZS4gQWxsIHRyYW5zYWN0aW9ucyByZXF1aXJlIGFuIGVuY3J5cHRlZCBiaXRjb2luIHdhbGxldCBhbmQgZGF0YSBpcyBvbmx5IHRyYW5zZmVycmVkIHZpYSBBUElzLjwvcD5gLCBcclxuXHJcbiAgICAgICAgcHJvamVjdFBsYW5uaW5nOiBgPHA+PHN0cm9uZz5Qcm9ibGVtIFNvbHZpbmc8L3N0cm9uZz4gPGJyPiBUaGUgZW50aXJlIGlkZWEgd2FzIHRvIGNyZWF0ZSBzb21ldGhpbmcgdGhhdCBhbGxvd2VkIGNvbW11bWljYXRpb24gYmV0d2VlbiBjcnlwdG9jdXJyZW5jaWVzLCBzdG9yZSB0aGVtLCBwZXJmb3JtIG1hdGhlbWF0aWNhbCBvcGVyYXRpb25zIG9uIHRoZW0gd2l0aG91dCB0aGVtIGJlaW5nIHRoZXJlLiBUaGlzIGhhZCB0byBiZSBhcyBhY2N1cmF0ZSBhcyBwb3NzaWJsZS48L3A+XHJcbiAgICAgICAgPHA+VG8gc29sdmUgdGhpcyBwcm9ibGVtIHdlIHJlc29ydCB0byBBUElzIC0gQXBwbGljYXRpb24gUHJvZ3JhbW1pbmcgSW50ZXJmYWNlLiBXZSBjb3VsZCBzdG9yZSBzb21ld2hlcmUgZWxzZSB3aGlsZSBtYWtpbmcgdGhpbmdzIGhhcHBlbiBpbiB0aG9zZSBwbGFjZXMgYW5kIHJldHVybmluZyBhY2N1cmF0ZSByZXN1bHRzIGluIHRoZWlyIGV4YWN0IHF1YW50aXRpZXMgYW5kIG5vdCBlbmhhbmNlZC4gUFJPQkxFTSBTT0xWRUQhPC9wPlxyXG4gICAgICAgIDxwPjxzdHJvbmc+RGVzaWduICZhbXA7IERldmVsb3BtZW50PC9zdHJvbmc+IDxicj4gV2lsbG93IEludmVzdG1lbnQgbGlrZSBhbnkgb3RoZXIgcHJvamVjdCBJJ3ZlIHdvcmtlZCBvbiBzb3J0IHNpbXBsaWNpdHkgaW4gdGhlIGhpZ2hlc3QgZm9ybSwgd2Ugd29uJ3Qgd2FudCBkZWxheXMgaW4gY29tbXVuaWNhdGlvbnMsIHNvIHdlIHNvcnQgYWZ0ZXIgdGhlIGJlc3QgeWV0IGxpZ2h0ZXN0IHRlY2hub2xvZ3kgc3RhY2tzIHRvIG1ha2UgdGhpcyBoYXBwZW4uIEJvb3RzdHJhcCAzIHdhcyB1c2VkIHRvIHF1aWNrbHkgY3JlYXRlIHN0eWxlIHRoZSBtYXJrdXAsIEpxdWVyeSB3aXRoIEphdmFTY3JpcHQuPC9wPlxyXG4gICAgICAgIDxwPkZvciBkZXZlbG9wbWVudCBQSFAgNywgYW4gZWFybHkgdmVyc2lvbiBvZiBhIGZyYW1ld29yayBJIGRldmVsb3BlZCBhbmQgTXlTUUwgd2FzIHVzZWQgYXMgb3VyIGRhdGFiYXNlLjwvcD5gLCBcclxuXHJcbiAgICAgICAgcHJvamVjdFJlc3VsdDogYDxwPlwiQW1hemluZyB3b3JrIEdyYW50IVwiLCBEZWxpdmVyaW5nIHF1aWNrbHksIHdoaWxlIG1ha2luZyB0aGUgZW50aXJlIHByb2plY3QgZnVjdGlvbmFsIGFuZCBpbnR1dGl2ZSBpcyBub3QganVzdCBhYm91dCBzZWxlY3RpbmcgdGhlIHJpZ2h0IGNvZGUgc3RhY2ssIHRoZSB0ZWNobm9sb2dpZXMgaGFzIHRvIGJlIHVzZWQgY29ycmVjdGx5LiBDaGVlcnMgdG8gYW5vdGhlciBncmVhdCBzdWNjZXNzIPCfpYI8L3A+YCwgXHJcblxyXG4gICAgICAgIHByb2plY3RTY3JlZW5zaG90czogW1xyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZHp3M2dvempsL2ltYWdlL3VwbG9hZC92MTU5Mjg3ODU5OC91cGxvYWRzL3dpbGxvd19pbnZlc3RtZW50L3dpbGxvd19pbnZlc3RtZW50L2xvY2FsaG9zdF9wcm9qZWN0c193aWxsb3dfaW52ZXN0bWVudF9fTGFwdG9wX3dpdGhfTURQSV9zY3JlZW5femtqcmFlLnBuZyd9LCBcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4Nzg1OTkvdXBsb2Fkcy93aWxsb3dfaW52ZXN0bWVudC93aWxsb3dfaW52ZXN0bWVudC9sb2NhbGhvc3RfcHJvamVjdHNfd2lsbG93X2ludmVzdG1lbnRfc2lnbnVwLnBocF9MYXB0b3Bfd2l0aF9NRFBJX3NjcmVlbl94Z2VpYzcucG5nJ30sIFxyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZHp3M2dvempsL2ltYWdlL3VwbG9hZC92MTU5Mjg3ODU5OC91cGxvYWRzL3dpbGxvd19pbnZlc3RtZW50L3dpbGxvd19pbnZlc3RtZW50L2xvY2FsaG9zdF9wcm9qZWN0c193aWxsb3dfaW52ZXN0bWVudF9hY2NvdW50X2xvZ2luLnBocF9MYXB0b3Bfd2l0aF9NRFBJX3NjcmVlbl9oaWtzdHAucG5nJ30sXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kenczZ296amwvaW1hZ2UvdXBsb2FkL3YxNTkyODc4NTk1L3VwbG9hZHMvd2lsbG93X2ludmVzdG1lbnQvd2lsbG93X2ludmVzdG1lbnQvbG9jYWxob3N0X3Byb2plY3RzX3dpbGxvd19pbnZlc3RtZW50X19MYXB0b3Bfd2l0aF9NRFBJX3NjcmVlbl8zX3JidXg3bS5wbmcnfSxcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4Nzg1OTQvdXBsb2Fkcy93aWxsb3dfaW52ZXN0bWVudC93aWxsb3dfaW52ZXN0bWVudC9sb2NhbGhvc3RfcHJvamVjdHNfd2lsbG93X2ludmVzdG1lbnRfX0xhcHRvcF93aXRoX01EUElfc2NyZWVuXzFfY211ZmsyLnBuZyd9LFxyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZHp3M2dvempsL2ltYWdlL3VwbG9hZC92MTU5Mjg3ODU5OC91cGxvYWRzL3dpbGxvd19pbnZlc3RtZW50L3dpbGxvd19pbnZlc3RtZW50L2xvY2FsaG9zdF9wcm9qZWN0c193aWxsb3dfaW52ZXN0bWVudF9fTGFwdG9wX3dpdGhfTURQSV9zY3JlZW5fMl9qNmJja2wucG5nJ30sXHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgXCJtb3Z5bmV0XCIgOiB7XHJcbiAgICAgICAgcHJvamVjdE5hbWU6ICdNb3Z5bmV0JywgXHJcbiAgICAgICAgcHJvamVjdERhdGU6ICcyMDE5JywgXHJcbiAgICAgICAgcHJvamVjdERpc3BsYXlQaG90b1BhdGg6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kenczZ296amwvaW1hZ2UvdXBsb2FkL3YxNTkyODc4NTE1L3VwbG9hZHMvbW92eW5ldC9Nb3Z5bmV0L3NoYXphbS16YWNoYXJ5LWxldmktamFjay1keWxhbi1ncmF6ZXJfcmxhaThqLmpwZycsIFxyXG4gICAgICAgIHByb2plY3RUeXBlOiAnV2ViIERlc2lnbiwgRGV2ZWxvcG1lbnQnLCBcclxuICAgICAgICBwcm9qZWN0UGxhdGZvcm06ICdNb2JpbGUsIFRhYmxldCwgRGVza3RvcCcsIFxyXG4gICAgICAgIHByb2plY3RFeHRlcm5hbExpbms6ICcvL21vdnluZXQuY29tJywgXHJcbiAgICAgICAgcHJvamVjdENvbnRleHRQaG90b1BhdGg6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kenczZ296amwvaW1hZ2UvdXBsb2FkL3YxNTkyODc4NDkzL3VwbG9hZHMvbW92eW5ldC9tb3Z5bmV0LWNvbnRleHQtMjg4MHgxODAwX2l6YjRqci5wbmcnLCBcclxuXHJcbiAgICAgICAgcHJvamVjdERlc2M6IGA8cD5TaW1wbGUsIGZhc3QsIHVzZWZ1bCBhbmQgYXMgaW1tZXJzaXZlIGFzIHBvc3NpYmxlLiBJdCdzIGFsbCBhYm91dCBlbnRlcnRhaW5tZW50LCBpdCBzaG91bGQgYXMgd2VsbCBiZSBlbnRlcnRhaW5pbmcuPC9wPlxyXG4gICAgICAgIDxwPk1vdnluZXQgaXMgYSBzaW1wbGUgYW5kIGJhc2ljIG1vdmllIHdlYnNpdGUgSSBzdGFydGVkIHBlcnNvbmx5IHRvIGdldCBrbm93IGhvdyBzb21lIHRoaW5ncyBpbiBwcm9ncmFtbWluZyB3b3JrLiBJdCdzIHF1aXRlIG9idmlvdXMgdGhhdCBtb3ZpZXMgYXJlIG9uZSBvZiB0aGUgbW9zdCBlbnRhaW50YWluaW5nIHRoaW5ncyBhbmQgZGVmaW5pdGVseSB3b3J0aCBzb21lIHRyeS48L3A+YCwgXHJcblxyXG4gICAgICAgIHByb2plY3RQbGFubmluZzogYDxwPjxzdHJvbmc+UGxhbm5pbmcsIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudDwvc3Ryb25nPiA8YnI+IFdoZW4gSSBzdGFydGVkIGJ1aWxkaW5nIE1vdnluZXQsIEkgd2FzIGN1cmlvdXMgYWJvdXQgc29tZSB0aGluZ3MgaW4gcHJvZ3JhbW1pbmcuIEkga25ldyB0aGF0IG9uZSBvZiB0aGUgYmVzdCB3YXlzIHRvIHRyeSB0aGVtIG91dCB3YXMgZG9pbmcgaXQgd2l0aCBvbmUgb2YgbXkgZmF2b3JpdGUgaG9iYmllcy48L3A+XHJcbiAgICAgICAgPHA+SXQgdG9vayBhYm91dCAyIG1vbnRocyB0byBjb21wbGV0ZSB0aGUgcHJvamVjdCBhbmQgZHVyaW5nIHRoYXQgcGVyaW9kIEkgZ290IGZhbWlsaWFyIHdpdGggQVBJcywgU29mdHdhcmUgYXJjaGl0ZWN0dXJlcywgZS5nIE1WQywgZGVzaWduIHBhdHRlcm5zIGFuZCBzb21lIGZyYW1ld29ya3MuPC9wPlxyXG4gICAgICAgIDxwPk1vdnluZXQncyBkYXRhIGFyZSBhbGwgc291cmNlZCB0aHJvdWdoIHRoZSBUTURCIG1vdmllIEFQSSwgZnJvbSB3aGljaCBwYXJ0cyBhcmUgc3RvcmVkIGluIHRoZSBkYXRhYmFzZS4gQWxsIHRoZXNlIHdoZXJlIG1hZGUgcG9zc2libGUgd2l0aCBQSFAgYW5kIE1ZU1FMLiBNb3Z5bmV0IHVzZWQgdGhlIGVhcmxpZXN0IGFuZCB2ZXJ5IGZpcnN0IHZlcnNpb24gb2YgYSBmcmFtZXdvcmsgSSBjcmVhdGVkIC0gVE0gZnJhbWV3b3JrLiBUaGUgaWRlYSBvZiB0aGUgZnJhbWV3b3JrIHdhcyB0byBjcmVhdGUgY2xhc3NlcywgZS5nIERhdGFiYXNlLCBEYXRldGltZSwgVmFsaWRhdGlvbiwgRmlsZXN5c3RlbSwgU3RyaW5nLCBFbmNyeXB0aW9uIGNsYXNzZXMsIGZ1bmN0aW9ucyBhbmQgZ2VuZXJhbCBwcm9qZWN0IGNvbmZpZ3VyYXRpb25zIHdoaWNoIGFsbG93ZWQgbWUgc2NhZmZvbGQgbmV3ZXIgcHJvamVjdHMgaW4gUEhQIGV2ZW4gZmFzdGVyITwvcD5cclxuICAgICAgICA8cD5Nb3Z5bmV0IGRlc2lnbiB3YXMgYSBtaXggb2YgYm9vdHN0cmFwLCBjdXN0b20gQ1NTIGFuZCBKcXVlcnkuPC9wPlxyXG4gICAgICAgIDxwPk1vdnluZXQgd2FzIGFsc28gdGhlIGZpcnN0IFBXQSAtIFByb2dyZXNzaXZlIFdlYiBBcHAgSSBkZXNpZ25lZCwgdW5kZXJzdGFuZGluZyBob3cgc2VydmljZSB3b3JrZXJzIHdvcmsuPC9wPmAsIFxyXG5cclxuICAgICAgICBwcm9qZWN0UmVzdWx0OiBgPHA+XCJUaGUgY29sb3JzLCBkZXNpZ24gYW5kIGVudGlyZSB3ZWJzaXRlIHdvcmtzIHdlbGxcIiwgdGhpcyBoYXMgYmVlbiBvbmUgb2YgdGhlIGdyZWF0ZXN0IHByb2plY3RzIEkndmUgZG9uZSBpbiBhIHNob3J0IGFtb3VudCBvZiB0aW1lLjwvcD5cclxuICAgICAgICA8cD5UaGUgb3V0Y29tZT8sIFZlcnkgZGVzaXJlYWJsZS48L3A+YCwgXHJcblxyXG4gICAgICAgIHByb2plY3RTY3JlZW5zaG90czogW1xyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZHp3M2dvempsL2ltYWdlL3VwbG9hZC92MTU5Mjg3ODQzNi91cGxvYWRzL21vdnluZXQvbG9nb3MlMkNpY29ucy9tb3Z5bmV0X2xvZ29fNTUyeDE4MF90NXFwOWgucG5nJ30sIFxyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZHp3M2dvempsL2ltYWdlL3VwbG9hZC92MTU5Mjg3ODQ0Ni91cGxvYWRzL21vdnluZXQvTW92eW5ldC9sb2NhbGhvc3RfcHJvamVjdHNfbW92eW5ldF9fTGFwdG9wX3dpdGhfTURQSV9zY3JlZW5fYW1ycWRtLnBuZyd9LCBcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4Nzg0ODIvdXBsb2Fkcy9tb3Z5bmV0L01vdnluZXQvbG9jYWxob3N0X3Byb2plY3RzX21vdnluZXRfdmlldy5waHBfdndpZF8yNDZfdHlwZV9Nb3ZpZV9mcm9tX2hvbWVfTGFwdG9wX3dpdGhfTURQSV9zY3JlZW5feHh3N21yLnBuZyd9LCBcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4Nzg0NzUvdXBsb2Fkcy9tb3Z5bmV0L01vdnluZXQvbG9jYWxob3N0X3Byb2plY3RzX21vdnluZXRfdmlldy5waHBfdndpZF8yNDZfdHlwZV9Nb3ZpZV9mcm9tX2hvbWVfTGFwdG9wX3dpdGhfTURQSV9zY3JlZW5fMV9nbm8wM28ucG5nJ30sXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kenczZ296amwvaW1hZ2UvdXBsb2FkL3YxNTkyODc4NDc4L3VwbG9hZHMvbW92eW5ldC9Nb3Z5bmV0L2xvY2FsaG9zdF9wcm9qZWN0c19tb3Z5bmV0X3ZpZXcucGhwX3Z3aWRfMjQ2X3R5cGVfTW92aWVfZnJvbV9ob21lX0xhcHRvcF93aXRoX01EUElfc2NyZWVuXzRfeHZwNjQzLnBuZyd9LFxyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZHp3M2dvempsL2ltYWdlL3VwbG9hZC92MTU5Mjg3ODQ3OS91cGxvYWRzL21vdnluZXQvTW92eW5ldC9sb2NhbGhvc3RfcHJvamVjdHNfbW92eW5ldF92aWV3LnBocF92d2lkXzI0Nl90eXBlX01vdmllX2Zyb21faG9tZV9MYXB0b3Bfd2l0aF9NRFBJX3NjcmVlbl8zX2ozb3RrZS5wbmcnfSxcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4Nzg0NzQvdXBsb2Fkcy9tb3Z5bmV0L01vdnluZXQvbG9jYWxob3N0X3Byb2plY3RzX21vdnluZXRfdmlldy5waHBfdndpZF8yNDZfdHlwZV9Nb3ZpZV9mcm9tX2hvbWVfTGFwdG9wX3dpdGhfTURQSV9zY3JlZW5fMl90cnh2dmgucG5nJ30sXHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgXCJqb3ZpYW5iaXpcIiA6IHtcclxuICAgICAgICBwcm9qZWN0TmFtZTogJ0pvdmlhbmJpeicsIFxyXG4gICAgICAgIHByb2plY3REYXRlOiAnMjAxOCcsIFxyXG4gICAgICAgIHByb2plY3REaXNwbGF5UGhvdG9QYXRoOiAnaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZHp3M2dvempsL2ltYWdlL3VwbG9hZC92MTU5Mjg3ODM1Ny91cGxvYWRzL2pvdmlhbmJpei9Kb3ZpYW5iaXovYWR1bHQtYXJ0aXN0LWJhbmQtMjc0NDA2X2RvenRkNi5naWYnLCBcclxuICAgICAgICBwcm9qZWN0VHlwZTogJ1dlYiBEZXNpZ24sIERldmVsb3BtZW50JywgXHJcbiAgICAgICAgcHJvamVjdFBsYXRmb3JtOiAnTW9iaWxlLCBUYWJsZXQsIERlc2t0b3AnLCBcclxuICAgICAgICBwcm9qZWN0RXh0ZXJuYWxMaW5rOiAnLy9qb3ZpYW5iaXouY29tJywgXHJcbiAgICAgICAgcHJvamVjdENvbnRleHRQaG90b1BhdGg6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kenczZ296amwvaW1hZ2UvdXBsb2FkL3YxNTkyODc4NDQyL3VwbG9hZHMvam92aWFuYml6L2pvdmlhbmJpei1jb250ZXh0LTI4ODB4MTgwMF9tbzZmcmQucG5nJywgXHJcblxyXG4gICAgICAgIHByb2plY3REZXNjOiBgPHA+Sm92aWFuYml6IGlzIGEgY29tYmluYXRpb24gb2YgdHdvIGJ1c2luZXNzIHNlZ21lbnRzLjwvcD5cclxuICAgICAgICA8cD5UaGUgSm92aWFuIEhhaXIgaXMgY29uY2VybmVkIHdpdGggc2FsZXMgb2YgaGFpciwgaGFpciBwcm9kdWN0cyBhbmQgYWNjZXNzb3JpZXMsIHdoaWxlLCBKb3ZpYW4gRXZlbnRzIGlzIGNvbmNlcm5lZCB3aXRoIHByb3ZpZGluZyBldmVudCBzZXJ2aWNlcy48L3A+XHJcbiAgICAgICAgPHA+VGhlIGFtYXppbmcgdGhpbmcgYWJvdXQgSm92aWFuYml6IGlzIHRoZWlyIHBhc3Npb24uIFRoZSBiZWxpZXZlIHRoZXkgY2FuIGJyaW5nIG91dCB0aGUgYmVhdXR5IGluIGV2ZXJ5IHRoaW5nIGFuZCB0aGF0IGlzIHdoeSBJIHdhcyBleGNpdGVkIHRvIHdvcmsgd2l0aCB0aGVtLjwvcD5gLCBcclxuXHJcbiAgICAgICAgcHJvamVjdFBsYW5uaW5nOiBgPHA+PHN0cm9uZz5DaGFsbGVuZ2VzPC9zdHJvbmc+IDxicj4gRmluZGluZyB0aGUgcGVyZmVjdCB3YXkgdG8gY29tYmluZSBhbmQgcmVnaXN0ZXIgdHdvIHVucmVsYXRlZCBidXNpbmVzcyBzZWdtZW50cyBhbmQgc3RpbGwgbWFraW5nIHRoZW0gc3RhbmQgb3V0IG5lZWRlZCBhIGxpdHRsZSBiaXQgb2YgbWFnaWMsIHdlIGhhZCB0byBkcmFmdCBwb3NzaWJsZSB3YXlzIHRvIGFjY29tcGxpc2ggdGhpcy4gVG8gc29sdmUgdGhpcyBjaGFsbGVuZ2Ugd2UgZW5kZWQgYnVpbGRpbmcgYSBzdGFuZGFyZCBsYW5kaW5nIHBhZ2UgZm9yIHRoZSBib3RoIHNlZ21lbnRzLCBjcmVhdGluZyBhIHNlcGVyYXRlIHN1YmRvbWFpbiBhbmQgYWRkaW5nIHRoZSBsaW5rcyB0byBlYWNoIHNlZ21lbnQsIHRhc2sgY29tcGxldGVkITwvcD5cclxuICAgICAgICA8cD48c3Ryb25nPkRlc2lnbiwgRGV2ZWxvcG1lbnQgYW5kIHByb2JsZW0gc29sdmluZzwvc3Ryb25nPiA8YnI+IFNlbGVjdGluZyB0aGUgcmlnaHQgY29sb3JzIGZvciBhIGJ1c2luZXNzIHdlYnNpdGVzIHdpdGggdHdvIHNlZ21lbnRzIGlzIGltcG9ydGFudC4gUHJvZmVzc2lvbmFsIGNvbG9ycyBsaWtlIGJsdWUoIzAwQTFGRiksIG9mZi13aGl0ZSgjRUVFRUVFKSBhbmQgYmxhY2soIzAwMDAwMCkgd2VyZSBjb2xvcnMgb2YgY2hvaWNlLjwvcD5cclxuICAgICAgICA8cD5XZSB3YW50ZWQgdGhlIGxvZ28gYXMgc2ltcGxlIGFzIHBvc3NpYmxlLCBzbyB3ZSBzdGlja2VkIHRvIGEgdGV4dGJhc2VkIGxvZ28sIGVtcGxveWluZyB0aGUgU29maWEgUmVndWxhciBmb250LjwvcD5cclxuICAgICAgICA8cD5UaGUgcmVzdCBvZiB0aGUgd2Vic2l0ZSBuZWVkZWQgc29tZXRoaW5nIG1vcmUgYm9sZCwgcHJvZmVzc2lvbmFsIGFuZCBtb2Rlcm4sIExhdG8gd2FzIHRoZSBiZXN0IGZvbnQgdG8gYWNjb21wbGlzaCB0aGlzLjwvcD5cclxuICAgICAgICA8cD5BcyBhIGJ1c2luZXNzIHdlYnNpdGUgd2UgbmVlZGVkIG1vcmUgaW1hZ2VzIHRvIGhlbHAgY29udmV5IHdoYXQgd2FzIHJlYWxseSBoYXBwZW5pbmcgb24gdGhlIHNpdGUgd2l0aCBsZXNzZXIgd29yZHMuPC9wPmAsIFxyXG5cclxuICAgICAgICBwcm9qZWN0UmVzdWx0OiBgPHA+XCJXb3chLCB0aGlzIGxvb2tzIHNvIGJlYXV0aWZ1bCBhbmQgaXQgaXMgZXhhY3RseSB3aGF0IEkgbmVlZGVkLlwiLCBZZXMsIG9uY2UgYWdhaW4gb3VyIGRlc2lnbiBzdHJhdGVneSBnYXZlIHRoZSBiZXN0IHJlc3VsdHMhPC9wPmAsIFxyXG5cclxuICAgICAgICBwcm9qZWN0U2NyZWVuc2hvdHM6IFtcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4Nzg0MDIvdXBsb2Fkcy9qb3ZpYW5iaXovSm92aWFuYml6L3d3dy5sb2NhbGhvc3RfcHJvamVjdHNfam92aWFuYml6X2luZGV4LnBocF9MYXB0b3Bfd2l0aF9NRFBJX3NjcmVlbl9oaDlkbHQucG5nJ30sXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kenczZ296amwvaW1hZ2UvdXBsb2FkL3YxNTkyODc4NDM0L3VwbG9hZHMvam92aWFuYml6L0pvdmlhbmJpei93d3cubG9jYWxob3N0X3Byb2plY3RzX2pvdmlhbmJpel9zZXJ2aWNlc19fTGFwdG9wX3dpdGhfTURQSV9zY3JlZW5fcDFsc2c1LnBuZyd9LFxyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZHp3M2dvempsL2ltYWdlL3VwbG9hZC92MTU5Mjg3ODM2OC91cGxvYWRzL2pvdmlhbmJpei9Kb3ZpYW5iaXovd3d3LmxvY2FsaG9zdF9wcm9qZWN0c19qb3ZpYW5iaXpfaGFpcl9fTGFwdG9wX3dpdGhfTURQSV9zY3JlZW5fcnQwdWlxLnBuZyd9LFxyXG4gICAgICAgICAgICB7c3JjOiAnaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZHp3M2dvempsL2ltYWdlL3VwbG9hZC92MTU5Mjg3ODM4My91cGxvYWRzL2pvdmlhbmJpei9Kb3ZpYW5iaXovd3d3LmxvY2FsaG9zdF9wcm9qZWN0c19qb3ZpYW5iaXpfaGFpcl9jYXRlZ29yeS5waHBfY2F0X2hfaF93X0xhcHRvcF93aXRoX01EUElfc2NyZWVuX3JmcmgwNi5wbmcnfSxcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4NzgzODcvdXBsb2Fkcy9qb3ZpYW5iaXovSm92aWFuYml6L3d3dy5sb2NhbGhvc3RfcHJvamVjdHNfam92aWFuYml6X2hhaXJfcHJvZHVjdC5waHBfcGlkXzE2X0xhcHRvcF93aXRoX01EUElfc2NyZWVuX2htM2ZzOC5wbmcnfSxcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4Nzg0MzkvdXBsb2Fkcy9qb3ZpYW5iaXovSm92aWFuYml6L3d3dy5sb2NhbGhvc3RfcHJvamVjdHNfam92aWFuYml6X3NlcnZpY2VzX19MYXB0b3Bfd2l0aF9NRFBJX3NjcmVlbl8xX290YTl4cS5wbmcnfVxyXG4gICAgICAgIF1cclxuICAgIH0sXHJcblxyXG5cclxuICAgIFwiYWR2Yml0Y29pbmVhcm5zXCIgOiB7XHJcbiAgICAgICAgcHJvamVjdE5hbWU6ICdBZHZCaXRjb2luRWFybnMnLCBcclxuICAgICAgICBwcm9qZWN0RGF0ZTogJzIwMTgnLCBcclxuICAgICAgICBwcm9qZWN0RGlzcGxheVBob3RvUGF0aDogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4NzgzNjgvdXBsb2Fkcy9hZHZiaXRjb2luZWFybnMvQWR2Yml0Y29pbkVhcm5zLzI4NDc1NDdfdDNxeTVuLnBuZycsIFxyXG4gICAgICAgIHByb2plY3RUeXBlOiAnV2ViIERlc2lnbiwgRGV2ZWxvcG1lbnQnLCBcclxuICAgICAgICBwcm9qZWN0UGxhdGZvcm06ICdNb2JpbGUsIFRhYmxldCwgRGVza3RvcCcsIFxyXG4gICAgICAgIHByb2plY3RFeHRlcm5hbExpbms6ICcvL2FkdmJpdGNvaW5lYXJucy5jb20nLCBcclxuICAgICAgICBwcm9qZWN0Q29udGV4dFBob3RvUGF0aDogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4NzgzNjgvdXBsb2Fkcy9hZHZiaXRjb2luZWFybnMvYWR2Yml0Y29pbmVhcm5zLWNvbnRleHQtMjg4MHgxODAwX2ZkZnd4ZS5wbmcnLCBcclxuICAgICAgICBwcm9qZWN0RGVzYzogJzxwPkFkdkJpdGNvaW5FYXJucyBpcyBhIGJpdGNvaW4gaW52ZXN0bWVudCBwbGF0Zm9ybSwgY3JlYXRlZCBmb3IgdGhlIHNvbGUgcHVycG9zZSBvZiBzYWZlIGFuZCBzZWN1cmUgYml0Y29pbiBpbnZlc3RtZW50cy48L3A+JywgXHJcblxyXG4gICAgICAgIHByb2plY3RQbGFubmluZzogYDxwPkFkdkJpdG9pbkVhcm5zIGRlc2lnbiBhbmQgZGV2ZWxvcG1lbnQgd2FzIG9uZSBvZiB0aGUgcXVpY2tlc3QgYW5kIGZhc3Rlc3QgSSBoYXZlIGV2ZXIgd29ya2VkIG9uLiBUaGlzIHdhcyBhIHJlc3VsdCBvZiB0aGUgQWR2Qml0Y29pbkVhcm5zIGdyb3VwJ3MgbmVlZCB0byBsYXVuY2ggdGhlIHBsYXRmb3JtIGFzIHF1aWNrIGFzIHBvc3NpYmxlLjwvcD5cclxuICAgICAgICA8cD5UaGUgZW50aXJlIHByb2plY3QgdG9vayBhYm91dCAzIHdlZWtzIHRvIGNvbXBsZXRlLCBhcyB0aGVyZSB3ZXJlIG5pIGZyYW1ld29ya3Mgb3IgbGlicmFyeSB1c2VkIGluIHRoZSBkZXZlbG9wbWVudCBvZiB0aGUgcHJvamVjdC4gVGhlIGVudGlyZSBmcm9udGVuZCB3YXMgY3JlYXRlZCB3aXRoIGN1c3RvbSBkZXNpZ24gY29kZXMuPC9wPlxyXG4gICAgICAgIDxwPlRoZSBiYWNrZW5kIGZ1bGx5IHBvd2VyZWQgYnkgUEhQIGFuZCBhIE15U1FMIHNlcnZlciB1dGlsaXppbmcgQVBJcyBhbmQgbWV0aG9kIG9mIGNvbW11bmljYXRpb24uPC9wPmAsIFxyXG5cclxuICAgICAgICBwcm9qZWN0UmVzdWx0OiBgPHA+U2luY2UgQWR2Qml0Y29pbkVhcm5zIHdhcyBvbmUgbXkgZWFybGllc3QgaW5kZXBlbmRlbnQgcHJvamVjdCBkZXZlbG9wZW10LCBJIHdhcyBhYmxlIHRvIHVuZGVyc3RhbmQgbW9zdCBmdW5jdGlvbmFsaXRpZXMgb2YgYSB3ZWIgYXBwIGFuZCBiZXR0ZXIgd2F5cyB0byBpbXByb3ZlIGZ1bmN0aW9uYWxpdHksIGRlc2lnbiBhbmQgZGV2ZWxvcG1lbnQuPC9wPmAsIFxyXG5cclxuICAgICAgICBwcm9qZWN0U2NyZWVuc2hvdHM6IFtcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4NzgzMjcvdXBsb2Fkcy9hZHZiaXRjb2luZWFybnMvQWR2Yml0Y29pbkVhcm5zL3d3dy5sb2NhbGhvc3RfcHJvamVjdHNfYWR2Yml0Y29pbmVhcm5zX19MYXB0b3Bfd2l0aF9NRFBJX3NjcmVlbl9mcGEyYXcucG5nJ30sXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kenczZ296amwvaW1hZ2UvdXBsb2FkL3YxNTkyODc4MzQ1L3VwbG9hZHMvYWR2Yml0Y29pbmVhcm5zL0FkdmJpdGNvaW5FYXJucy93d3cubG9jYWxob3N0X3Byb2plY3RzX2FkdmJpdGNvaW5lYXJuc19zaWdudXAucGhwX0xhcHRvcF93aXRoX01EUElfc2NyZWVuX2pkNmpmcC5wbmcnfSxcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4NzgzMzAvdXBsb2Fkcy9hZHZiaXRjb2luZWFybnMvQWR2Yml0Y29pbkVhcm5zL3d3dy5sb2NhbGhvc3RfcHJvamVjdHNfYWR2Yml0Y29pbmVhcm5zX2xvZ2luX19MYXB0b3Bfd2l0aF9NRFBJX3NjcmVlbl9iemN1cXIucG5nJ30sXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kenczZ296amwvaW1hZ2UvdXBsb2FkL3YxNTkyODc4MzMyL3VwbG9hZHMvYWR2Yml0Y29pbmVhcm5zL0FkdmJpdGNvaW5FYXJucy93d3cubG9jYWxob3N0X3Byb2plY3RzX2FkdmJpdGNvaW5lYXJuc19sb2dpbl93aXRoZHJhdy5waHBfR2FsYXh5X1M1X2NoZzlqZi5wbmcnfSxcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4NzgzMjAvdXBsb2Fkcy9hZHZiaXRjb2luZWFybnMvQWR2Yml0Y29pbkVhcm5zL3d3dy5sb2NhbGhvc3RfcHJvamVjdHNfYWR2Yml0Y29pbmVhcm5zX2luZGV4LnBocF9MYXB0b3Bfd2l0aF9NRFBJX3NjcmVlbl94bzJsaHoucG5nJ30sXHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgXCJteWFmcmljb25uZWN0XCIgOiB7XHJcbiAgICAgICAgcHJvamVjdE5hbWU6ICdNeUFmcmlDb25uZWN0JywgXHJcbiAgICAgICAgcHJvamVjdERhdGU6ICcyMDE4JyxcclxuICAgICAgICBwcm9qZWN0RGlzcGxheVBob3RvUGF0aDogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4Nzg1MzAvdXBsb2Fkcy9teWFmcmljb25uZWN0L015QWZyaUNvbm5lY3QvY2VsbGlzdC1iYW5kLW11c2ljLXBlcmZvcm1hbmNlX2tzZzJ0MS5qcGcnLCBcclxuICAgICAgICBwcm9qZWN0VHlwZTogJ1dlYiBEZXNpZ24sIERldmVsb3BtZW50JywgXHJcbiAgICAgICAgcHJvamVjdFBsYXRmb3JtOiAnTW9iaWxlLCBUYWJsZXQsIERlc2t0b3AnLCBcclxuICAgICAgICBwcm9qZWN0RXh0ZXJuYWxMaW5rOiAnLy9teWFmcmljb25uZWN0LmNvbScsIFxyXG4gICAgICAgIHByb2plY3RDb250ZXh0UGhvdG9QYXRoOiAnaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZHp3M2dvempsL2ltYWdlL3VwbG9hZC92MTU5Mjg3ODU1MC91cGxvYWRzL215YWZyaWNvbm5lY3QvbXlhZnJpY29ubmVjdC1jb250ZXh0LTI4ODB4MTgwMF92bmJ5Ym0ucG5nJywgXHJcblxyXG4gICAgICAgIHByb2plY3REZXNjOiBgPHA+XCJFdmVuIHRob3VnaCBpdCBpcyBzaW1wbGUgYW5kIHF1aWV0LCB3ZSBtYWRlIGdyZWF0IHNvdW5kcyFcIjwvcD5cclxuICAgICAgICA8cD5NeUFmcmljb25uZWN0IGlzIGFuIGF1ZGlvIGFuZCB2aWRlbyBtdXNpYyBkb3dubG9hZCBwbGF0Zm9ybS4gVGhlIGlkZWEgaXMgdG8gYnVpbGQgYSBuYXRpdmUgbXVzaWMgY2F0YWxvZ3VlIGZvciBldmVyeW9uZSB0byBkb3dubG9hZCB0aGVpciBmYXZvdXJpdGUgQWZyaWNhbiBtdXNpYy48L3A+YCwgXHJcblxyXG4gICAgICAgIHByb2plY3RQbGFubmluZzogYDxwPjxzdHJvbmc+Q2hhbGxlbmdlczwvc3Ryb25nPiA8YnI+IERlc2lnbmluZyBhbmQgY3JlYXRpbmcgdGhlIG5hdGl2ZSBmZWVsIG9mIGFuIGF1ZGlvICZhbXA7IHZpZGVvIGRvd25sb2FkaW5nIHdlYnNpdGUgd2FzIGEgYml0IGNoYWxsZW5naW5nLiBUaGUgcmlnaHQgY29sb3JzLCBmb250cyBhbmQgZ2VuZXJhbCBkZXNpZ24gaGFkIHRvIGJlIGluIHBsYWNlLjwvcD5cclxuICAgICAgICA8cD48c3Ryb25nPkRlc2lnbjwvc3Ryb25nPiA8YnI+IFdlIG5lZWRlZCB0byBkb3dubG9hZCB0aGUgcmlnaHQgdGVtcGxhdGUgZnJvbSA8YSBocmVmPVwiaHR0cHM6Ly93M2xheW91dHMuY29tL2VsdmlzLWEtZW50ZXJ0YWlubWVudC1jYXRlZ29yeS1mbGF0LWJvb3RzdHJhcC1yZXNwb25zaXZlLXdlYi10ZW1wbGF0ZS9cIiByZWw9XCJleHRlcm5hbFwiIHRhcmdldD1cIl9ibGFua1wiPnczbGF5b3V0cy5jb208L2E+LCBmZXcgbW9kaWZpY2F0aW9ucyB3aGVyZSBtYWRlIG9uIHRoZSBVSSB0byBnaXZlIGl0IHRoZSBuYXRpdmUgQWZyaWNhbiBsb29rIHdlIGNvbWJpbmVkIHRoZSBHaGFuYWlhbiBjb2xvcnMgYW5kIHVzZWQgdGhlIDxjaXRlPkNGIEZsb3dlcnMgYnkgRGVzdGlueTwvY2l0ZT4gZm9udC48L3A+XHJcbiAgICAgICAgPHA+PHN0cm9uZz5EZXZlbG9wbWVudDwvc3Ryb25nPiA8YnI+IFRvIGltcHJvdmUgZnVuY3Rpb25hbGl0eSBsaWdodCB3ZWlnaHQgbGlicmFyaWVzIGxpa2UgSlF1ZXJ5IGFuZCBhbmQgQm9vdHN0cmFwIHdlcmUgaW1wbGVtZW50ZWQuIFRoZSBiYWNrIGVuZCBoYW5kbGVkIGJ5IFBIUCB3ZXJlIHVzZWQgZm9yIGR5bmFtaWMgcmVuZGVyaW5nIG9mIHBhZ2VzIGFuZCBEYXRhYmFzZSBvZiBjaG9pY2Ugd2FzIE15U1FMLjwvcD5gLCBcclxuXHJcbiAgICAgICAgcHJvamVjdFJlc3VsdDogYDxwPlRoZSBmaW5hbCBvdXRjb21lIHdhcyBwb3dlcmZ1bCBwbGF0Zm9ybSB0aGF0IGtlZXBzIHZpc2l0b3JzIGluIGEgdG90YWwgc3RhdGUgb2YgZXhjaXRlbWVudC4gV2UgcmVjb3JkZWQgYSB0cmVtZW5kb3VzIGluY3JlYXNlIGluIHRoZSBkYWlseSB2aXNpdHMgZnJvbSBtb3N0IEFmcmljYW4gY291bnRyeSwgbm93IHRoYXQncyB3aGF0IEkgY2FsbCBzYXRpc2ZhY3Rpb24hPC9wPmAsIFxyXG5cclxuICAgICAgICBwcm9qZWN0U2NyZWVuc2hvdHM6IFtcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4Nzg1MTkvdXBsb2Fkcy9teWFmcmljb25uZWN0L015QWZyaUNvbm5lY3QvMTI3LjAuMC4xXzU1MDBfX0xhcHRvcF93aXRoX01EUElfc2NyZWVuXzJfejdwZHFnLnBuZyd9LCBcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4Nzg1MTkvdXBsb2Fkcy9teWFmcmljb25uZWN0L015QWZyaUNvbm5lY3QvMTI3LjAuMC4xXzU1MDBfX0xhcHRvcF93aXRoX01EUElfc2NyZWVuXzFfamVodGJuLnBuZyd9LCBcclxuICAgICAgICAgICAge3NyYzogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R6dzNnb3pqbC9pbWFnZS91cGxvYWQvdjE1OTI4Nzg1MTAvdXBsb2Fkcy9teWFmcmljb25uZWN0L015QWZyaUNvbm5lY3QvMTI3LjAuMC4xXzU1MDBfX0xhcHRvcF93aXRoX01EUElfc2NyZWVuX2ZueGJ1eC5wbmcnfSwgXHJcbiAgICAgICAgICAgIHtzcmM6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kenczZ296amwvaW1hZ2UvdXBsb2FkL3YxNTkyODc4NTMwL3VwbG9hZHMvbXlhZnJpY29ubmVjdC9NeUFmcmlDb25uZWN0LzEyNy4wLjAuMV81NTAwX3NpbmdsZS5odG1sX0xhcHRvcF93aXRoX01EUElfc2NyZWVuX243dTJzbC5wbmcnfSxcclxuICAgICAgICBdXHJcbiAgICB9LFxyXG59IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsIjx0ZW1wbGF0ZT5cclxuICAgIDxkaXY+XHJcbiAgICAgICAgPGFwcC1uYXYvPlxyXG4gICAgICAgIDxzaG93Y2FzZS1jb250ZXh0XHJcbiAgICAgICAgICAgIHYtYmluZDpwcm9qZWN0LW5hbWU9XCJzaG93Y2FzZS5wcm9qZWN0TmFtZVwiXHJcbiAgICAgICAgICAgIHYtYmluZDpwcm9qZWN0LWRhdGU9XCJzaG93Y2FzZS5wcm9qZWN0RGF0ZVwiXHJcbiAgICAgICAgICAgIHYtYmluZDpwcm9qZWN0LWRpc3BsYXktcGhvdG8tcGF0aD1cInNob3djYXNlLnByb2plY3REaXNwbGF5UGhvdG9QYXRoXCJcclxuICAgICAgICAgICAgdi1iaW5kOnByb2plY3QtdHlwZT1cInNob3djYXNlLnByb2plY3RUeXBlXCJcclxuICAgICAgICAgICAgdi1iaW5kOnByb2plY3QtcGxhdGZvcm09XCJzaG93Y2FzZS5wcm9qZWN0UGxhdGZvcm1cIlxyXG4gICAgICAgICAgICB2LWJpbmQ6cHJvamVjdC1leHRlcm5hbC1saW5rPVwic2hvd2Nhc2UucHJvamVjdEV4dGVybmFsTGlua1wiXHJcbiAgICAgICAgICAgIHYtYmluZDpwcm9qZWN0LWNvbnRleHQtcGhvdG8tcGF0aD1cInNob3djYXNlLnByb2plY3RDb250ZXh0UGhvdG9QYXRoXCJcclxuICAgICAgICA+PHNwYW4gdi1odG1sPVwic2hvd2Nhc2UucHJvamVjdERlc2NcIj48L3NwYW4+PC9zaG93Y2FzZS1jb250ZXh0PlxyXG4gICAgICAgIDxzaG93Y2FzZS1wbGFubmluZz48c3BhbiB2LWh0bWw9XCJzaG93Y2FzZS5wcm9qZWN0UGxhbm5pbmdcIj48L3NwYW4+PC9zaG93Y2FzZS1wbGFubmluZz5cclxuICAgICAgICA8c2hvd2Nhc2UtcmVzdWx0XHJcbiAgICAgICAgICAgIHYtYmluZDpwcm9qZWN0LXNjcmVlbnNob3RzPVwic2hvd2Nhc2UucHJvamVjdFNjcmVlbnNob3RzXCJcclxuICAgICAgICA+PHNwYW4gdi1odG1sPVwic2hvd2Nhc2UucHJvamVjdFJlc3VsdFwiPjwvc3Bhbj48L3Nob3djYXNlLXJlc3VsdD5cclxuICAgICAgICA8YXBwLWZvb3Rlci8+XHJcbiAgICA8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzdHlsZT5cclxuXHJcbjwvc3R5bGU+XHJcblxyXG48c2NyaXB0PlxyXG5pbXBvcnQgQXBwTmF2IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvbGF5b3V0L0FwcE5hdi52dWUnXHJcbmltcG9ydCBTaG93Y2FzZUNvbnRleHQgZnJvbSAnLi9TaG93Y2FzZUNvbnRleHQudnVlJ1xyXG5pbXBvcnQgU2hvd2Nhc2VQbGFubmluZyBmcm9tICcuL1Nob3djYXNlUGxhbm5pbmcudnVlJ1xyXG5pbXBvcnQgU2hvd2Nhc2VSZXN1bHQgZnJvbSAnLi9TaG93Y2FzZVJlc3VsdC52dWUnXHJcbmltcG9ydCBBcHBGb290ZXIgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9sYXlvdXQvQXBwRm9vdGVyLnZ1ZSdcclxuaW1wb3J0IHNob3djYXNlcyBmcm9tICcuLi8uLi9kYXRhL3Nob3djYXNlcy5qcydcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGNvbXBvbmVudHM6IHtcclxuICAgICAgICBBcHBOYXYsXHJcbiAgICAgICAgU2hvd2Nhc2VDb250ZXh0LFxyXG4gICAgICAgIFNob3djYXNlUGxhbm5pbmcsXHJcbiAgICAgICAgU2hvd2Nhc2VSZXN1bHQsXHJcbiAgICAgICAgQXBwRm9vdGVyXHJcbiAgICB9LFxyXG5cclxuICAgIHdhdGNoOiB7XHJcbiAgICAgICAgJyRyb3V0ZSc6ICdmZXRjaERhdGEnXHJcbiAgICB9LFxyXG5cclxuICAgIG1ldGhvZHM6IHtcclxuICAgICAgICBmZXRjaERhdGEgKCkge1xyXG4gICAgICAgICAgICBjb25zdCBwYWdlSWQgPSB0aGlzLiRyb3V0ZS5wYXJhbXMucGFnZUlkXHJcbiAgICAgICAgICAgIGNvbnN0IHBhZ2VJZHMgPSBPYmplY3Qua2V5cyhzaG93Y2FzZXMpXHJcbiAgICAgICAgICAgIGlmKHBhZ2VJZHMuaW5jbHVkZXMocGFnZUlkKSl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNob3djYXNlID0gc2hvd2Nhc2VzW3BhZ2VJZF1cclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7bmFtZTogJzQwNCd9KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBjcmVhdGVkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5mZXRjaERhdGEoKVxyXG4gICAgfSxcclxuXHJcbiAgICBtb3VudGVkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgQU9TLmluaXQoKTtcclxuXHJcbiAgICAgICAgdGhpcy4kdWEudHJhY2tWaWV3KCdjYXNlJylcclxuICAgIH0sXHJcblxyXG4gICAgZGF0YTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHNob3djYXNlOiBudWxsLFxyXG4gICAgICAgICAgICBwYXJhbXM6IHtcclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVGhlIGRlc2lnbiBwb3J0Zm9saW8gb2YgR3JhbnQgQWRpZWxlLCBhbiBpbmRlcGVuZGVudCB3ZWIgZGVzaWduZXIgYW5kIGRldmVsb3BlciBiYXNlZCBpbiBOaWdlcmlhLicsXHJcbiAgICAgICAgICAgICAgICBzaXRlX25hbWU6ICdHcmFudCBBZGllbGUnLFxyXG4gICAgICAgICAgICAgICAgc2l0ZV91cmw6ICdodHRwczovL2dyYW50YWRpZWxlLndlYi5hcHAvIycgKyB0aGlzLiRyb3V0ZS5wYXRoLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBoZWFkOiB7XHJcbiAgICAgICAgdGl0bGU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIGlubmVyOiB0aGlzLnNob3djYXNlLnByb2plY3ROYW1lLFxyXG4gICAgICAgICAgICAgICAgc2VwZXJhdG9yOiAnJyxcclxuICAgICAgICAgICAgICAgIGNvbXBsZW1lbnQ6IHRoaXMucGFyYW1zLnNpdGVfbmFtZSxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbWV0YTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gW1xyXG4gICAgICAgICAgICAgICAge25hbWU6ICdyb2JvdHMnLCBjb250ZW50OiAnaW5kZXgnfSxcclxuICAgICAgICAgICAgICAgIHtuYW1lOiAnZGVzY3JpcHRpb24nLCBjb250ZW50OiB0aGlzLnBhcmFtcy5kZXNjcmlwdGlvbn0sXHJcbiAgICAgICAgICAgICAgICB7bmFtZTogJ2F1dGhvcicsIGNvbnRlbnQ6IHRoaXMucGFyYW1zLnNpdGVfbmFtZX0sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICdvZzp0aXRsZScsIGNvbnRlbnQ6IHRoaXMucGFyYW1zLnRpdGxlfSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ29nOnR5cGUnLCBjb250ZW50OiAnd2Vic2l0ZSd9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAnb2c6aW1hZ2UnLCBjb250ZW50OiB0aGlzLnBhcmFtcy5zaXRlX3VybCArICdhc3NldHMvaWNvbnMvZ2EtaWNvbi0yNTZ4MjU2LnBuZyd9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAnb2c6aW1hZ2U6dHlwZScsIGNvbnRlbnQ6ICdpbWFnZS9wbmcnfSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ29nOmltYWdlOndpZHRoJywgY29udGVudDogJzI1Nid9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAnb2c6aW1hZ2U6aGVpZ2h0JywgY29udGVudDogJzI1Nid9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAnb2c6dXJsJywgY29udGVudDogdGhpcy5wYXJhbXMuc2l0ZV91cmx9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAnb2c6ZGVzY3JpcHRpb24nLCBjb250ZW50OiB0aGlzLnBhcmFtcy5kZXNjcmlwdGlvbn0sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICdvZzpsb2NhbGUnLCBjb250ZW50OiAnZW5fVVMnfSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ29nOnNpdGVfbmFtZScsIGNvbnRlbnQ6IHRoaXMucGFyYW1zLnNpdGVfbmFtZX0sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICd0d2l0dGVyOmNhcmQnLCBjb250ZW50OiAnc3VtbWFyeSd9LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAndHdpdHRlcjpjcmVhdG9yJywgY29udGVudDogJ0BkZXZncmFudHknfSxcclxuICAgICAgICAgICAgICAgIHtwcm9wZXJ0eTogJ3R3aXR0ZXI6dGl0bGUnLCBjb250ZW50OiB0aGlzLnBhcmFtcy50aXRsZX0sXHJcbiAgICAgICAgICAgICAgICB7cHJvcGVydHk6ICd0d2l0dGVyOmRlc2NyaXB0aW9uJywgY29udGVudDogdGhpcy5wYXJhbXMuZGVzY3JpcHRpb259LFxyXG4gICAgICAgICAgICAgICAge3Byb3BlcnR5OiAndHdpdHRlcjppbWFnZScsIGNvbnRlbnQ6IHRoaXMucGFyYW1zLnNpdGVfdXJsICsgJ2Fzc2V0cy9pY29ucy9nYS1pY29uLTI1NngyNTYucG5nJ30sXHJcbiAgICAgICAgICAgIF1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGxpbms6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIFtcclxuICAgICAgICAgICAgICAgIHtyZWw6ICdjYW5vbmljYWwnLCBocmVmOiB0aGlzLnBhcmFtcy5zaXRlX3VybH0sXHJcbiAgICAgICAgICAgIF1cclxuICAgICAgICB9LFxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTZjZjc1MzAzJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgdmFyIGFwaSA9IHJlcXVpcmUoXCJDOlxcXFxQUk9KRUNUU1xcXFxncmFudGFkaWVsZS13ZWJwYWNrXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtaG90LXJlbG9hZC1hcGlcXFxcZGlzdFxcXFxpbmRleC5qc1wiKVxuICBhcGkuaW5zdGFsbChyZXF1aXJlKCd2dWUnKSlcbiAgaWYgKGFwaS5jb21wYXRpYmxlKSB7XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICAgIGlmICghYXBpLmlzUmVjb3JkZWQoJzZjZjc1MzAzJykpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJzZjZjc1MzAzJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJzZjZjc1MzAzJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9pbmRleC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NmNmNzUzMDMmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignNmNmNzUzMDMnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInNyYy9wYWdlcy9TaG93Y2FzZVBhZ2UvaW5kZXgudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcImRpdlwiLCBbXG4gICAgX2MoXG4gICAgICBcImRpdlwiLFxuICAgICAge1xuICAgICAgICBzdGF0aWNTdHlsZToge1xuICAgICAgICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXG4gICAgICAgICAgbGVmdDogXCI1MCVcIixcbiAgICAgICAgICB0b3A6IFwiMTAlXCIsXG4gICAgICAgICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgICAgICAgIG1hcmdpbjogXCIwXCIsXG4gICAgICAgICAgcGFkZGluZzogXCIwXCIsXG4gICAgICAgICAgXCJtYXJnaW4tbGVmdFwiOiBcIi01MCVcIlxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgW1xuICAgICAgICBfdm0uX20oMCksXG4gICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgIF9jKFxuICAgICAgICAgIFwicFwiLFxuICAgICAgICAgIHsgc3RhdGljU3R5bGU6IHsgXCJ0ZXh0LWFsaWduXCI6IFwiY2VudGVyXCIsIFwiZm9udC13ZWlnaHRcIjogXCI5MDBcIiB9IH0sXG4gICAgICAgICAgW192bS5fdihcIk5PVCBGT1VORFwiKV1cbiAgICAgICAgKSxcbiAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgX2MoXG4gICAgICAgICAgXCJwXCIsXG4gICAgICAgICAge1xuICAgICAgICAgICAgc3RhdGljU3R5bGU6IHtcbiAgICAgICAgICAgICAgcGFkZGluZzogXCIyMHB4XCIsXG4gICAgICAgICAgICAgIGNvbG9yOiBcIiM5OTlcIixcbiAgICAgICAgICAgICAgXCJ0ZXh0LWFsaWduXCI6IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgIFwibGluZS1oZWlnaHRcIjogXCIxLjZcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgW1xuICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICBcIllvdSBzZWVtIGxvc3QsIHRoYXQgaGFwcGVucyEgSG9sZCBteSBoYW5kcyBsZXQgbWUgdGFrZSB5b3UgcmlnaHQgXCJcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgXCJyb3V0ZXItbGlua1wiLFxuICAgICAgICAgICAgICB7IHN0YXRpY1N0eWxlOiB7IGNvbG9yOiBcImdyZWVuXCIgfSwgYXR0cnM6IHsgdG86IFwiL1wiIH0gfSxcbiAgICAgICAgICAgICAgW192bS5fdihcImhvbWVcIildXG4gICAgICAgICAgICApXG4gICAgICAgICAgXSxcbiAgICAgICAgICAxXG4gICAgICAgIClcbiAgICAgIF1cbiAgICApXG4gIF0pXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW1xuICBmdW5jdGlvbigpIHtcbiAgICB2YXIgX3ZtID0gdGhpc1xuICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICAgIHJldHVybiBfYyhcbiAgICAgIFwiaDFcIixcbiAgICAgIHtcbiAgICAgICAgc3RhdGljU3R5bGU6IHtcbiAgICAgICAgICBjb2xvcjogXCIjZGRkXCIsXG4gICAgICAgICAgXCJ0ZXh0LWFsaWduXCI6IFwiY2VudGVyXCIsXG4gICAgICAgICAgXCJmb250LXNpemVcIjogXCJjYWxjKDEwZW0gKyAydncpXCJcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIFtcbiAgICAgICAgX3ZtLl92KFwiNFwiKSxcbiAgICAgICAgX2MoXCJzcGFuXCIsIHsgc3RhdGljU3R5bGU6IHsgY29sb3I6IFwicmdiYSgyNTUsIDAsIDAsIDAuNDIpXCIgfSB9LCBbXG4gICAgICAgICAgX3ZtLl92KFwiMFwiKVxuICAgICAgICBdKSxcbiAgICAgICAgX3ZtLl92KFwiNFwiKVxuICAgICAgXVxuICAgIClcbiAgfVxuXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCI8dGVtcGxhdGU+XHJcbiAgICA8ZGl2PlxyXG4gICAgICAgIDxkaXYgc3R5bGU9XCJwb3NpdGlvbjphYnNvbHV0ZTsgbGVmdDo1MCU7IHRvcDoxMCU7IHdpZHRoOjEwMCU7IG1hcmdpbjowOyBwYWRkaW5nOjA7IG1hcmdpbi1sZWZ0Oi01MCU7XCI+XHJcbiAgICAgICAgICAgIDxoMSBzdHlsZT1cImNvbG9yOiNkZGQ7IHRleHQtYWxpZ246Y2VudGVyOyBmb250LXNpemU6Y2FsYygxMGVtICsgMnZ3KTtcIj40PHNwYW4gc3R5bGU9XCJjb2xvcjpyZ2JhKDI1NSwgMCwgMCwgMC40Mik7XCI+MDwvc3Bhbj40PC9oMT5cclxuICAgICAgICAgICAgPHAgc3R5bGU9XCJ0ZXh0LWFsaWduOmNlbnRlcjsgZm9udC13ZWlnaHQ6OTAwO1wiPk5PVCBGT1VORDwvcD5cclxuICAgICAgICAgICAgPHAgc3R5bGU9XCJwYWRkaW5nOjIwcHg7IGNvbG9yOiM5OTk7IHRleHQtYWxpZ246Y2VudGVyOyBsaW5lLWhlaWdodDoxLjY7XCI+WW91IHNlZW0gbG9zdCwgdGhhdCBoYXBwZW5zISBIb2xkIG15IGhhbmRzIGxldCBtZSB0YWtlIHlvdSByaWdodCA8cm91dGVyLWxpbmsgdG89XCIvXCIgc3R5bGU9XCJjb2xvcjpncmVlbjtcIj5ob21lPC9yb3V0ZXItbGluaz48L3A+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzdHlsZT5cclxuXHJcbjwvc3R5bGU+XHJcblxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBkYXRhOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcGFyYW1zOiB7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJzQwNCcsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLiR1YS50cmFja1ZpZXcoJzQwNCcpXHJcbiAgICB9LFxyXG5cclxuICAgIGhlYWQ6IHtcclxuICAgICAgICB0aXRsZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgaW5uZXI6IHRoaXMucGFyYW1zLnRpdGxlLFxyXG4gICAgICAgICAgICAgICAgc2VwZXJhdG9yOiAnJyxcclxuICAgICAgICAgICAgICAgIGNvbXBsZW1lbnQ6ICdOb3QgRm91bmQnLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgbWV0YTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gW1xyXG4gICAgICAgICAgICAgICAge25hbWU6ICdyb2JvdHMnLCBjb250ZW50OiAnbm9pbmRleCd9LFxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfSxcclxuICAgIH1cclxufVxyXG48L3NjcmlwdD4iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vTm90Rm91bmRQYWdlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL05vdEZvdW5kUGFnZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL05vdEZvdW5kUGFnZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9ZjM3OGY5N2MmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vTm90Rm91bmRQYWdlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vTm90Rm91bmRQYWdlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiQzpcXFxcUFJPSkVDVFNcXFxcZ3JhbnRhZGllbGUtd2VicGFja1xcXFxub2RlX21vZHVsZXNcXFxcdnVlLWhvdC1yZWxvYWQtYXBpXFxcXGRpc3RcXFxcaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCdmMzc4Zjk3YycpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCdmMzc4Zjk3YycsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCdmMzc4Zjk3YycsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vTm90Rm91bmRQYWdlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1mMzc4Zjk3YyZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCdmMzc4Zjk3YycsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwic3JjL3BhZ2VzL05vdEZvdW5kUGFnZS52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJpbXBvcnQgVnVlIGZyb20gJ3Z1ZSdcclxuaW1wb3J0IFZ1ZVJvdXRlciBmcm9tICd2dWUtcm91dGVyJ1xyXG5pbXBvcnQgVnVlSGVhZCBmcm9tICd2dWUtaGVhZCdcclxuaW1wb3J0IFNjcm9sbHNweSBmcm9tICd2dWUyLXNjcm9sbHNweSdcclxuaW1wb3J0IFZ1ZUFuYWx5dGljcyBmcm9tICd2dWUtdWEnXHJcblxyXG5pbXBvcnQgSG9tZVBhZ2UgZnJvbSAnLi9wYWdlcy9Ib21lUGFnZS9pbmRleC52dWUnXHJcbmltcG9ydCBTaG93Y2FzZVBhZ2UgZnJvbSAnLi9wYWdlcy9TaG93Y2FzZVBhZ2UvaW5kZXgudnVlJ1xyXG5pbXBvcnQgTm90Rm91bmRQYWdlIGZyb20gJy4vcGFnZXMvTm90Rm91bmRQYWdlLnZ1ZSdcclxuXHJcblZ1ZS51c2UoVnVlUm91dGVyKVxyXG5WdWUudXNlKFZ1ZUhlYWQpXHJcblZ1ZS51c2UoU2Nyb2xsc3B5KVxyXG5cclxuY29uc3Qgcm91dGVzID0gW1xyXG4gICAge3BhdGg6ICcvJywgbmFtZTogJ2hvbWUnLCBjb21wb25lbnQ6IEhvbWVQYWdlfSxcclxuICAgIHtwYXRoOiAnL2Nhc2UvOnBhZ2VJZCcsIG5hbWU6ICdjYXNlJywgY29tcG9uZW50OiBTaG93Y2FzZVBhZ2V9LFxyXG4gICAge3BhdGg6ICcqJywgbmFtZTogJzQwNCcsIGNvbXBvbmVudDogTm90Rm91bmRQYWdlfVxyXG5dXHJcblxyXG5jb25zdCByb3V0ZXIgPSBuZXcgVnVlUm91dGVyKHtcclxuICAgIHJvdXRlcyxcclxuICAgIG1vZGU6ICdoYXNoJyxcclxuICAgIHNjcm9sbEJlaGF2aW9yKHRvLCBmcm9tLCBzYXZlZFBvc2l0aW9uKSB7XHJcblx0XHRpZiAodG8uaGFzaCkge1xyXG5cdFx0XHRyZXR1cm4geyBzZWxlY3RvcjogdG8uaGFzaCB9XHJcblx0XHR9IGVsc2UgaWYgKHNhdmVkUG9zaXRpb24pIHtcclxuICAgIFx0XHRyZXR1cm4gc2F2ZWRQb3NpdGlvbjtcclxuICAgIFx0fSBlbHNlIHtcclxuXHRcdFx0cmV0dXJuIHsgeDogMCwgeTogMCB9XHJcblx0XHR9XHJcblx0fVxyXG59KVxyXG5cclxuVnVlLnVzZShWdWVBbmFseXRpY3MsIHtcclxuXHRhcHBOYW1lOiAnR3JhbnQgQWRpZWxlJyxcclxuXHRhcHBWZXJzaW9uOiAnMS4xJyxcclxuXHR0cmFja2luZ0lkOiAnVUEtMTcwMDk0NzIxLTEnLFxyXG5cdFZ1ZVJvdXRlcjogcm91dGVyLFxyXG59KVxyXG5cclxudmFyIHZtID0gbmV3IFZ1ZSh7XHJcbiAgICByb3V0ZXJcclxufSkuJG1vdW50KCcjYXBwJylcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==